<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/14/2016"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="IT-DEV023"
  DTS:CreatorName="MLABS\mpark"
  DTS:Description="LSA Assignments Master Package"
  DTS:DTSID="{96CB80E1-E620-4C41-9C5D-C30A48C5DB69}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:FailParentOnFailure="True"
  DTS:LastModifiedProductVersion="14.0.3008.28"
  DTS:LocaleID="1033"
  DTS:MaxErrorCount="10"
  DTS:ObjectName="StagingHistorySalesForceMasterPackage"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="107"
  DTS:VersionGUID="{01671C2A-2DF9-4032-8F70-EF18D6465311}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{1E81EFD2-0858-4988-A4BD-342A2691D46E}"
      DTS:ObjectName="paramSSISOpsNF_From">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">ETLNotification@millenniumhealth.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{828B9C6F-189E-48FC-836F-31551AEC6F91}"
      DTS:ObjectName="paramSSISOpsNF_OnError_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{4606273A-6840-4F27-8216-9F418CD2A252}"
      DTS:ObjectName="paramSSISOpsNF_OnPostExecute_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{485F9051-0436-47C8-A316-7DFD5C3A83CD}"
      DTS:ObjectName="paramSSISOpsNF_OnWarning_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{B087A542-04F6-4D68-87FD-A4EB40D1A510}"
      DTS:ObjectName="paramSSISOpsNF_OtherConfigSettings">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">PRIORITY_MODE=DELAYED;EMAIL_FORMAT=HTML;SMTP_UID=;SMTP_PWD=;SMTP_PORT=465;SMTP_USESSL=True;NOTIFY_ONERROR=True;NOTIFY_ONWARNING=False;NOTIFY_ONSUCCESS=False;NOTIFY_ONCOMPLETE=False;SMS_EMAILLIST=;MAX_NOTIFICATIONS=10;ENABLE_TIME_THRESHOLD=False;ENABLE_ROWCOUNT_THRESHOLD=False;SMS_MAXLENGTH=140;FILTERED_ALERTS=;CC_EMAILLIST=;BCC_EMAILLIST=;NOTIFY_USING_EMAIL=True;NOTIFY_USING_SMS=False;NOTIFY_USING_EVENTLOG=False;NOTIFY_USING_LOGFILE=False;LOG_FOLDER_PATH=C:\SSIS\Log;USE_CUSTOM_EMAIL_TEMPLATE=False;CUSTOM_EMAIL_TEMPLATE_FILEPATH=C:\SSIS\Config\NF_EmailTemplate.htm;DELETE_LOG_OLDER_THAN_DAYS=5</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{4CBB97C8-1F79-40EF-82C5-21A6FC6BC808}"
      DTS:ObjectName="paramSSISOpsNF_SMTPServerName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">mail.millenniumhealth.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{569EB00D-8E6F-4788-B041-A673F955DEE4}"
      DTS:ObjectName="paramSSISOpsNF_To">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">darlington.nwemeh@millenniumhealth.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="20"
      DTS:DTSID="{A54CF4F4-D740-43B7-B273-9A4BAAE232EF}"
      DTS:ObjectName="pJobInstanceParentID">
      <DTS:Property
        DTS:DataType="20"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{CA74643B-1A13-455E-9AE1-A4BD03E42F1A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_AlertList">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{EC8D765E-8E02-45F9-90CE-FBE03FF967B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_AlertList_All">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{1CCBC708-3592-4D62-BBCA-07D091D12BA3}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::paramSSISOpsNF_From]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_From">
      <DTS:VariableValue
        DTS:DataType="8">ETLNotification@millenniumhealth.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{5A19917B-F320-408F-BE7D-AA90E55D29A0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_Notification_Counter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{405263D1-E731-485F-85E9-E7032B787904}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::paramSSISOpsNF_OtherConfigSettings]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_OtherConfigSettings">
      <DTS:VariableValue
        DTS:DataType="8">PRIORITY_MODE=DELAYED;EMAIL_FORMAT=HTML;SMTP_UID=;SMTP_PWD=;SMTP_PORT=465;SMTP_USESSL=True;NOTIFY_ONERROR=True;NOTIFY_ONWARNING=False;NOTIFY_ONSUCCESS=False;NOTIFY_ONCOMPLETE=False;SMS_EMAILLIST=;MAX_NOTIFICATIONS=10;ENABLE_TIME_THRESHOLD=False;ENABLE_ROWCOUNT_THRESHOLD=False;SMS_MAXLENGTH=140;FILTERED_ALERTS=;CC_EMAILLIST=;BCC_EMAILLIST=;NOTIFY_USING_EMAIL=True;NOTIFY_USING_SMS=False;NOTIFY_USING_EVENTLOG=False;NOTIFY_USING_LOGFILE=False;LOG_FOLDER_PATH=C:\SSIS\Log;USE_CUSTOM_EMAIL_TEMPLATE=False;CUSTOM_EMAIL_TEMPLATE_FILEPATH=C:\SSIS\Config\NF_EmailTemplate.htm;DELETE_LOG_OLDER_THAN_DAYS=5</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{F08D759C-B8EF-422F-A179-46A8C847F8D7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::paramSSISOpsNF_SMTPServerName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_SMTPServerName">
      <DTS:VariableValue
        DTS:DataType="8">mail.millenniumhealth.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{5D661DA9-6F61-4DA7-B53E-0D0C2C4A7D7B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::paramSSISOpsNF_To]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_To">
      <DTS:VariableValue
        DTS:DataType="8">darlington.nwemeh@millenniumhealth.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls execution of all event handlers for BIxPress Auditing Framework. Set this variable to True or -1 if you want to disable auditing framework related code inside all eventhandlers. You may also have to set Package.LoggingMode=2 along with this variable if you want to disable framework completely."
      DTS:DTSID="{143494D7-E046-44E6-B3AD-E9714902E277}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::paramSSISOps_DisableBIxAuditing]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_DisableBIxAuditing">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{26DDA6F5-06FD-4242-9B0E-C610D5FC995B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vCurJobID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8C5C4573-282F-4C09-B625-BF2E24A8D35E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vCurJobInstanceID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C018A84A-29C4-4E19-81C7-EE13297AE908}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vCurUserID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EAC720D3-15AE-49FC-B581-F580BD05DDC8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vDeletedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F08270FC-8CC3-4D03-8C0F-849D190DB50A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vEnvironmentTEXT"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CB772CB6-CFB1-4FCD-9BE5-EBD9B39B2E0F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vInsertedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CF187F38-2995-43F9-827B-513E8D8B1C74}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_STR, 4, 1252) DATEPART(&quot;yyyy&quot;, @[System::StartTime]) + &quot;-&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mm&quot;, @[System::StartTime]), 2) + &quot;-&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;dd&quot;, @[System::StartTime]), 2) + &quot; &quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;hh&quot;, @[System::StartTime]), 2) + &quot;:&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mi&quot;, @[System::StartTime]), 2) + &quot;:&quot; +&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;ss&quot;, @[System::StartTime]), 2) + &quot;.&quot; +&#xA;RIGHT(&quot;000&quot; + (DT_STR, 3, 1252) DATEPART(&quot;ms&quot;, @[System::StartTime]), 3)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vPackageStartDate">
      <DTS:VariableValue
        DTS:DataType="8">2025-01-13 14:25:59.000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5DF21F3E-9A52-4FCB-9DFF-83798AC8E1E3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vRejectedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E84FC8E8-FD02-4393-A1E5-FF16B9A0A671}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vUpdatedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">6,22,PipelineInitialization,18,OnPipelineRowsSent,24,OnPipelinePrePrimeOutput,25,OnPipelinePostPrimeOutput,24,OnPipelinePreEndOfRowset,25,OnPipelinePostEndOfRowset</DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="PipelineInitialization"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Completion (Audit)"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1C4C69A7-F5CA-48BA-A4D5-8F38D44BA281}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Completion (Audit)">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Completion (Audit)\Mark Job As Complete in Job"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{C5E63F1E-E02F-455B-B751-9198888B6B3D}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Job As Complete in Job"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="UPDATE [Audit].[Job] &#xA;SET  LastRunStartDate = ?,&#xA;  LastRunEndDate = GETDATE(), &#xA;  ExpectedRunTimeNUMBER = DATEDIFF(MS, ?, GETDATE()),&#xA;  JobLastStatus = 'Pass' &#xA; WHERE JobID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Completion (Audit)\Mark Job as Complete in JobInstance"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{F65A90E6-D156-4F37-A836-DFADB9E29069}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Job as Complete in JobInstance"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="EXEC [Audit].[log_JobInstance] &#xA;@JobInstanceID = ?,&#xA;@RowCreatedNumber = ?, &#xA;@RowUpdatedNumber = ?, &#xA;@RowDeletedNumber = ?, &#xA;@RowRejectedNumber=?, &#xA;@JobSuccessIND = 'S',&#xA;@JobCompleteDTS = 'Today';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vInsertedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vUpdatedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::vDeletedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::vRejectedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute  StagingHistorySalesForce Packages"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{23DA65EE-D9E5-444E-A149-91EB334720D8}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute  StagingHistorySalesForce Packages">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Execute  StagingHistorySalesForce Packages\LoadTablePreStagingSalesForceContactStagingHistorySalesForceContactInitIncr"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{D4828E34-7ABD-4C5C-BE45-E1AFED23F654}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="LoadTablePreStagingSalesForceContactStagingHistorySalesForceContactInitIncr"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>LoadTablePreStagingSalesForceContactStagingHistorySalesForceContactInitIncr.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>pJobInstanceParentID</ParameterName>
                <BindedVariableOrParameterName>User::vCurJobInstanceID</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute  StagingHistorySalesForce Packages\LoadTablePreStagingSalesForceLSAAssignmentCStagingHistorySalesForceLSAAssignmentCInitIncr"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{BCCA7E9A-94A1-433C-B091-955588D01A8E}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="LoadTablePreStagingSalesForceLSAAssignmentCStagingHistorySalesForceLSAAssignmentCInitIncr"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>LoadTablePreStagingSalesForceLSAAssignmentCStagingHistorySalesForceLSAAssignmentCInitIncr.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>pJobInstanceParentID</ParameterName>
                <BindedVariableOrParameterName>User::vCurJobInstanceID</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute  StagingHistorySalesForce Packages\LoadTablePreStagingSalesForceMLISAccountCStagingHistorySalesForceMLISAccountCInitIncr"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{7691F9CD-11CB-4A2C-8659-3773A6BA6A44}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="LoadTablePreStagingSalesForceMLISAccountCStagingHistorySalesForceMLISAccountCInitIncr"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>LoadTablePreStagingSalesForceMLISAccountCStagingHistorySalesForceMLISAccountCInitIncr.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>pJobInstanceParentID</ParameterName>
                <BindedVariableOrParameterName>User::vCurJobInstanceID</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute  StagingHistorySalesForce Packages.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{C27A11CF-826E-4467-9D36-27FE0BEA5839}"
          DTS:From="Package\Execute  StagingHistorySalesForce Packages\LoadTablePreStagingSalesForceContactStagingHistorySalesForceContactInitIncr"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Execute  StagingHistorySalesForce Packages\LoadTablePreStagingSalesForceMLISAccountCStagingHistorySalesForceMLISAccountCInitIncr" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute  StagingHistorySalesForce Packages.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{ED48688A-308A-4898-8F13-6E15BB4D022C}"
          DTS:From="Package\Execute  StagingHistorySalesForce Packages\LoadTablePreStagingSalesForceMLISAccountCStagingHistorySalesForceMLISAccountCInitIncr"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Execute  StagingHistorySalesForce Packages\LoadTablePreStagingSalesForceLSAAssignmentCStagingHistorySalesForceLSAAssignmentCInitIncr" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialization (Audit)"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialization (Audit)">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DTSID="{621AB191-5A0A-43CC-AE08-FD1D50548577}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute cmd shell and retrieve environment variable information">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a8906c1d7ee042b1b645a66a049c70c9"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp"
              ReadWriteVariables="User::vEnvironmentTEXT">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Diagnostics;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_1ac71edf38774ce3aaaabd70002d56d2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            string sCmdOutput = "";

            System.Diagnostics.Process process = new System.Diagnostics.Process();
            System.Diagnostics.ProcessStartInfo startInfo = new System.Diagnostics.ProcessStartInfo();

            startInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;
            startInfo.RedirectStandardInput = true;
            startInfo.RedirectStandardOutput = true;
            startInfo.RedirectStandardError = true;
            startInfo.UseShellExecute = false;

            startInfo.FileName = "cmd.exe";
            startInfo.Arguments = @"/c set";
            process.StartInfo = startInfo;

            process.Start();

            StreamReader reader = process.StandardOutput;

            string line;
            while((line = reader.ReadLine()) != null) {
                sCmdOutput = sCmdOutput + line + "|";
            }

            sCmdOutput = sCmdOutput.Substring(0, sCmdOutput.Length - 1);

            Dts.Variables["User::vEnvironmentTEXT"].Value = sCmdOutput;
            //MessageBox.Show(sCmdOutput);

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_a8906c1d7ee042b1b645a66a049c70c9.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{2e145202-cc60-402b-bc78-44fb3093a536}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1ac71edf38774ce3aaaabd70002d56d2</RootNamespace><AssemblyName>ST_a8906c1d7ee042b1b645a66a049c70c9</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1ac71edf38774ce3aaaabd70002d56d2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1ac71edf38774ce3aaaabd70002d56d2</msb:DisplayName>
		<msb:ProjectId>{BB0B653C-B149-4E56-9FC4-855F60B3DB18}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a8906c1d7ee042b1b645a66a049c70c9.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Settings.get_Default():ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Sett" +
    "ings")]

namespace ST_1ac71edf38774ce3aaaabd70002d56d2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1ac71edf38774ce3aaaabd70002d56d2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1ac71edf38774ce3aaaabd70002d56d2")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1ac71edf38774ce3aaaabd70002d56d2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_a8906c1d7ee042b1b645a66a049c70c9.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAP5NYFcAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAnjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFAwAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
MAAAAAAAAEgAAAACAAUAQCIAABAOAAABAAAAAAAAAIghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBACzAAAAAgAAEXJzAABwCnMWAAAKC3MXAAAKDAgXbxgAAAoIF28Z
AAAKCBdvGgAACggXbxsAAAoIFm8cAAAKCHJ1AABwbx0AAAoIcoUAAHBvHgAACgcIbx8AAAoHbyAA
AAomB28hAAAKDSsOBhEEcpMAAHAoIgAACgoJbyMAAAolEwQt5wYWBm8kAAAKF1lvJQAACgoCKCYA
AApvJwAACnKXAABwbygAAAoGbykAAAoCKCYAAAoWbyoAAAoqHgIoKwAACioAAAAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAA8BAAAI34AAKgEAAD4BgAA
I1N0cmluZ3MAAAAAoAsAAMgAAAAjVVMAaAwAABAAAAAjR1VJRAAAAHgMAACYAQAAI0Jsb2IAAAAA
AAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAIwAAAAUAAAAGAAAACQAAAAEAAAArAAAAAgAAAA8A
AAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAO
AD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4C
cAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAAQE8QMGACEEugAGACYEugAG
AEoEcAIKAHYEYAQKAI8EYAQGAKQEbwMOAMYEFAEKAOgE8QMKAPAE8QMKAAEF8QMGAMAFtgUGAOAF
ugAGAO4FtgUOABcGFAESAHAGUAYSAIgGUAYAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQ
AGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkA
BgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEk
AAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRi/BIkA
AgC8IAAAAACGABoCGwACAHshAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8
AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsA
CQC8ARsAoQA4BGIAoQBTBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsA2QC8ARsA4QC8
ARsA4QAUBY0A4QAkBZMA4QA+BZMA4QBZBZMA4QBzBZMA4QCHBVgA4QCUBVgA2QCiBZgA2QCwBZ4A
2QDNBaIA+QDnBacAAQH5Ba4A+QACBrIA+QANBrYAGQApBrwACQF6BsIAEQGRBsgAGQGaBs8ACQGk
Bl0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAFABLgAjAFABLgBjAHYBLgALAN8ALgATACcB
LgAzACcBLgArAFABLgA7AFYBLgBDAFABLgBbAG0BQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQDU
AAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEA
AAB5Fz9KAAAAAAAAzQMAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAAM
AAAAAAAAAAAAAAAKAPUAAAAAAAwAAAAAAAAAAAAAAAoAMQYAAAAAAAAAAAEAAACzBgAABQAEAAAA
ADxNb2R1bGU+AFNUX2E4OTA2YzFkN2VlMDQyYjFiNjQ1YTY2YTA0OWM3MGM5LmRsbABSZXNvdXJj
ZXMAU1RfMWFjNzFlZGYzODc3NGNlM2FhYWFiZDcwMDAyZDU2ZDIuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAFNUXzFhYzcxZWRmMzg3NzRjZTNhYWFhYmQ3MDAwMmQ1NmQyAFNjcmlwdFJl
c3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0
YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lz
dGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBB
c3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFNUX2E4OTA2YzFkN2VlMDQyYjFiNjQ1YTY2YTA0OWM3MGM5AFN5c3RlbS5EaWFnbm9zdGlj
cwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2Rl
bABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0
ZQBQcm9jZXNzAFByb2Nlc3NTdGFydEluZm8AUHJvY2Vzc1dpbmRvd1N0eWxlAHNldF9XaW5kb3dT
dHlsZQBzZXRfUmVkaXJlY3RTdGFuZGFyZElucHV0AHNldF9SZWRpcmVjdFN0YW5kYXJkT3V0cHV0
AHNldF9SZWRpcmVjdFN0YW5kYXJkRXJyb3IAc2V0X1VzZVNoZWxsRXhlY3V0ZQBzZXRfRmlsZU5h
bWUAc2V0X0FyZ3VtZW50cwBzZXRfU3RhcnRJbmZvAFN0YXJ0AFN5c3RlbS5JTwBTdHJlYW1SZWFk
ZXIAZ2V0X1N0YW5kYXJkT3V0cHV0AFN0cmluZwBDb25jYXQAVGV4dFJlYWRlcgBSZWFkTGluZQBn
ZXRfTGVuZ3RoAFN1YnN0cmluZwBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlh
YmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAHNldF9WYWx1ZQBzZXRfVGFza1Jl
c3VsdABTVF8xYWM3MWVkZjM4Nzc0Y2UzYWFhYWJkNzAwMDJkNTZkMi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAAAAcVMAVABfADEAYQBjADcAMQBlAGQAZgAzADgANwA3ADQAYwBlADMA
YQBhAGEAYQBiAGQANwAwADAAMAAyAGQANQA2AGQAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAQAPYwBtAGQALgBlAHgAZQAADS8AYwAgAHMAZQB0AAADfAAALVUA
cwBlAHIAOgA6AHYARQBuAHYAaQByAG8AbgBtAGUAbgB0AFQARQBYAFQAAAAAAE3NRm2/+7JPkSZQ
e37UoOIACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIV
BAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAAS
WQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEFIAEBEXUEIAEBAgUgAQEScQMgAAIEIAAS
eQYAAw4ODg4DIAAOAyAACAUgAg4ICAUgABKAhQUgABKAiQYgARKAjRwEIAEBHAoHBQ4SbRJxEnkO
RwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAu
TkVUIEZyYW1ld29yayA0KAEAI1NUXzFhYzcxZWRmMzg3NzRjZTNhYWFhYmQ3MDAwMmQ1NmQyAAAF
AQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEAAAB4MAAAAAAAAAAAAACOMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgDAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAD9KeRcAAAEAP0p5Fz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAxAGEAYwA3ADEAZQBkAGYAMwA4ADcANwA0AGMAZQAzAGEAYQBhAGEAYgBkADcAMAAwADAAMgBk
ADUANgBkADIAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADAA
OQAuADEAOQAwADAANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBh
ADgAOQAwADYAYwAxAGQANwBlAGUAMAA0ADIAYgAxAGIANgA0ADUAYQA2ADYAYQAwADQAOQBjADcA
MABjADkALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwBhADgAOQAwADYAYwAxAGQANwBlAGUAMAA0ADIAYgAxAGIANgA0
ADUAYQA2ADYAYQAwADQAOQBjADcAMABjADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AMQBhAGMANwAxAGUAZABmADMAOAA3ADcANABjAGUAMwBhAGEAYQBh
AGIAZAA3ADAAMAAwADIAZAA1ADYAZAAyAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADAAMAA5AC4AMQA5ADAAMAA3AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAAMAA5AC4AMQA5ADAAMAA3AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Log Environment"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{39B46BDD-B017-4486-B6E9-5C859DC582F8}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Environment"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="INSERT INTO Audit.Environment (&#xA;                RunningJobsText, &#xA;                EnvironmentText, &#xA;                JobInstanceID) VALUES &#xA;                (?, ?, ?)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vEnvironmentTEXT"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="8000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Populate ETLUser"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{53681F93-7D0C-4942-8E6E-57BC00502387}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate ETLUser"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="Exec [Audit].[Log_ETLUser] @UserNAME = ?, @UserEMAIL = ?, @UserID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::UserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="256" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::pNotificationEmail"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="256" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurUserID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Populate Joblog"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{7764C30F-43D1-4477-B1AC-B13C773E0CB3}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate Joblog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="EXEC [Audit].[Log_Job_OnBegin] &#xA;@JobName = ?,&#xA;@PackageID = ?,&#xA;@JobID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Populate new Job Instance"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{8ADA3897-7AF0-44F7-88DD-19ABECB004E2}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate new Job Instance"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="EXEC [Audit].[log_JobInstance] &#xA;@JobID = ?, &#xA;@UserID = ?,&#xA;@JobInstanceParentID = ?,&#xA;@packageVersionID = ?,&#xA;@ExecutionID = ?,&#xA;@JobStartDTS = ?, &#xA;@currentJobInstanceID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vCurUserID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="$Package::pJobInstanceParentID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::VersionGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{404156B4-38EE-43B7-B728-2DE726E9CFA0}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Project::pDebugMode] == True"
          DTS:From="Package\Initialization (Audit)\Populate new Job Instance"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{6B15B4F2-657B-45AA-B349-6E7F91E5001E}"
          DTS:From="Package\Initialization (Audit)\Populate Joblog"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initialization (Audit)\Populate new Job Instance" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{42B250E9-FD1D-4DD9-94E5-957DE6AE525B}"
          DTS:From="Package\Initialization (Audit)\Populate ETLUser"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Initialization (Audit)\Populate Joblog" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{C3AA96D5-A464-46A2-85E4-0B64CB0A23C5}"
          DTS:From="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Initialization (Audit)\Log Environment" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3EE65494-8CCB-4238-8278-D294EE931DBE}"
      DTS:From="Package\Initialization (Audit)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Execute  StagingHistorySalesForce Packages" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{47CB42FC-A223-4976-8CE6-9A479DB0EB5A}"
      DTS:From="Package\Execute  StagingHistorySalesForce Packages"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Completion (Audit)" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{9E09C8D0-8E59-4097-B1D5-E159D84AF8D8}"
      DTS:EventID="1003783260"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{E9798807-7D4F-4AFD-AC04-A440037CDC71}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{4ADF30EE-CA66-4A16-9DCF-602A638A48B7}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{96CB80E1-E620-4C41-9C5D-C30A48C5DB69}</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Mark Job as a failure"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{641339FC-1D95-4862-81E1-F9035ABE40BD}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Job as a failure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="UPDATE [Audit].[Job] &#xA;SET JobLastStatus = 'Fail' &#xA;WHERE JobID= ?&#xA;&#xA;UPDATE [Audit].[JobInstance]&#xA;SET JobSuccessIND = 'F'&#xA;WHERE JobInstanceID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{92044CE4-C4AC-49A6-A2C2-B4401FD40D4D}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnError_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_7bb2e830b292443bb30b872c32151637"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_7bb2e830b292443bb30b872c32151637")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_7bb2e830b292443bb30b872c32151637")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_7bb2e830b292443bb30b872c32151637
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_7bb2e830b292443bb30b872c32151637.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d1ad214b-83ee-4719-9b76-6b04c460a834}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_7bb2e830b292443bb30b872c32151637</RootNamespace>
    <AssemblyName>st_7bb2e830b292443bb30b872c32151637</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_7bb2e830b292443bb30b872c32151637</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_7bb2e830b292443bb30b872c32151637</msb:DisplayName>
		<msb:ProjectId>{390EAF1E-298C-4B22-B7AB-08848FE6F423}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_7bb2e830b292443bb30b872c32151637.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_7bb2e830b292443bb30b872c32151637.Properties.Settings.get_Default():st_7bb2e830b292443bb30b872c32151637.Properties.Sett" +
    "ings")]

namespace st_7bb2e830b292443bb30b872c32151637.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_7bb2e830b292443bb30b872c32151637.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_7bb2e830b292443bb30b872c32151637.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_7bb2e830b292443bb30b872c32151637.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_7bb2e830b292443bb30b872c32151637.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_7bb2e830b292443bb30b872c32151637.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_7bb2e830b292443bb30b872c32151637.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKzZpFcAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA3i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIgvAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
LwAAAAAAAEgAAAACAAUAyCIAAMAMAAABAAAAAAAAABAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqNgIoFgAAChZvFwAACioAAAAbMAIAZwAAAAIAABEUChYLAigWAAAKbxgA
AAoDbxkAAAoCKBYAAApvGAAAChIAbxoAAAoGA28bAAAKBG8cAAAK3gwGLAgGbx0AAAoXC9zeEyYC
KBYAAApvGAAACm8eAAAK/hreDQYsCQctBgZvHQAACtwqAAEoAAACACcADzYADAAAAAAAAAQAQEQA
Ex8AAAECAAQAVVkADQAAAAAbMAIAaAAAAAMAABEUChYLAigWAAAKbxgAAAoDbx8AAAoCKBYAAApv
GAAAChIAbxoAAAoGA28bAAAKbyAAAAoM3gwGLAgGbx0AAAoXC9zeEyYCKBYAAApvGAAACm8eAAAK
/hreDQYsCQctBgZvHQAACtwIKgEoAAACACcADzYADAAAAAAAAAQAQEQAEx8AAAECAAQAVVkADQAA
AAAeAighAAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAAGAQAACN+AACEBAAAPAYAACNTdHJpbmdzAAAAAMAKAAB0AAAAI1VTADQLAAAQAAAAI0dV
SUQAAABECwAAfAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAAB8AAAAFAAAA
BgAAAAsAAAAEAAAAIQAAAAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAA
AAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCNAnMCBgC4AqYC
BgDPAqYCBgDsAqYCBgALA6YCBgAkA6YCBgA9A6YCBgBYA6YCBgBzA6YCBgCMA6YCBgDFA6UDBgDl
A6UDBgAWBAMEBgAzBLoABgA4BLoABgBcBKYCCgCIBHIECgChBHIEBgC2BKUDDgDYBBQBDgD6BBQB
EgBiBUIFEgCXBUIFEgCuBUIFBgDXBboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABr
ADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAMABEAfwETABEArAEXABEA9gE5AAYG
OgJSAFaAQgJVAFaASgJVAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY0QSUAAIA
uyAAAAAAhgAaAhsAAgDMIAAAAACBAB8CRwACAGghAAAAAIEALQJNAAQABCIAAAAAhhi8ARsABQAA
AAEAUgIAAAEAWAIAAAIAZQIAAAEAWAI5ALwBYwBBALwBYwBJALwBYwBRALwBYwBZALwBYwBhALwB
YwBpALwBYwBxALwBYwB5ALwBYwCBALwBYwCJALwBaACRALwBGwCZALwBGwAJALwBGwChAEoEbQCh
AGUEdAApALwBeQC5ALwBhQDJALwBGwARALwBGwDRALwBGwAZAAwFmADZABQFaADZAHQFnQDhAIoF
YwDhAKEFogDpALcFqQDxAMAFrwDpAMoFGwDhANEFGwDhAOEFYwDxAO0FugAZALwBGwAIABQAWQAI
ABgAXgApAJMAiwAuABsANgEuACMANgEuAGMAXAEuAAsAxQAuABMADQEuADMADQEuACsANgEuADsA
PAEuAEMANgEuAFsAUwFDAGsAXgBJAJMAiwBhAJsAXgCDAKsAXgCAALQAvgACAAEAAwADAAAAbwEv
AAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAArRcWSQAAAAAAAH8A
AAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1
AAAAAAAMAAAAAAAAAAAAAAAKACMFAAAAAAAAAAABAAAA9wUAAAUABAAAAAA8TW9kdWxlPgBzdF83
YmIyZTgzMGIyOTI0NDNiYjMwYjg3MmMzMjE1MTYzNy5kbGwAUmVzb3VyY2VzAHN0XzdiYjJlODMw
YjI5MjQ0M2JiMzBiODcyYzMyMTUxNjM3LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBz
dF83YmIyZTgzMGIyOTI0NDNiYjMwYjg3MmMzMjE1MTYzNwBTY3JpcHRSZXN1bHRzAG1zY29ybGli
AFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVt
LlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRp
b24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1
bHQARGVmYXVsdABNYWluAFdyaXRlVmFyaWFibGUAUmVhZFZhcmlhYmxlAHZhbHVlX18AU3VjY2Vz
cwBGYWlsdXJlAHZhbHVlAHZhcmlhYmxlTmFtZQB2YXJpYWJsZVZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25v
c3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBzZXRfVGFza1Jlc3VsdABNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJp
YWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIATG9ja0ZvcldyaXRlAFZhcmlhYmxl
cwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0Ac2V0X1ZhbHVlAFVubG9jawBSZXNldABF
eGNlcHRpb24ATG9ja0ZvclJlYWQAZ2V0X1ZhbHVlAHN0XzdiYjJlODMwYjI5MjQ0M2JiMzBiODcy
YzMyMTUxNjM3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxcwB0AF8ANwBiAGIA
MgBlADgAMwAwAGIAMgA5ADIANAA0ADMAYgBiADMAMABiADgANwAyAGMAMwAyADEANQAxADYAMwA3
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAeAwPhHX9NUenJVxc
MCQueQAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUE
CAASGQMGEgwEAAASDAQIABIMBSACAQ4cBCABHA4CBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgG
AAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQYgAQEQ
EnUFIAESeRwEIAEBHAUHAhJ1AgMgABwGBwMSdQIcRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0XzdiYjJl
ODMwYjI5MjQ0M2JiMzBiODcyYzMyMTUxNjM3AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAsC8AAAAAAAAAAAAAzi8A
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAvAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAWSa0XAAABABZJrRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcwB0
AF8ANwBiAGIAMgBlADgAMwAwAGIAMgA5ADIANAA0ADMAYgBiADMAMABiADgANwAyAGMAMwAyADEA
NQAxADYAMwA3AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAA2
ADEALgAxADgANwAxADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8A
NwBiAGIAMgBlADgAMwAwAGIAMgA5ADIANAA0ADMAYgBiADMAMABiADgANwAyAGMAMwAyADEANQAx
ADYAMwA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAcwB0AF8ANwBiAGIAMgBlADgAMwAwAGIAMgA5ADIANAA0ADMAYgBiADMA
MABiADgANwAyAGMAMwAyADEANQAxADYAMwA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAHMAdABfADcAYgBiADIAZQA4ADMAMABiADIAOQAyADQANAAzAGIAYgAzADAA
YgA4ADcAMgBjADMAMgAxADUAMQA2ADMANwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA3ADEAMAAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA3ADEAMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{07C92CE7-56AA-4747-8500-1ABDDF0047EC}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnError"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnAlert @Scope='Package',@EventType='E',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{0360E280-0E51-41DF-B93E-6E3576539018}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnError"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnAlert @Scope='Task',@EventType='E',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsNFObj_UpdateAlertList"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{12DF4C46-89D1-4B0C-80A9-B89D0AC31F90}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_UpdateAlertList">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::paramSSISOpsNF_OnError_Disable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_256db09299e848e69b21ce8bd2db0b36"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_256db09299e848e69b21ce8bd2db0b36")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_256db09299e848e69b21ce8bd2db0b36")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_256db09299e848e69b21ce8bd2db0b36.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b3fb8736-6dc6-4b13-9b2e-6698f9cbd0bf}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_256db09299e848e69b21ce8bd2db0b36</RootNamespace>
    <AssemblyName>st_256db09299e848e69b21ce8bd2db0b36</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
Copyright © 2014 Pragmatic Works Inc.
#####################################################################################################################
LEGAL NOTICE
#####################################################################################################################
THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
##################################################################################################################### 
*/
#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

using System.Net;
using System.Net.Mail;
using System.Collections;


#endregion

namespace st_256db09299e848e69b21ce8bd2db0b36
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            UpdateAlertList();
            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion

        private const string NotificationFrameworkAlertListVariableName = "User::varSSISOpsNF_AlertList";
        private const string NotificationFrameworkAlertListAllVariableName = "User::varSSISOpsNF_AlertList_All";
        private const string NotificationFrameworkCounter = "User::varSSISOpsNF_Notification_Counter";
        private const string NotificationFrameworkSubComponentName = "BI xPress Notification Framework Send Alert";

        private void UpdateAlertList()
        {
            System.Collections.Hashtable oRuntimeSettings = GetRuntimeSettings();

            string sFilteredAlerts = "|" + oRuntimeSettings["FILTERED_ALERTS"].ToString() + "|";

            string errorCodeValue = ReadVariable("System::ErrorCode").ToString();

            if (sFilteredAlerts.IndexOf("|" + errorCodeValue.ToString() + "|") >= 0)
                return; // Filter This

            string errorDescription = ReadVariable("System::ErrorDescription").ToString();
            string sourceName = ReadVariable("System::SourceName").ToString();
            string sourceId = ReadVariable("System::SourceID").ToString();

            bool isErrorScope = false;

            try
            {
                if (Dts.VariableDispenser.Contains("System::Cancel"))
                    isErrorScope = true;
                else
                    isErrorScope = false;
            }
            catch (Exception)
            {
                isErrorScope = false;
            }

            AlertType alertType = isErrorScope ? AlertType.ErrorAlert : AlertType.WarningAlert;

            int errorCode;

            if (string.IsNullOrEmpty(errorCodeValue) || !int.TryParse(errorCodeValue, out errorCode))
                errorCode = 0;

            AddAlertInfo(errorDescription, errorCode, sourceName, sourceId, alertType);
        }

        private void AddAlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
        {
            if (string.IsNullOrEmpty(alertDescription))
                alertDescription = "<NO ALERT DESCRIPTION GIVEN>";

            if (string.IsNullOrEmpty(sourceName))
                sourceName = "<NO ALERT SOURCE NAME GIVEN>";

            System.Text.StringBuilder alertListBuilder = new System.Text.StringBuilder();
            System.Text.StringBuilder alertListAllBuilder = new System.Text.StringBuilder();

            AlertInfo alertInfo = new AlertInfo(alertDescription, alertCode, sourceName, sourceId, alertType);

            System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(AlertInfo), new Type[] { typeof(AlertType) });

            // Build a flat list of XML AlertInfo elements that don't have to be validated each time we add new node(s).  This will save on processing time but will increase code complexity in the OnPostExecute event handler.
            using (System.IO.StringWriter stringWriter = new System.IO.StringWriter())
            {
                xmlSerializer.Serialize(stringWriter, alertInfo);

                System.Xml.XmlDocument alertInfoDocument = new System.Xml.XmlDocument();

                alertInfoDocument.LoadXml(stringWriter.GetStringBuilder().ToString());

                foreach (System.Xml.XmlNode documentNode in alertInfoDocument.ChildNodes)
                {
                    if (documentNode is System.Xml.XmlDeclaration || documentNode is System.Xml.XmlComment || documentNode is System.Xml.XmlAttribute || string.IsNullOrEmpty(documentNode.OuterXml))
                        continue;

                    string outerXml = documentNode.OuterXml;

                    outerXml = outerXml.Replace("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"", string.Empty).Replace("xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", string.Empty);

                    alertListBuilder.Append(outerXml);
                    alertListAllBuilder.Append(outerXml);
                }
            }

            string updatedAlertList = ReadVariable(NotificationFrameworkAlertListVariableName) as string;
            string existingAlertList;

            if (!string.IsNullOrEmpty(updatedAlertList))
                existingAlertList = updatedAlertList + alertListBuilder.ToString();
            else
                existingAlertList = alertListBuilder.ToString();

            WriteVariable(NotificationFrameworkAlertListVariableName, existingAlertList);

            string updatedAlertListAll = ReadVariable(NotificationFrameworkAlertListAllVariableName) as string;
            string existingAlertListAll;

            if (!string.IsNullOrEmpty(updatedAlertListAll))
                existingAlertListAll = updatedAlertListAll + alertListAllBuilder.ToString();
            else
                existingAlertListAll = alertListAllBuilder.ToString();
            
            WriteVariable(NotificationFrameworkAlertListAllVariableName, existingAlertListAll);
        }
        private void SetSetting(string SettingName, object Value, System.Collections.Hashtable runtimeSettings)
        {
            SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (!runtimeSettings.ContainsKey(SettingName))
                throw new Exception(SettingName + " setting doesn't exist in runtime setting list.");

            runtimeSettings[SettingName] = Value;
        }

        private object GetSetting(string settingName, System.Collections.Hashtable runtimeSettings)
        {
            settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (runtimeSettings.ContainsKey(settingName))
                return runtimeSettings[settingName];

            // If key not found then set default 
            switch (settingName)
            {
                case "MAX_NOTIFICATIONS":
                    return 1;
                case "ENABLE_ROWCOUNT_THRESHOLD":
                    return false;
                case "ENABLE_TIME_THRESHOLD":
                    return false;
                case "PRIORITY_MODE":
                    //// DELAYED (After Package) or URGENT (After Task) 
                    return "URGENT";
                case "EMAIL_FORMAT":
                    //// TEXT or HTML 
                    return "TEXT";
                case "SMTP_PORT":
                    //// Default 25 
                    return 25;
                case "SMTP_USESSL":
                    //// Default False
                    return false;
                case "SMTP_UID":
                    return "";
                case "SMTP_PWD":
                    return "";
                case "SMS_EMAILLIST":
                    ////Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                    return "";
                case "FILTERED_ALERTS":
                    ////Must be pipe seperated e.g. -2344556|-11223445 .... 
                    return "";
                case "NOTIFY_ONERROR":
                    return true;
                case "NOTIFY_ONWARNING":
                    return false;
                case "NOTIFY_ONSUCCESS":
                    return false;
                case "NOTIFY_ONCOMPLETE":
                    return false;
                case "SMS_MAXLENGTH":
                    return 160;
                case "NF_CHECK":
                    return "";
                case "CC_EMAILLIST":
                    return "";
                case "BCC_EMAILLIST":
                    return "";
                case "NOTIFY_USING_EMAIL":
                    return true;
                case "NOTIFY_USING_SMS":
                    return true;
                case "NOTIFY_USING_EVENTLOG":
                    return false;
                case "NOTIFY_USING_LOGFILE":
                    return false;
                case "LOG_FOLDER_PATH":
                    return "C:\\SSIS\\Log";
                case "DELETE_LOG_OLDER_THAN_DAYS":
                    return 5;
                case "USE_CUSTOM_EMAIL_TEMPLATE":
                    return false;
                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                    return "C:\\SSIS\\Config\\NF_EmailTemplate.htm";
                default:
                    return null;
            }
        }

        [Serializable]
        public enum AlertType
        {
            ErrorAlert = 1,
            WarningAlert = 2,
            TimeThresholdAlert = 3,
            RowCountThresholdAlert = 4
        }

        // NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
        // In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
        public System.Collections.Hashtable GetRuntimeSettings()
        {
            object otherConfigSettingsVariableValue = ReadVariable("User::varSSISOpsNF_OtherConfigSettings");
            string otherConfigSettings = otherConfigSettingsVariableValue != null ? otherConfigSettingsVariableValue.ToString() : null;

            System.Collections.Hashtable runtimeSettings = new System.Collections.Hashtable();

            // Set Default values
            runtimeSettings.Add("MAX_NOTIFICATIONS", 1);
            runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", false);
            runtimeSettings.Add("ENABLE_TIME_THRESHOLD", false);
            runtimeSettings.Add("PRIORITY_MODE", "DELAYED");
            runtimeSettings.Add("EMAIL_FORMAT", "HTML");
            runtimeSettings.Add("SMTP_PORT", 25);
            runtimeSettings.Add("SMTP_USESSL", false);
            runtimeSettings.Add("SMTP_UID", string.Empty);
            runtimeSettings.Add("SMTP_PWD", string.Empty);
            runtimeSettings.Add("SMS_EMAILLIST", string.Empty);
            runtimeSettings.Add("FILTERED_ALERTS", string.Empty);
            runtimeSettings.Add("NOTIFY_ONERROR", true);
            runtimeSettings.Add("NOTIFY_ONWARNING", false);
            runtimeSettings.Add("NOTIFY_ONSUCCESS", false);
            runtimeSettings.Add("NOTIFY_ONCOMPLETE", false);
            runtimeSettings.Add("SMS_MAXLENGTH", 160);
            runtimeSettings.Add("CC_EMAILLIST", string.Empty);
            runtimeSettings.Add("BCC_EMAILLIST", string.Empty);
            runtimeSettings.Add("NOTIFY_USING_EMAIL", true);
            runtimeSettings.Add("NOTIFY_USING_SMS", true);
            runtimeSettings.Add("NOTIFY_USING_EVENTLOG", false);
            runtimeSettings.Add("NOTIFY_USING_LOGFILE", false);
            runtimeSettings.Add("LOG_FOLDER_PATH", "C:\\SSIS\\Log");
            runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5);
            runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", false);
            runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\\SSIS\\Config\\NF_EmailTemplate.htm");

            if (!string.IsNullOrEmpty(otherConfigSettings))
            {
                // Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

                const string PAIR_SEP = ";";
                const string NAMEVAL_SEP = "=";

                string[] arrNameValue = otherConfigSettings.Split(PAIR_SEP.ToCharArray());

                foreach (string sPair in arrNameValue)
                {
                    string[] arrTemp = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries);

                    try
                    {
                        if (arrTemp.Length >= 2)
                        {
                            string settingName = arrTemp[0];
                            string settingValue = arrTemp[1];

                            switch (settingName.ToUpper().Trim())
                            {
                                case "MAX_NOTIFICATIONS":
                                    runtimeSettings["MAX_NOTIFICATIONS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "ENABLE_ROWCOUNT_THRESHOLD":
                                    runtimeSettings["ENABLE_ROWCOUNT_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "ENABLE_TIME_THRESHOLD":
                                    runtimeSettings["ENABLE_TIME_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "PRIORITY_MODE":
                                    // DELAYED (After Package) or URGENT (After Task) 
                                    runtimeSettings["PRIORITY_MODE"] = (string)settingValue;
                                    break;
                                case "EMAIL_FORMAT":
                                    // TEXT or HTML 
                                    runtimeSettings["EMAIL_FORMAT"] = (string)settingValue;
                                    break;
                                case "SMTP_PORT":
                                    // Default 25 
                                    runtimeSettings["SMTP_PORT"] = Convert.ToInt32(settingValue);
                                    break;
                                case "SMTP_USESSL":
                                    // Default false
                                    runtimeSettings["SMTP_USESSL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMTP_UID":
                                    runtimeSettings["SMTP_UID"] = (string)settingValue;
                                    break;
                                case "SMTP_PWD":
                                    runtimeSettings["SMTP_PWD"] = (string)settingValue;
                                    break;
                                case "SMS_EMAILLIST":
                                    // Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                    runtimeSettings["SMS_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "FILTERED_ALERTS":
                                    ////Must be pipe seperated e.g. -111|-222 .... 
                                    runtimeSettings["FILTERED_ALERTS"] = (string)settingValue;
                                    break;
                                case "NOTIFY_ONERROR":
                                    runtimeSettings["NOTIFY_ONERROR"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONWARNING":
                                    runtimeSettings["NOTIFY_ONWARNING"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONSUCCESS":
                                    runtimeSettings["NOTIFY_ONSUCCESS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONCOMPLETE":
                                    runtimeSettings["NOTIFY_ONCOMPLETE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMS_MAXLENGTH":
                                    runtimeSettings["SMS_MAXLENGTH"] = Convert.ToInt32(settingValue);
                                    break;
                                case "CC_EMAILLIST":
                                    runtimeSettings["CC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "BCC_EMAILLIST":
                                    runtimeSettings["BCC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "NOTIFY_USING_EMAIL":
                                    runtimeSettings["NOTIFY_USING_EMAIL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_SMS":
                                    runtimeSettings["NOTIFY_USING_SMS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_EVENTLOG":
                                    runtimeSettings["NOTIFY_USING_EVENTLOG"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_LOGFILE":
                                    runtimeSettings["NOTIFY_USING_LOGFILE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "LOG_FOLDER_PATH":
                                    runtimeSettings["LOG_FOLDER_PATH"] = (string)settingValue;
                                    break;
                                case "DELETE_LOG_OLDER_THAN_DAYS":
                                    runtimeSettings["DELETE_LOG_OLDER_THAN_DAYS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "USE_CUSTOM_EMAIL_TEMPLATE":
                                    runtimeSettings["USE_CUSTOM_EMAIL_TEMPLATE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                                    runtimeSettings["CUSTOM_EMAIL_TEMPLATE_FILEPATH"] = (string)settingValue;
                                    break;
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, string.Empty, 0);
                    }
                }
            }

            SetNF(runtimeSettings);

            WriteVariable(NotificationFrameworkCounter, 0);

            return runtimeSettings;
        }

        public void SetNF(Hashtable runtimeSettings)
        {
            runtimeSettings.Add(((Char)78).ToString() + ((Char)70).ToString() + ((Char)95).ToString() + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString(), ReadVariable("User::varSSISOpsNF_" + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString()));
        }

        [Serializable]
        public class AlertInfo
        {
            /// <summary>
            /// Retained for serialization purposes.
            /// </summary>
            public AlertInfo()
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
                : this(alertDescription, alertCode, sourceName, sourceId, alertType, DateTime.Now)
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType, DateTime timeStamp)
            {
                AlertCode = alertCode;
                AlertDescription = alertDescription;
                AlertType = alertType;
                SourceName = sourceName;
                SourceId = sourceId;
                AlertTimeStamp = timeStamp;
            }

            public int AlertCode { get; set; }
            public string AlertDescription { get; set; }
            public DateTime AlertTimeStamp { get; set; }
            public AlertType AlertType { get; set; }
            public string SourceId { get; set; }
            public string SourceName { get; set; }
        }

        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_256db09299e848e69b21ce8bd2db0b36</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_256db09299e848e69b21ce8bd2db0b36</msb:DisplayName>
		<msb:ProjectId>{524FB5AA-0B4F-4FD3-9DCF-EC783E8F64F6}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_256db09299e848e69b21ce8bd2db0b36.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_256db09299e848e69b21ce8bd2db0b36.Properties.Settings.get_Default():st_256db09299e848e69b21ce8bd2db0b36.Properties.Sett" +
    "ings")]

namespace st_256db09299e848e69b21ce8bd2db0b36.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_256db09299e848e69b21ce8bd2db0b36.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_256db09299e848e69b21ce8bd2db0b36.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_256db09299e848e69b21ce8bd2db0b36.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_256db09299e848e69b21ce8bd2db0b36.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_256db09299e848e69b21ce8bd2db0b36.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_256db09299e848e69b21ce8bd2db0b36.dll">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
JgIoFgAACm8cAAAKb0wAAAr+Gt4NBiwJBy0GBm9LAAAK3AgqASgAAAIAJwAPNgAMAAAAAAAABABA
RAATIQAAAQIABABVWQANAAAAAB4CKE8AAAoqHgIoDgAACipOAgMEBQ4EDgUoUQAACigUAAAGKtIC
KA4AAAoCBCgWAAAGAgMoGAAABgIOBSgcAAAGAgUoIAAABgIOBCgeAAAGAg4GKBoAAAYqHgJ7EAAA
BCoiAgN9EAAABCoeAnsRAAAEKiICA30RAAAEKh4CexIAAAQqIgIDfRIAAAQqHgJ7EwAABCoiAgN9
EwAABCoeAnsUAAAEKiICA30UAAAEKh4CexUAAAQqIgIDfRUAAAQqAAAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAYAkAACN+AADMCQAAyAwAACNTdHJp
bmdzAAAAAJQWAACgCAAAI1VTADQfAAAQAAAAI0dVSUQAAABEHwAAQAQAACNCbG9iAAAAAAAAAAIA
AAFXHaIJCQMAAAD6JTMAFgAAAQAAADYAAAAIAAAAFwAAACAAAAAgAAAAUQAAAAoAAAAiAAAACAAA
AAMAAAAJAAAAEAAAAAEAAAABAAAABQAAAAEAAAADAAAAAAAKAAEAAAAAAAYA1QDOAAoA8QDcAA4A
UQEoAQYAbQHOAAYAgwFyAQYAtAGfAQYA/wLsAgYArQPOAAYADgb0BQYAOQYnBgYAUAYnBgYAbQYn
BgYAjAYnBgYApQYnBgYAvgYnBgYA2QYnBgYA9AYnBgYADQcnBgYARgcmBwYAZgcmBwYAlweEBwYA
tAfOAAYAuQfOAAYA3QcnBgoACQjzBwoAIgjzBwYANwgmBw4AWQgoAQ4AewgoAQYAtgjOABIACwnr
CAYASgnOAAYAWQnOAAYAbwljCRYAoQmICQYAuQmvCQYAxgmvCRYA2wl9CRYAAAp9CRYACAp9CQYA
IwrsAhYASQp9CRYAWAp9CRYAYwp9CQYAmwrOAAYARgsrCwYAdwvOAAYAkQvOAAYAuAvOAA4A0gso
AQYABwzOABIAGQzrCBIAMAzrCAYAZgzOAAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAA
awA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAgAEgACIQAAsQAAABEACwASAAIgEAC7
AAAABQAQABIAAAAAAOYKAAAFABYAIQARAJMBEwARAMABFwARAAoCOQBRgC4CRwBRgFkCRwBRgIcC
RwBRgKQCRwAGBlMDmQFWgFsDnAFWgGMDnAEGBlMDmQFWgGsDqgFWgHYDqgFWgIMDqgFWgJYDqgEB
AHYEmQEBAJEERwABALME8QEBANMEqgEBAO4ERwABAAgFRwATAFML4AITAKQL4AJQIAAAAACDGNAB
GwABAFggAAAAAJMI1gEfAAEAkSAAAAAAkwjqASQAAQCYIAAAAACTCPYBKQABAKAgAAAAAJYIGgI9
AAIAsyAAAAAAhhjQARsAAgCnIAAAAACRGFIILgICALsgAAAAAIYAygIbAAIA0CAAAAAAgQDPAhsA
AgDUIQAAAACBAN8CagECALwjAAAAAIEACQN0AQcA9CMAAAAAgQAUA3wBCgDgJgAAAACGAB8DgwEM
AOwtAAAAAIYAMgOIAQwA5C4AAAAAgQA4A44BDQCALwAAAACBAEYDlAEPABwwAAAAAIYY0AEbABAA
JDAAAAAAhhjQARsAEAAsMAAAAACGGNABagEQAEAwAAAAAIYY0AG9ARUAdTAAAAAAhgi2A8kBGwB9
MAAAAACGCMQDzQEbAIYwAAAAAIYI0gPSARwAjjAAAAAAhgjnA9YBHACXMAAAAACGCPwD2wEdAJ8w
AAAAAIYIDwTgAR0AqDAAAAAAhggiBOYBHgCwMAAAAACGCDAE6wEeALkwAAAAAIYIPgTSAR8AwTAA
AAAAhghLBNYBHwDKMAAAAACGCFgE0gEgANIwAAAAAIYIZwTWASAAAAABAGIFAAABAGgFAAACAHkF
AAADAIMFAAAEAI4FAAAFAJcFAAABAKEFAAACAK0FAAADALMFAAABAMMFAAACALMFAAABALMFAAAB
AM8FAAACANwFAAABAM8FAAABAGgFAAACAHkFAAADAIMFAAAEAI4FAAAFAJcFAAABAGgFAAACAHkF
AAADAIMFAAAEAI4FAAAFAJcFAAAGAOoFAAABAGIFAAABAGIFAAABAGIFAAABAGIFAAABAGIFAAAB
AGIFSQDQAdYBUQDQAdYBWQDQAdYBYQDQAdYBaQDQAdYBcQDQAdYBeQDQAdYBgQDQAdYBiQDQAdYB
kQDQAdYBmQDQAc0BoQDQARsAqQDQARsACQDQARsAsQDLBwcCsQDmBw4CKQDQARMCyQDQAR8C2QDQ
ARsAEQDQARsA4QDQARsAGQCNCDIC6QCVCM0BOQCkCDcCCQCtCNIB8QC9CDwC8QDECEMC6QAdCUgC
+QAzCU0C8QA8CVICAQFQCVcCEQHQARsAGQHQAWwCIQHQARsAGQHRCXUCMQHQARsAIQHnCX0CMQH4
CdYBOQEUCoMCQQEvCokCSQE9Co8COQFwCtIB8QB9CkcA8QCDCpMCEQGLCpkCSQGSCqACaQGnChsA
8QC9CKQCMQCvCiQA8QDECs8C8QDMCtIBOQDRCtUCCQHQAdYBOQDdCtoCDADQAc0BDABnC/ECDABr
C/kCOQDQARsAOQBnC9oC8QB/CwcD8QCLCwwD8QCLCxMD8QDECtIBiQHACx4DiQHIC1IC6QDmCyMD
CQHxC9IBkQH9CykDmQGtCNIB8QC9CEgD+QAMDNYB+QAjDGIDoQGkCGoDqQE5DHEDoQFDDBsA+QBK
DBsA+QBQDNYBqQFcDI8CGQDQARsAsQHQARsAQQB8DIUDDgAQAEoADgAUAIMADgAYAMQADgAcABMB
CAAkAKABCAAoAKUBCAAwAKUBCAA0AK4BCAA4ALMBCAA8ALgBKQCTACUCLgBbABgELgBDAPsDLgBj
ACEELgALAIoDLgATANIDLgAbAPsDLgAjAPsDLgArAPsDLgAzANIDLgA7AAEEQwBrAKUBSQCTACUC
YQCbAKUBgwCrAKUBAwGbAKUBAQKbAKUBIQKbAKUBQQKbAKUBYQKbAKUBgQKbAKUBoAKbAKUBoQKb
AKUBwAKbAKUB4AKbAKUBAAObAKUBIAObAKUBQAObAKUBYAObAKUBgAObAKUBoAObAKUBwAObAKUB
4AObAKUBAASbAKUBGgJeAqoCAgMyA04DdgN9AwIAAQADAAMABwAEAAAAgwEvAAAAAgI0AAAAJgJC
AAAAJAX1AQAALgX5AQAAPwX9AQAAsQACAgAATgX5AQAAVwX5AQIAAgADAAEABAAFAAIAAwAFAAIA
BQAHAAIAFQAJAAEAFgAJAAEAGAALAAIAFwALAAIAGQANAAEAGgANAAEAHAAPAAIAGwAPAAEAHgAR
AAIAHQARAAIAHwATAAEAIAATAOkCBIAAAAEAAACrFzldAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEA
xQAAAAAABAAAAAAAAAAAAAAAAQDOAAAAAAAMAAAAAAAAAAAAAAAKAAkBAAAAAAwAAAAAAAAAAAAA
AAoAzAgAAAAABAAAAAAAAAAAAAAAAQB9CQAAAAAAAAAAAQAAAIQMAAAFAAQABgAEAAcABAAAAAAA
ADxNb2R1bGU+AHN0XzI1NmRiMDkyOTllODQ4ZTY5YjIxY2U4YmQyZGIwYjM2LmRsbABSZXNvdXJj
ZXMAc3RfMjU2ZGIwOTI5OWU4NDhlNjliMjFjZThiZDJkYjBiMzYuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAHN0XzI1NmRiMDkyOTllODQ4ZTY5YjIxY2U4YmQyZGIwYjM2AFNjcmlwdFJl
c3VsdHMAQWxlcnRUeXBlAEFsZXJ0SW5mbwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5D
b25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5h
Z2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNl
Q3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATm90aWZpY2F0aW9u
RnJhbWV3b3JrQWxlcnRMaXN0VmFyaWFibGVOYW1lAE5vdGlmaWNhdGlvbkZyYW1ld29ya0FsZXJ0
TGlzdEFsbFZhcmlhYmxlTmFtZQBOb3RpZmljYXRpb25GcmFtZXdvcmtDb3VudGVyAE5vdGlmaWNh
dGlvbkZyYW1ld29ya1N1YkNvbXBvbmVudE5hbWUATWFpbgBVcGRhdGVBbGVydExpc3QAQWRkQWxl
cnRJbmZvAFN5c3RlbS5Db2xsZWN0aW9ucwBIYXNodGFibGUAU2V0U2V0dGluZwBHZXRTZXR0aW5n
AEdldFJ1bnRpbWVTZXR0aW5ncwBTZXRORgBXcml0ZVZhcmlhYmxlAFJlYWRWYXJpYWJsZQB2YWx1
ZV9fAFN1Y2Nlc3MARmFpbHVyZQBFcnJvckFsZXJ0AFdhcm5pbmdBbGVydABUaW1lVGhyZXNob2xk
QWxlcnQAUm93Q291bnRUaHJlc2hvbGRBbGVydABEYXRlVGltZQBnZXRfQWxlcnRDb2RlAHNldF9B
bGVydENvZGUAZ2V0X0FsZXJ0RGVzY3JpcHRpb24Ac2V0X0FsZXJ0RGVzY3JpcHRpb24AZ2V0X0Fs
ZXJ0VGltZVN0YW1wAHNldF9BbGVydFRpbWVTdGFtcABnZXRfQWxlcnRUeXBlAHNldF9BbGVydFR5
cGUAZ2V0X1NvdXJjZUlkAHNldF9Tb3VyY2VJZABnZXRfU291cmNlTmFtZQBzZXRfU291cmNlTmFt
ZQA8QWxlcnRDb2RlPmtfX0JhY2tpbmdGaWVsZAA8QWxlcnREZXNjcmlwdGlvbj5rX19CYWNraW5n
RmllbGQAPEFsZXJ0VGltZVN0YW1wPmtfX0JhY2tpbmdGaWVsZAA8QWxlcnRUeXBlPmtfX0JhY2tp
bmdGaWVsZAA8U291cmNlSWQ+a19fQmFja2luZ0ZpZWxkADxTb3VyY2VOYW1lPmtfX0JhY2tpbmdG
aWVsZABBbGVydENvZGUAQWxlcnREZXNjcmlwdGlvbgBBbGVydFRpbWVTdGFtcABTb3VyY2VJZABT
b3VyY2VOYW1lAHZhbHVlAGFsZXJ0RGVzY3JpcHRpb24AYWxlcnRDb2RlAHNvdXJjZU5hbWUAc291
cmNlSWQAYWxlcnRUeXBlAFNldHRpbmdOYW1lAFZhbHVlAHJ1bnRpbWVTZXR0aW5ncwBzZXR0aW5n
TmFtZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQB0aW1lU3RhbXAAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRN
b2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAHNldF9UYXNrUmVzdWx0AGdldF9JdGVtAFRv
U3RyaW5nAFN0cmluZwBDb25jYXQASW5kZXhPZgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZURpc3BlbnNlcgBnZXRf
VmFyaWFibGVEaXNwZW5zZXIAQ29udGFpbnMASXNOdWxsT3JFbXB0eQBJbnQzMgBUcnlQYXJzZQBF
eGNlcHRpb24AU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBTeXN0ZW0uWG1sAFN5c3RlbS5YbWwu
U2VyaWFsaXphdGlvbgBYbWxTZXJpYWxpemVyAFN5c3RlbS5JTwBTdHJpbmdXcml0ZXIAVGV4dFdy
aXRlcgBTZXJpYWxpemUAWG1sRG9jdW1lbnQAR2V0U3RyaW5nQnVpbGRlcgBMb2FkWG1sAFhtbE5v
ZGUAWG1sTm9kZUxpc3QAZ2V0X0NoaWxkTm9kZXMASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBn
ZXRfQ3VycmVudABYbWxEZWNsYXJhdGlvbgBYbWxDb21tZW50AFhtbEF0dHJpYnV0ZQBnZXRfT3V0
ZXJYbWwARW1wdHkAUmVwbGFjZQBBcHBlbmQATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBn
ZXRfSW52YXJpYW50Q3VsdHVyZQBUb1VwcGVyAFRyaW0AQ29udGFpbnNLZXkAc2V0X0l0ZW0APFBy
aXZhdGVJbXBsZW1lbnRhdGlvbkRldGFpbHM+ezFBOEFEMjAyLUE3MjYtNDA0RS1BMDgxLUM1NDRF
QzBDNUJGQX0AU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMARGljdGlvbmFyeWAyACQkbWV0aG9k
MHg2MDAwMDBiLTEAQWRkAFRyeUdldFZhbHVlAEJvb2xlYW4AVG9DaGFyQXJyYXkAU3BsaXQAU3Ry
aW5nU3BsaXRPcHRpb25zACQkbWV0aG9kMHg2MDAwMDBjLTEAQ29udmVydABUb0ludDMyAFRvQm9v
bGVhbgBFdmVudHNPYmplY3RXcmFwcGVyAGdldF9FdmVudHMAZ2V0X01lc3NhZ2UARmlyZUVycm9y
AENoYXIATG9ja0ZvcldyaXRlAFZhcmlhYmxlcwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAc2V0X1Zh
bHVlAFVubG9jawBSZXNldABMb2NrRm9yUmVhZABnZXRfVmFsdWUAU2VyaWFsaXphYmxlQXR0cmli
dXRlAGdldF9Ob3cAc3RfMjU2ZGIwOTI5OWU4NDhlNjliMjFjZThiZDJkYjBiMzYuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAcXMAdABfADIANQA2AGQAYgAwADkAMgA5ADkAZQA4ADQA
OABlADYAOQBiADIAMQBjAGUAOABiAGQAMgBkAGIAMABiADMANgAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAA3wAAB9GAEkATABUAEUAUgBFAEQAXwBBAEwARQBSAFQA
UwAAI1MAeQBzAHQAZQBtADoAOgBFAHIAcgBvAHIAQwBvAGQAZQAAMVMAeQBzAHQAZQBtADoAOgBF
AHIAcgBvAHIARABlAHMAYwByAGkAcAB0AGkAbwBuAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIA
YwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoAUwBvAHUAcgBjAGUASQBEAAAdUwB5AHMAdABl
AG0AOgA6AEMAYQBuAGMAZQBsAAA5PABOAE8AIABBAEwARQBSAFQAIABEAEUAUwBDAFIASQBQAFQA
SQBPAE4AIABHAEkAVgBFAE4APgAAOTwATgBPACAAQQBMAEUAUgBUACAAUwBPAFUAUgBDAEUAIABO
AEEATQBFACAARwBJAFYARQBOAD4AAFl4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8A
LwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAAGt4
AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8A
MgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAATlVAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAEEAbABlAHIAdABMAGkAcwB0AABBVQBzAGUA
cgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABs
AABfIABzAGUAdAB0AGkAbgBnACAAZABvAGUAcwBuACcAdAAgAGUAeABpAHMAdAAgAGkAbgAgAHIA
dQBuAHQAaQBtAGUAIABzAGUAdAB0AGkAbgBnACAAbABpAHMAdAAuAAEjTQBBAFgAXwBOAE8AVABJ
AEYASQBDAEEAVABJAE8ATgBTAAAzRQBOAEEAQgBMAEUAXwBSAE8AVwBDAE8AVQBOAFQAXwBUAEgA
UgBFAFMASABPAEwARAAAK0UATgBBAEIATABFAF8AVABJAE0ARQBfAFQASABSAEUAUwBIAE8ATABE
AAAbUABSAEkATwBSAEkAVABZAF8ATQBPAEQARQAAGUUATQBBAEkATABfAEYATwBSAE0AQQBUAAAT
UwBNAFQAUABfAFAATwBSAFQAABdTAE0AVABQAF8AVQBTAEUAUwBTAEwAABFTAE0AVABQAF8AVQBJ
AEQAABFTAE0AVABQAF8AUABXAEQAABtTAE0AUwBfAEUATQBBAEkATABMAEkAUwBUAAAdTgBPAFQA
SQBGAFkAXwBPAE4ARQBSAFIATwBSAAAhTgBPAFQASQBGAFkAXwBPAE4AVwBBAFIATgBJAE4ARwAA
IU4ATwBUAEkARgBZAF8ATwBOAFMAVQBDAEMARQBTAFMAACNOAE8AVABJAEYAWQBfAE8ATgBDAE8A
TQBQAEwARQBUAEUAABtTAE0AUwBfAE0AQQBYAEwARQBOAEcAVABIAAARTgBGAF8AQwBIAEUAQwBL
AAAZQwBDAF8ARQBNAEEASQBMAEwASQBTAFQAABtCAEMAQwBfAEUATQBBAEkATABMAEkAUwBUAAAl
TgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBFAE0AQQBJAEwAACFOAE8AVABJAEYAWQBfAFUAUwBJ
AE4ARwBfAFMATQBTAAArTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBFAFYARQBOAFQATABPAEcA
AClOAE8AVABJAEYAWQBfAFUAUwBJAE4ARwBfAEwATwBHAEYASQBMAEUAAB9MAE8ARwBfAEYATwBM
AEQARQBSAF8AUABBAFQASAAANUQARQBMAEUAVABFAF8ATABPAEcAXwBPAEwARABFAFIAXwBUAEgA
QQBOAF8ARABBAFkAUwAAM1UAUwBFAF8AQwBVAFMAVABPAE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQ
AEwAQQBUAEUAAD1DAFUAUwBUAE8ATQBfAEUATQBBAEkATABfAFQARQBNAFAATABBAFQARQBfAEYA
SQBMAEUAUABBAFQASAAADVUAUgBHAEUATgBUAAAJVABFAFgAVAAAAQAXQwA6AFwAUwBTAEkAUwBc
AEwAbwBnAABHQwA6AFwAUwBTAEkAUwBcAEMAbwBuAGYAaQBnAFwATgBGAF8ARQBtAGEAaQBsAFQA
ZQBtAHAAbABhAHQAZQAuAGgAdABtAABNVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBO
AEYAXwBPAHQAaABlAHIAQwBvAG4AZgBpAGcAUwBlAHQAdABpAG4AZwBzAAAPRABFAEwAQQBZAEUA
RAAACUgAVABNAEwAAAM7AAADPQAAXUIASQAgAHgAUAByAGUAcwBzACAATgBvAHQAaQBmAGkAYwBh
AHQAaQBvAG4AIABGAHIAYQBtAGUAdwBvAHIAawAgAEUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIA
AE9VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMAYQB0
AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgAAJ1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMA
TgBGAF8AAAAC0ooaJqdOQKCBxUTsDFv6AAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQA
ABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBg44VQBzAGUAcgA6ADoAdgBh
AHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABAVQBzAGUAcgA6ADoAdgBh
AHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABsAE5VAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuAF8A
QwBvAHUAbgB0AGUAcgBWQgBJACAAeABQAHIAZQBzAHMAIABOAG8AdABpAGYAaQBjAGEAdABpAG8A
bgAgAEYAcgBhAG0AZQB3AG8AcgBrACAAUwBlAG4AZAAgAEEAbABlAHIAdAAJIAUBDggODhEYByAD
AQ4cEh0GIAIcDhIdBCAAEh0FIAEBEh0FIAIBDhwEIAEcDgIGCAMGERQEAAAAAAQBAAAAAwYRGAQC
AAAABAMAAAAEBAAAAAsgBgEOCA4OERgRIQMgAAgEIAEBCAMgAA4EIAEBDgQgABEhBSABAREhBCAA
ERgFIAEBERgDBhEhAygACAMoAA4EKAARIQQoABEYBgABElkRXQQgABJhBiACAQ4SYQQHARIVBSAB
ARFpCAEAAgAAAAAAAwAAAQQgABJ1BCABHBwGAAMODg4OBCABCA4EIAASfQQgAQIOBAABAg4GAAIC
DhAIDQcJEh0ODg4ODgIRGAgIIAIBElkdElkHIAIBEoCVHAUgABKAiQUgABKAoQUgABKApQMgABwF
IAIODg4GIAESgIkOAyAAAgUAAg4ODiQHDxKAiRKAiRIcEoCNEoCREoCZEoCdDg4ODg4dElkSgKUS
gLUFIAEOEhkEIAECHAUgAgEcHAgGFRKAuQIOCAcVEoC5Ag4IByACARMAEwEIIAICEwAQEwEEBwIO
CAQgAB0DBiABHQ4dAwogAx0OHQMIEYDBBAABCA4FIAASgMkIIAUCCA4ODggVBw0cDhIdHQ4OHQ4O
DhKAhR0OCA4IBQABDh0OEwcPHQ4DAwMDAwMDAx0OAwMDAwMHIAEBEBKA0QYgARKA1RwEIAEBHAYH
AhKA0QIHBwMSgNECHAQAABEhRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0XzI1NmRiMDkyOTllODQ4ZTY5
YjIxY2U4YmQyZGIwYjM2AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFEVQAAAAAAAAAAAABeVQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAUFUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAAAAAA
AAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABADld
qxcAAAEAOV2rFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABzAHQAXwAyADUANgBkAGIAMAA5ADIA
OQA5AGUAOAA0ADgAZQA2ADkAYgAyADEAYwBlADgAYgBkADIAZABiADAAYgAzADYAAABAAA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADUAOQAuADIAMwA4ADYANQAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwAyADUANgBkAGIAMAA5ADIAOQA5
AGUAOAA0ADgAZQA2ADkAYgAyADEAYwBlADgAYgBkADIAZABiADAAYgAzADYALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHQA
XwAyADUANgBkAGIAMAA5ADIAOQA5AGUAOAA0ADgAZQA2ADkAYgAyADEAYwBlADgAYgBkADIAZABi
ADAAYgAzADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAcwB0AF8A
MgA1ADYAZABiADAAOQAyADkAOQBlADgANAA4AGUANgA5AGIAMgAxAGMAZQA4AGIAZAAyAGQAYgAw
AGIAMwA2AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAA
NQA5AC4AMgAzADgANgA1AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA2ADAANQA5AC4AMgAzADgANgA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAHA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[{19388046-71D3-418C-8678-D7D7A434206D\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{19388046-71D3-418C-8678-D7D7A434206D}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{19388046-71D3-418C-8678-D7D7A434206D}"
          DTS:To="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[{D86B7521-791E-4277-9D98-453215D5EB59\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{D86B7521-791E-4277-9D98-453215D5EB59}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{D86B7521-791E-4277-9D98-453215D5EB59}"
          DTS:To="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{73F06A00-8CE7-4EB1-9789-37DFB691F148}"
      DTS:EventID="0"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{172A47DF-68E2-4C21-9AA6-6CCEE4D9C764}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{12CB6EF9-EF6E-4D22-999C-6579CC1123C1}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{96CB80E1-E620-4C41-9C5D-C30A48C5DB69}</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{9CBE88EB-2DDF-402C-8F8A-9F1F8E7EEF97}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ConnectionValues">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of connection strings (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable connectionstring logging."
          DTS:DTSID="{7C172784-0164-4F28-8FFD-BC70EE6B6B4B}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableConnLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of datasource information (e.g. SqlCommand, ConnectionName, TableName etc.)"
          DTS:DTSID="{0E14C38D-1A51-4E84-A933-590FB8B26A94}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableDataSrcInfoLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of row count for each attached with source and target information (e.g. SqlCommand, ConnectionName, TableName etc.)"
          DTS:DTSID="{5D8824CA-D13E-48F9-A8AF-EE70836D4E2F}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableDFTRowCountLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{AEAC832C-8AAC-4AA9-81BA-285178219C2A}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableParameterInitialValueLogging"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of variable values (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{E08BC7A3-B007-44A9-9F20-93B190B69761}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableVarLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of ConnectionManagers you want to mask ConnectionStrings during logging process inside OnPreExecute Eventhandler. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case in-sensitive. This option is helpful when you want to hide certain connection strings or file paths from users who are using BIxPress Monitoring Console or Reports. When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual connectionstring of specified connection managers. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredConns&quot;. There are 2 places where you have to set this value (OnPreExecute, OnPostExecute)."
          DTS:DTSID="{02F0A578-F70D-48A8-B411-C13F45F5BC40}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredConns">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{86A75017-AAF1-4C60-AEB9-9AF6B4927866}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredParams"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="8">paramSSISOpsNF_From,paramSSISOpsNF_OnError_Disable,paramSSISOpsNF_OnPostExecute_Disable,paramSSISOpsNF_OnWarning_Disable,paramSSISOpsNF_OtherConfigSettings,paramSSISOpsNF_SMTPServerName,paramSSISOpsNF_To,pJobInstanceParentID</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{D65E1419-7F2C-4C83-B7A0-90039ABEA31A}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to configure how many characters will be logged for each variable. Default variable length for logging is 4000 anything after that will be truncated. -1 = Log full variable value . There are 3 places where you have to set this value (OnPreExecute, OnPostExecute OnVariableValueChanged)."
          DTS:DTSID="{E10212BA-072A-4CCA-A638-CB628E99AB14}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_MaxVarCharsToLog">
          <DTS:VariableValue
            DTS:DataType="3">4000</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{126D2768-CFE4-471F-8BBE-9464F353474C}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_VariableValues">
          <DTS:VariableValue
            DTS:DataType="8">User::vCurJobID,User::vCurJobInstanceID,User::vCurUserID,User::vDeletedTotalRowCount,User::vEnvironmentTEXT,User::vInsertedTotalRowCount,User::vPackageStartDate,User::vRejectedTotalRowCount,User::vUpdatedTotalRowCount</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{5FFF9EF7-04CB-44D4-97DE-705FB972C2EE}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableVarLogging]==true &amp;&amp; @[User::varSSISOps_DisableConnLogging]==true</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_f3f3c55d14e44c89a9e45c7e580b2d50"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_f3f3c55d14e44c89a9e45c7e580b2d50")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_f3f3c55d14e44c89a9e45c7e580b2d50")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_f3f3c55d14e44c89a9e45c7e580b2d50
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
                System.Text.StringBuilder sb = new System.Text.StringBuilder(); 
                bool bLogVar = true;
                string sVarList = ReadVariable("User::varSSISOps_VariableValues").ToString();

                if (string.IsNullOrEmpty(sVarList) || Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableConnLogging")))
                    bLogVar = false; 

                if (bLogVar)
                {
                    string filterList = ReadVariable("User::varSSISOps_FilteredVars").ToString();
                    string[] arrFilter = filterList.Split(',');
                    string[] arrVariables = sVarList.Split(','); 
                    object oVal = null; 

                    foreach (string var in arrVariables)
                    {
                        try
                        {

                            bool bSkip = false;
                            string comp = var;
                            string f = string.Empty;

                            foreach (string floop in arrFilter)
                            {
                                comp = comp.ToLower().Trim();
                                f = floop.ToLower().Trim();

                                if (string.IsNullOrEmpty(f))
                                    break;

                                if (comp.IndexOf("::") < 0)
                                    comp = "user::" + comp;

                                if (f.IndexOf("::") < 0)
                                    f = "user::" + f;

                                if (System.Text.RegularExpressions.Regex.IsMatch(comp, f.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                                {
                                    bSkip = true;
                                    break;
                                }
                            }


                            if (bSkip)
                                oVal = "*****";
                            else
                            {
                                oVal = ReadVariable(var); 

                                if (oVal !=null)
                                {
                                    string s = oVal.ToString();
                                    int iMaxCharsToLog = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"));
                                    bool isLogFullValue = iMaxCharsToLog < 1;

                                    if (!isLogFullValue && s.Length > iMaxCharsToLog)
                                        oVal = s.Substring(0, iMaxCharsToLog) + " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 from config file if you want to log full value (Not recommended for performance reasons)>";
                                }
                            }

                            if (oVal != null)
                                sb.AppendLine(var.PadRight(30, '.') + "... " + oVal.ToString()); 
                            else
                                sb.AppendLine(var.PadRight(30, '.') + "... "); 
                        }
                        catch (Exception ex)
                        {
                            sb.AppendLine(var.PadRight(30, '.') + "... {Error reading variable value: " + ex.Message + "}"); 
                        }
                    }

                    WriteVariable("User::varSSISOps_VariableValues", sb.ToString()); 
                }

                bool isDisableLogParameterInitialValues;

                if (bool.TryParse(ReadVariable("User::varSSISOps_DisableParameterInitialValueLogging").ToString(), out isDisableLogParameterInitialValues) && !isDisableLogParameterInitialValues)
                {
                    object filteredParams = ReadVariable("User::varSSISOps_FilteredParams");

                    string parameterList = filteredParams == null ? string.Empty : filteredParams.ToString();

                    string[] parameterNames = parameterList.Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries);

                    System.Text.StringBuilder parameterNameValues = new System.Text.StringBuilder();

                    foreach (string parameterName in parameterNames)
                    {
                        string fullyQualifiedVariableName = parameterName.Contains("::") ? parameterName : "$Package::" + parameterName;

                        if (!Dts.VariableDispenser.Contains(fullyQualifiedVariableName))
                            continue;

                        object parameterValue = ReadVariable(fullyQualifiedVariableName);
                        string parameterDisplayValue = parameterValue == null ? string.Empty : parameterValue.ToString();

                        parameterNameValues.AppendFormat("{0}... {1}{2}", fullyQualifiedVariableName.TrimStart('$').PadRight(30, '.'), parameterDisplayValue, Environment.NewLine);
                    }

                    if (parameterNameValues.Length > 0)
                    {
                        object variableValuesValue = ReadVariable("User::varSSISOps_VariableValues");
                        string variableValuesDisplayValue = variableValuesValue == null ? string.Empty : variableValuesValue.ToString();

                        WriteVariable("User::varSSISOps_VariableValues", variableValuesDisplayValue + parameterNameValues);
                    }
                }

                System.Text.StringBuilder sb1 = new System.Text.StringBuilder(); 
                bool bLogConn = !Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableConnLogging"));

                if (bLogConn)
                {
                    string filterList = ReadVariable("User::varSSISOps_FilteredConns").ToString();
                    string[] arrFilter = filterList.Split(',');
                    string sDataSource = String.Empty;

                    foreach (ConnectionManager conn in Dts.Connections)
                    {
                        try
                        {
                            sDataSource = string.Empty;

                            bool bSkip = false;
                            string comp = conn.Name;
                            string f = string.Empty;

                            foreach (string floop in arrFilter)
                            {
                                comp = comp.ToLower().Trim();
                                f = floop.ToLower().Trim();

                                if (string.IsNullOrEmpty(f))
                                    break;

                                if (System.Text.RegularExpressions.Regex.IsMatch(comp, f.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                                {
                                    bSkip = true;
                                    break;
                                }
                            }


                            string sConnStr = conn.ConnectionString;

                            if (bSkip)
                            {
                                sConnStr = "*****";
                                sDataSource = "*****";
                            }
                            else
                            {
                                try
                                {
                                    if (conn.Properties.Contains("ServerName"))
                                        sDataSource = conn.Properties["ServerName"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("SqlServerName"))
                                        sDataSource = conn.Properties["SqlServerName"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("Host"))
                                        sDataSource = conn.Properties["Host"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("ServerHost"))
                                        sDataSource = conn.Properties["ServerHost"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("Server"))
                                        sDataSource = conn.Properties["Server"].GetValue(conn).ToString();
                                    else if (conn.CreationName == "FLATFILE" || (conn.CreationName == "FILE" && conn.ConnectionString.IndexOf(".", System.StringComparison.InvariantCultureIgnoreCase) > 0))
                                        sDataSource = System.IO.Path.GetFileName(conn.ConnectionString);
                                }
                                catch (Exception) { }
                            }

                            sb1.AppendLine(conn.Name.PadRight(30, '.') + "... " + conn.CreationName.PadRight(10, ' ') + "  \t" + sDataSource.PadRight(15, ' ') + "  \t" + sConnStr);
                        }
                        catch (Exception ex)
                        {
                            sb1.AppendLine(conn.Name.PadRight(30, '.') + "... {Error reading connection: " + ex.Message + "}");
                        }
                    }

                    WriteVariable("User::varSSISOps_ConnectionValues", sb1.ToString());
                }

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_f3f3c55d14e44c89a9e45c7e580b2d50</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_f3f3c55d14e44c89a9e45c7e580b2d50</msb:DisplayName>
		<msb:ProjectId>{0260253A-57DD-41E5-9D9B-91C53AC9508D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_f3f3c55d14e44c89a9e45c7e580b2d50.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f3f3c55d14e44c89a9e45c7e580b2d50.Properties.Settings.get_Default():st_f3f3c55d14e44c89a9e45c7e580b2d50.Properties.Sett" +
    "ings")]

namespace st_f3f3c55d14e44c89a9e45c7e580b2d50.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_f3f3c55d14e44c89a9e45c7e580b2d50.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{565fbb8e-139e-4ce5-b0be-7db57c61f355}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_f3f3c55d14e44c89a9e45c7e580b2d50</RootNamespace>
    <AssemblyName>st_f3f3c55d14e44c89a9e45c7e580b2d50</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f3f3c55d14e44c89a9e45c7e580b2d50.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f3f3c55d14e44c89a9e45c7e580b2d50.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f3f3c55d14e44c89a9e45c7e580b2d50.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_f3f3c55d14e44c89a9e45c7e580b2d50.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_f3f3c55d14e44c89a9e45c7e580b2d50.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_f3f3c55d14e44c89a9e45c7e580b2d50.dll">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
AHBvIAAAChcoIQAACiwFFxMhKw4RNBdYEzQRNBEzjmkyphEgbzkAAAoTJREhLBNyVwEAcBMlclcB
AHATHzhbAQAAESBvOgAACnJiBABwbzsAAAosJBEgbzoAAApyYgQAcG88AAAKESBvPQAACm8XAAAK
Ex84HwEAABEgbzoAAApyeAQAcG87AAAKLCQRIG86AAAKcngEAHBvPAAAChEgbz0AAApvFwAAChMf
OOgAAAARIG86AAAKcpQEAHBvOwAACiwkESBvOgAACnKUBABwbzwAAAoRIG89AAAKbxcAAAoTHzix
AAAAESBvOgAACnKeBABwbzsAAAosIREgbzoAAApyngQAcG88AAAKESBvPQAACm8XAAAKEx8rfREg
bzoAAApytAQAcG87AAAKLCERIG86AAAKcrQEAHBvPAAAChEgbz0AAApvFwAAChMfK0kRIG8+AAAK
csIEAHAoPwAACi0oESBvPgAACnLUBABwKD8AAAosIxEgbzkAAApy3gQAcBlvQAAAChYxDhEgbzkA
AAooQQAAChMf3gMm3gARGx2NHAAAARM1ETUWESBvOAAACh8eHy5vJQAACqIRNRdy8gIAcKIRNRgR
IG8+AAAKHwofIG8lAAAKohE1GXLiBABwohE1GhEfHw8fIG8lAAAKohE1G3LiBABwohE1HBElohE1
KEIAAApvJwAACibeMhMmERsRIG84AAAKHx4fLm8lAAAKcuoEAHARJm8oAAAKckQDAHAoKQAACm8n
AAAKJt4AETJvQwAACjpQ/f//AnIqBQBwERtvFwAACigJAAAGAigtAAAKFm9EAAAKKgBBTAAAAAAA
AJIAAABaAQAA7AEAACwAAAAhAAABAAAAAJoEAABYAQAA8gUAAAMAAAAhAAABAAAAAP0DAABpAgAA
ZgYAADIAAAAhAAABGzACAGcAAAADAAARFAoWCwIoLQAACm8uAAAKA29FAAAKAigtAAAKby4AAAoS
AG9GAAAKBgNvRwAACgRvSAAACt4MBiwIBm9JAAAKFwvc3hMmAigtAAAKby4AAApvSgAACv4a3g0G
LAkHLQYGb0kAAArcKgABKAAAAgAnAA82AAwAAAAAAAAEAEBEABMhAAABAgAEAFVZAA0AAAAAGzAC
AGgAAAAEAAARFAoWCwIoLQAACm8uAAAKA29LAAAKAigtAAAKby4AAAoSAG9GAAAKBgNvRwAACm9M
AAAKDN4MBiwIBm9JAAAKFwvc3hMmAigtAAAKby4AAApvSgAACv4a3g0GLAkHLQYGb0kAAArcCCoB
KAAAAgAnAA82AAwAAAAAAAAEAEBEABMhAAABAgAEAFVZAA0AAAAAHgIoTQAACiq0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAiAUAACN+AAD0BQAAnAgAACNT
dHJpbmdzAAAAAJAOAABwBQAAI1VTAAAUAAAQAAAAI0dVSUQAAAAQFAAApAIAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAADAAAAAFAAAABgAAAAsAAAAEAAAATQAAAAIAAAAPAAAA
BAAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9
ARQBBgBZAboABgBvAV4BBgCgAYsBBgCNAnMCBgC4AqYCBgDPAqYCBgDsAqYCBgALA6YCBgAkA6YC
BgA9A6YCBgBYA6YCBgBzA6YCBgCMA6YCBgDFA6UDBgDlA6UDBgAWBAMEBgAzBLoABgA4BLoABgBc
BKYCCgCIBHIECgChBHIEBgC2BKUDDgDYBBQBBgAGBfoEBgAdBboABgAyBboABgBEBboACgCYBXkF
CgCeBXkFBgDkBboABgD6BboABgALBroADgAnBhQBEgCABmAGBgCyBroAEgDXBmAGEgDzBmAGEgAW
B2AGEgBSB2AGEgBvB2AGBgCqB7oABgDFB7sHEgDWB2AGEgAJCGAGEgAgCGAGAAAAAAEAAAAAAAEA
AQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAM
ABEAfwETABEArAEXABEA9gE5AAYGOgJSAFaAQgJVAFaASgJVAFAgAAAAAIMYvAEbAAEAWCAAAAAA
kwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACG
GLwBGwACAKcgAAAAAJEY0QSUAAIAvCAAAAAAhgAaAhsAAgDYJwAAAACBAB8CRwACAHQoAAAAAIEA
LQJNAAQAECkAAAAAhhi8ARsABQAAAAEAUgIAAAEAWAIAAAIAZQIAAAEAWAI5ALwBYwBBALwBYwBJ
ALwBYwBRALwBYwBZALwBYwBhALwBYwBpALwBYwBxALwBYwB5ALwBYwCBALwBYwCJALwBaACRALwB
GwCZALwBGwAJALwBGwChAEoEbQChAGUEdAApALwBeQC5ALwBhQDJALwBGwARALwBGwDRALwBGwDZ
ALwBGwAJABQFmADhACQFnADpADoFoQDhAEkFpgDhAE8FrQDhAFUFmADhAF0FmADhAGIFsADhAGoF
tQDhAHEFuwD5AKsFwQDpALMFygDhALsFzwDhAMYF0wDhANAF2QDhAGoF3wDZANkF5gAJAe4FmADh
AGoF7AARAQIG9ADhAEkF+wDhAB4GBQEZADkGCgEhAZIGEAEpAR4GBQHhAKgGFgExAb4GHAHZAMoG
IAHZALsFzwDhAGoFKQEhAeMGLwE5AQgHNQFBASgHOwFJATQHmABJAT0HmABJAWAHQQFRAR4GRwFR
AXsHTAFZAYQHUwFJAY0HmADhAJ4HWAHhAGIFXgFpAcoHZgHhAGoFawFxAeQHcQEhAe0HaAApAfwH
YwApARMIxwF5AXsHzwGBASkI1gF5ATMIGwApAToIGwApAUAIYwCBAUwI4gEZALwBGwAIABQAWQAI
ABgAXgApAJMAiwAuABsAXwIuACMAXwIuAGMAhQIuAAsA7gEuABMANgIuADMANgIuACsAXwIuADsA
ZQIuAEMAXwIuAFsAfAJDAGsAXgBJAJMAiwBhAJsAXgCDAKsAXgCAAHUB2wHmAQIAAQADAAMAAABv
AS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAACtFxpJAAAAAAAA
fwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAAMAAAAAAAAAAAAAAAK
APUAAAAAAAwAAAAAAAAAAAAAAAoAQQYAAAAAAAAAAAEAAABWCAAABQAEAAAAADxNb2R1bGU+AHN0
X2YzZjNjNTVkMTRlNDRjODlhOWU0NWM3ZTU4MGIyZDUwLmRsbABSZXNvdXJjZXMAc3RfZjNmM2M1
NWQxNGU0NGM4OWE5ZTQ1YzdlNTgwYjJkNTAuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWlu
AHN0X2YzZjNjNTVkMTRlNDRjODlhOWU0NWM3ZTU4MGIyZDUwAFNjcmlwdFJlc3VsdHMAbXNjb3Js
aWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0
ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdl
cgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVm
YXVsdABEZWZhdWx0AE1haW4AV3JpdGVWYXJpYWJsZQBSZWFkVmFyaWFibGUAdmFsdWVfXwBTdWNj
ZXNzAEZhaWx1cmUAdmFsdWUAdmFyaWFibGVOYW1lAHZhcmlhYmxlVmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24A
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25B
dHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFn
bm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25l
bnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0
dHJpYnV0ZQBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAFRvU3RyaW5nAFN0cmluZwBJc051bGxP
ckVtcHR5AENvbnZlcnQAVG9Cb29sZWFuAENoYXIAU3BsaXQARW1wdHkAVG9Mb3dlcgBUcmltAElu
ZGV4T2YAQ29uY2F0AFJlcGxhY2UAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFJlZ2V4
AFJlZ2V4T3B0aW9ucwBJc01hdGNoAFRvSW50MzIAZ2V0X0xlbmd0aABTdWJzdHJpbmcAUGFkUmln
aHQAQXBwZW5kTGluZQBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAQm9vbGVhbgBUcnlQYXJzZQBTdHJp
bmdTcGxpdE9wdGlvbnMAQ29udGFpbnMAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBW
YXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIAVHJpbVN0YXJ0AEVudmlyb25t
ZW50AGdldF9OZXdMaW5lAEFwcGVuZEZvcm1hdABDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMA
Q29ubmVjdGlvbkVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBDb25uZWN0aW9uTWFuYWdlcgBnZXRf
Q3VycmVudABnZXRfTmFtZQBnZXRfQ29ubmVjdGlvblN0cmluZwBEdHNQcm9wZXJ0aWVzAGdldF9Q
cm9wZXJ0aWVzAER0c1Byb3BlcnR5AGdldF9JdGVtAEdldFZhbHVlAGdldF9DcmVhdGlvbk5hbWUA
b3BfRXF1YWxpdHkAU3RyaW5nQ29tcGFyaXNvbgBTeXN0ZW0uSU8AUGF0aABHZXRGaWxlTmFtZQBE
dHNFbnVtZXJhdG9yAE1vdmVOZXh0AHNldF9UYXNrUmVzdWx0AExvY2tGb3JXcml0ZQBWYXJpYWJs
ZXMAR2V0VmFyaWFibGVzAFZhcmlhYmxlAHNldF9WYWx1ZQBVbmxvY2sAUmVzZXQATG9ja0ZvclJl
YWQAZ2V0X1ZhbHVlAHN0X2YzZjNjNTVkMTRlNDRjODlhOWU0NWM3ZTU4MGIyZDUwLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcXMAdABfAGYAMwBmADMAYwA1ADUAZAAxADQAZQA0
ADQAYwA4ADkAYQA5AGUANAA1AGMANwBlADUAOAAwAGIAMgBkADUAMAAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAP1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBw
AHMAXwBWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAHMAAEdVAHMAZQByADoAOgB2AGEAcgBTAFMA
SQBTAE8AcABzAF8ARABpAHMAYQBiAGwAZQBDAG8AbgBuAEwAbwBnAGcAaQBuAGcAADtVAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ARgBpAGwAdABlAHIAZQBkAFYAYQByAHMAAAU6ADoA
AA11AHMAZQByADoAOgAAAyoAAAdcAHcAKgAACyoAKgAqACoAKgAAQ1UAcwBlAHIAOgA6AHYAYQBy
AFMAUwBJAFMATwBwAHMAXwBNAGEAeABWAGEAcgBDAGgAYQByAHMAVABvAEwAbwBnAACBSSAALgAu
AC4APABWAEEATABVAEUAIABUAFIAVQBOAEMAQQBUAEUARAAgAC0AIABDAGgAYQBuAGcAZQAgAHYA
YQBsAHUAZQAgAG8AZgAgAFsAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAE0AYQB4AFYAYQByAEMAaABh
AHIAcwBUAG8ATABvAGcAXQAgAHQAbwAgAC0AMQAgAGYAcgBvAG0AIABjAG8AbgBmAGkAZwAgAGYA
aQBsAGUAIABpAGYAIAB5AG8AdQAgAHcAYQBuAHQAIAB0AG8AIABsAG8AZwAgAGYAdQBsAGwAIAB2
AGEAbAB1AGUAIAAoAE4AbwB0ACAAcgBlAGMAbwBtAG0AZQBuAGQAZQBkACAAZgBvAHIAIABwAGUA
cgBmAG8AcgBtAGEAbgBjAGUAIAByAGUAYQBzAG8AbgBzACkAPgABCS4ALgAuACAAAEcuAC4ALgAg
AHsARQByAHIAbwByACAAcgBlAGEAZABpAG4AZwAgAHYAYQByAGkAYQBiAGwAZQAgAHYAYQBsAHUA
ZQA6ACAAAAN9AABpVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAEQAaQBzAGEAYgBs
AGUAUABhAHIAYQBtAGUAdABlAHIASQBuAGkAdABpAGEAbABWAGEAbAB1AGUATABvAGcAZwBpAG4A
ZwAAP1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAUABh
AHIAYQBtAHMAABUkAFAAYQBjAGsAYQBnAGUAOgA6AAAbewAwAH0ALgAuAC4AIAB7ADEAfQB7ADIA
fQAAPVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAQwBv
AG4AbgBzAAAVUwBlAHIAdgBlAHIATgBhAG0AZQAAG1MAcQBsAFMAZQByAHYAZQByAE4AYQBtAGUA
AAlIAG8AcwB0AAAVUwBlAHIAdgBlAHIASABvAHMAdAAADVMAZQByAHYAZQByAAARRgBMAEEAVABG
AEkATABFAAAJRgBJAEwARQAAAy4AAAcgACAACQAAPy4ALgAuACAAewBFAHIAcgBvAHIAIAByAGUA
YQBkAGkAbgBnACAAYwBvAG4AbgBlAGMAdABpAG8AbgA6ACAAAENVAHMAZQByADoAOgB2AGEAcgBT
AFMASQBTAE8AcABzAF8AQwBvAG4AbgBlAGMAdABpAG8AbgBWAGEAbAB1AGUAcwAAAACznHfhvBmy
TquJtB7JPbrqAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkE
CAASFQQIABIZAwYSDAQAABIMBAgAEgwFIAIBDhwEIAEcDgIGCAMGERQEAAAAAAQBAAAABCABAQ4E
IAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEDIAAOBAABAg4E
AAECHAYgAR0OHQMCBg4EIAEIDgUAAg4ODgUgAg4ODggAAwIODhGAgQQAAQgcAyAACAUgAg4ICAUg
Ag4IAwYAAw4ODg4FIAESbQ4HAAQODg4ODgYAAgIOEAIJIAIdDh0DEYCNBCABAg4FIAASgJEFIAAS
gJUFIAEOHQMDAAAOCCAEEm0OHBwcBQACDhwcBSAAEoCdBSAAEoChBSAAEoClBSAAEoCpBCABAhwG
IAESgK0cBCABHBwFAAICDg4HIAIIDhGAsQQAAQ4OBQABDh0OAyAAAlEHNhJtAg4OHQ4dDhwOAg4O
Dg4IAhKAhQIcDh0OEm0ODhwOHA4SbQIOHQ4OEoClAg4ODg4SgIUdAx0DHQ4IHQ4IHQMdDggdAx0D
EoChHQ4IHQ4HIAEBEBKAvQYgARKAwRwEIAEBHAYHAhKAvQIDIAAcBwcDEoC9AhxHAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3
b3JrIDQoAQAjc3RfZjNmM2M1NWQxNGU0NGM4OWE5ZTQ1YzdlNTgwYjJkNTAAAAUBAAAAABYBABFD
b3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AaxAAAAAAAAAAAAAAM5AAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAQAAAAAAAAAAAAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAaSa0XAAABABpJrRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcwB0AF8AZgAzAGYA
MwBjADUANQBkADEANABlADQANABjADgAOQBhADkAZQA0ADUAYwA3AGUANQA4ADAAYgAyAGQANQAw
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAA2ADEALgAxADgA
NwAxADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8AZgAzAGYAMwBj
ADUANQBkADEANABlADQANABjADgAOQBhADkAZQA0ADUAYwA3AGUANQA4ADAAYgAyAGQANQAwAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAcwB0AF8AZgAzAGYAMwBjADUANQBkADEANABlADQANABjADgAOQBhADkAZQA0ADUAYwA3
AGUANQA4ADAAYgAyAGQANQAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAHMAdABfAGYAMwBmADMAYwA1ADUAZAAxADQAZQA0ADQAYwA4ADkAYQA5AGUANAA1AGMANwBl
ADUAOAAwAGIAMgBkADUAMAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAwADYAMQAuADEAOAA3ADEANAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA3ADEANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADgMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{9296961E-F981-43C6-81C3-B1A996C1E85B}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_7645b40c8bcc4b3b844bd192ffca4672"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_7645b40c8bcc4b3b844bd192ffca4672")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_7645b40c8bcc4b3b844bd192ffca4672")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_7645b40c8bcc4b3b844bd192ffca4672
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_7645b40c8bcc4b3b844bd192ffca4672.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_7645b40c8bcc4b3b844bd192ffca4672.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_7645b40c8bcc4b3b844bd192ffca4672.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_7645b40c8bcc4b3b844bd192ffca4672.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_7645b40c8bcc4b3b844bd192ffca4672.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_7645b40c8bcc4b3b844bd192ffca4672</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_7645b40c8bcc4b3b844bd192ffca4672</msb:DisplayName>
		<msb:ProjectId>{97B99C5E-B497-420C-9631-F69420097C4C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_7645b40c8bcc4b3b844bd192ffca4672.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_7645b40c8bcc4b3b844bd192ffca4672.Properties.Settings.get_Default():st_7645b40c8bcc4b3b844bd192ffca4672.Properties.Sett" +
    "ings")]

namespace st_7645b40c8bcc4b3b844bd192ffca4672.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="st_7645b40c8bcc4b3b844bd192ffca4672.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0ce2acaf-c845-4bdc-ba69-ec325ca5c018}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_7645b40c8bcc4b3b844bd192ffca4672</RootNamespace>
    <AssemblyName>st_7645b40c8bcc4b3b844bd192ffca4672</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <BinaryItem
                Name="st_7645b40c8bcc4b3b844bd192ffca4672.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALPZpFcAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA3i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIgvAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
LwAAAAAAAEgAAAACAAUAyCIAAMAMAAABAAAAAAAAABAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqNgIoFgAAChZvFwAACioAAAAbMAIAZwAAAAIAABEUChYLAigWAAAKbxgA
AAoDbxkAAAoCKBYAAApvGAAAChIAbxoAAAoGA28bAAAKBG8cAAAK3gwGLAgGbx0AAAoXC9zeEyYC
KBYAAApvGAAACm8eAAAK/hreDQYsCQctBgZvHQAACtwqAAEoAAACACcADzYADAAAAAAAAAQAQEQA
Ex8AAAECAAQAVVkADQAAAAAbMAIAaAAAAAMAABEUChYLAigWAAAKbxgAAAoDbx8AAAoCKBYAAApv
GAAAChIAbxoAAAoGA28bAAAKbyAAAAoM3gwGLAgGbx0AAAoXC9zeEyYCKBYAAApvGAAACm8eAAAK
/hreDQYsCQctBgZvHQAACtwIKgEoAAACACcADzYADAAAAAAAAAQAQEQAEx8AAAECAAQAVVkADQAA
AAAeAighAAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAAGAQAACN+AACEBAAAPAYAACNTdHJpbmdzAAAAAMAKAAB0AAAAI1VTADQLAAAQAAAAI0dV
SUQAAABECwAAfAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAAB8AAAAFAAAA
BgAAAAsAAAAEAAAAIQAAAAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAA
AAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCNAnMCBgC4AqYC
BgDPAqYCBgDsAqYCBgALA6YCBgAkA6YCBgA9A6YCBgBYA6YCBgBzA6YCBgCMA6YCBgDFA6UDBgDl
A6UDBgAWBAMEBgAzBLoABgA4BLoABgBcBKYCCgCIBHIECgChBHIEBgC2BKUDDgDYBBQBDgD6BBQB
EgBiBUIFEgCXBUIFEgCuBUIFBgDXBboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABr
ADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAMABEAfwETABEArAEXABEA9gE5AAYG
OgJSAFaAQgJVAFaASgJVAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY0QSUAAIA
uyAAAAAAhgAaAhsAAgDMIAAAAACBAB8CRwACAGghAAAAAIEALQJNAAQABCIAAAAAhhi8ARsABQAA
AAEAUgIAAAEAWAIAAAIAZQIAAAEAWAI5ALwBYwBBALwBYwBJALwBYwBRALwBYwBZALwBYwBhALwB
YwBpALwBYwBxALwBYwB5ALwBYwCBALwBYwCJALwBaACRALwBGwCZALwBGwAJALwBGwChAEoEbQCh
AGUEdAApALwBeQC5ALwBhQDJALwBGwARALwBGwDRALwBGwAZAAwFmADZABQFaADZAHQFnQDhAIoF
YwDhAKEFogDpALcFqQDxAMAFrwDpAMoFGwDhANEFGwDhAOEFYwDxAO0FugAZALwBGwAIABQAWQAI
ABgAXgApAJMAiwAuABsANgEuACMANgEuAGMAXAEuAAsAxQAuABMADQEuADMADQEuACsANgEuADsA
PAEuAEMANgEuAFsAUwFDAGsAXgBJAJMAiwBhAJsAXgCDAKsAXgCAALQAvgACAAEAAwADAAAAbwEv
AAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAArRcZSQAAAAAAAH8A
AAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1
AAAAAAAMAAAAAAAAAAAAAAAKACMFAAAAAAAAAAABAAAA9wUAAAUABAAAAAA8TW9kdWxlPgBzdF83
NjQ1YjQwYzhiY2M0YjNiODQ0YmQxOTJmZmNhNDY3Mi5kbGwAUmVzb3VyY2VzAHN0Xzc2NDViNDBj
OGJjYzRiM2I4NDRiZDE5MmZmY2E0NjcyLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBz
dF83NjQ1YjQwYzhiY2M0YjNiODQ0YmQxOTJmZmNhNDY3MgBTY3JpcHRSZXN1bHRzAG1zY29ybGli
AFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVt
LlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRp
b24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1
bHQARGVmYXVsdABNYWluAFdyaXRlVmFyaWFibGUAUmVhZFZhcmlhYmxlAHZhbHVlX18AU3VjY2Vz
cwBGYWlsdXJlAHZhbHVlAHZhcmlhYmxlTmFtZQB2YXJpYWJsZVZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25v
c3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBzZXRfVGFza1Jlc3VsdABNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJp
YWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIATG9ja0ZvcldyaXRlAFZhcmlhYmxl
cwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0Ac2V0X1ZhbHVlAFVubG9jawBSZXNldABF
eGNlcHRpb24ATG9ja0ZvclJlYWQAZ2V0X1ZhbHVlAHN0Xzc2NDViNDBjOGJjYzRiM2I4NDRiZDE5
MmZmY2E0NjcyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxcwB0AF8ANwA2ADQA
NQBiADQAMABjADgAYgBjAGMANABiADMAYgA4ADQANABiAGQAMQA5ADIAZgBmAGMAYQA0ADYANwAy
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAVTqH4oqcBE+Yk3Ud
KNQDIwAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUE
CAASGQMGEgwEAAASDAQIABIMBSACAQ4cBCABHA4CBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgG
AAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQYgAQEQ
EnUFIAESeRwEIAEBHAUHAhJ1AgMgABwGBwMSdQIcRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0Xzc2NDVi
NDBjOGJjYzRiM2I4NDRiZDE5MmZmY2E0NjcyAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAsC8AAAAAAAAAAAAAzi8A
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAvAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAZSa0XAAABABlJrRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcwB0
AF8ANwA2ADQANQBiADQAMABjADgAYgBjAGMANABiADMAYgA4ADQANABiAGQAMQA5ADIAZgBmAGMA
YQA0ADYANwAyAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAA2
ADEALgAxADgANwAxADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8A
NwA2ADQANQBiADQAMABjADgAYgBjAGMANABiADMAYgA4ADQANABiAGQAMQA5ADIAZgBmAGMAYQA0
ADYANwAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAcwB0AF8ANwA2ADQANQBiADQAMABjADgAYgBjAGMANABiADMAYgA4ADQA
NABiAGQAMQA5ADIAZgBmAGMAYQA0ADYANwAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAHMAdABfADcANgA0ADUAYgA0ADAAYwA4AGIAYwBjADQAYgAzAGIAOAA0ADQA
YgBkADEAOQAyAGYAZgBjAGEANAA2ADcAMgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA3ADEAMwAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA3ADEAMwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{8D4ACBED-9FEA-4D83-BA4D-CC045DD9CA56}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnPostExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnPostExecute @Scope='Package',@ExecutionID=?,@SourceID=?,@RowCountSupport=1,@LogCustomValues=0,@Variables=?,@Connections=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_VariableValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_ConnectionValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{30BF891B-859D-40FE-9DC2-391445614D5A}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnPostExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnPostExecute @Scope='Task',@ExecutionID=?,@SourceID=?,@RowCountSupport=1,@LogCustomValues=0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsNFObj_SendAlert"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{A16A7821-6B31-4D6E-BC55-E7A2488BBE23}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_SendAlert">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::paramSSISOpsNF_OnPostExecute_Disable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_1a3e6923a7a6438780b7d31fe2489f3f"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_1a3e6923a7a6438780b7d31fe2489f3f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_1a3e6923a7a6438780b7d31fe2489f3f")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
Copyright © 2014 Pragmatic Works Inc.
#####################################################################################################################
LEGAL NOTICE
#####################################################################################################################
THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
##################################################################################################################### 
*/
#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

using System.Net;
using System.Net.Mail;
using System.Collections;


#endregion

namespace st_1a3e6923a7a6438780b7d31fe2489f3f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            PerformNotificationAction();

            if (_isErrorEncountered)
                Dts.TaskResult = (int)ScriptResults.Failure;
            else
                Dts.TaskResult = (int)ScriptResults.Success;
            // End BI xPress Code
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion

        private const string NotificationFrameworkAlertListVariableName = "User::varSSISOpsNF_AlertList";
        private const string NotificationFrameworkAlertListAllVariableName = "User::varSSISOpsNF_AlertList_All";
        private const string NotificationFrameworkCounter = "User::varSSISOpsNF_Notification_Counter";
        private const string NotificationFrameworkSubComponentName = "BI xPress Notification Framework Send Alert";

        private bool _isErrorEncountered;

        private void PerformNotificationAction()
        {
            const string PREFIX_DISABLED = "{D}";

            bool isPackageRunning = false;
            string sPkgName = ReadVariable("System::PackageName").ToString();

            System.DateTime dtStart = (DateTime)ReadVariable("System::StartTime");
            System.DateTime dtEnd = DateTime.Now;

            string sExecAcct = ReadVariable("System::UserName").ToString();
            string sMachine = ReadVariable("System::MachineName").ToString();
            string sInteractive = ReadVariable("System::InteractiveMode").ToString();
            string sStepName = null;

            System.Collections.Hashtable oRuntimeSettings = GetRuntimeSettings();

            string alertInfosContents;
            bool isPackageTheSource = ReadVariable("System::SourceID").ToString() == ReadVariable("System::PackageID").ToString();

            if (isPackageTheSource)
            {
                // Package finished running 
                isPackageRunning = false;
                sStepName = string.Empty;
                alertInfosContents = ReadVariable(NotificationFrameworkAlertListAllVariableName) as string ?? string.Empty;
            }
            else
            {
                isPackageRunning = true;

                // Task finished running 
                if ((string)GetSetting("PRIORITY_MODE", oRuntimeSettings) == "DELAYED")
                    return; // Do all work when package is completed 

                alertInfosContents = ReadVariable(NotificationFrameworkAlertListVariableName) as string ?? string.Empty;
            }

            // Parse the collection of AlertInfo here.
            System.Collections.Generic.List<AlertInfo> alertInfos = ParseAlertInfos(alertInfosContents);

            if (isPackageTheSource && alertInfos.Count > 0)
                sStepName = GetLastAlertSource(alertInfos);

            string messageBody = null;
            string subjectLine = null;
            string messageBodySms = null;

            int errorCount = 0;
            int warningCount = 0;
            int otherCount = 0;
            int notificationCounter = (int)ReadVariable(NotificationFrameworkCounter);
            int maxNotifyCount = (int)GetSetting("MAX_NOTIFICATIONS", oRuntimeSettings);

            bool bEmailMethod = (bool)GetSetting("NOTIFY_USING_EMAIL", oRuntimeSettings);
            bool bSMSMethod = (bool)GetSetting("NOTIFY_USING_SMS", oRuntimeSettings);
            bool bEventLogMethod = (bool)GetSetting("NOTIFY_USING_EVENTLOG", oRuntimeSettings);
            bool bLogFileMethod = (bool)GetSetting("NOTIFY_USING_LOGFILE", oRuntimeSettings);
            bool bUseCustEmailTemplate = (bool)GetSetting("USE_CUSTOM_EMAIL_TEMPLATE", oRuntimeSettings);
            string sCustEmailTemplatePath = (string)GetSetting("CUSTOM_EMAIL_TEMPLATE_FILEPATH", oRuntimeSettings);
            string sLogFolderPath = (string)GetSetting("LOG_FOLDER_PATH", oRuntimeSettings);
            int iDeleteLogOlderThanDays = (int)GetSetting("DELETE_LOG_OLDER_THAN_DAYS", oRuntimeSettings);

            if (alertInfos.Count <= 0 && ((bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false && (bool)GetSetting("NOTIFY_ONSUCCESS", oRuntimeSettings) == false))
                return;

            if (alertInfos.Count <= 0 && isPackageRunning)
                return;

            if (isPackageRunning && notificationCounter >= maxNotifyCount && (bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false)
                return;

            bool isDelayedMode = (string)GetSetting("PRIORITY_MODE", oRuntimeSettings) == "DELAYED";

            if ((bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false && isDelayedMode == false && notificationCounter > 0)
                return;

            // Send Email
            object fromAddressObj = ReadVariable("User::varSSISOpsNF_From");
            string sFrom = fromAddressObj != null ? fromAddressObj.ToString() : "NotificationFramework@BIxPress.com";
            string sEmailList = string.Empty;

            if (bEmailMethod && (ReadVariable("User::varSSISOpsNF_To") != null))
            {
                sEmailList = ReadVariable("User::varSSISOpsNF_To").ToString();
                sEmailList = GetFilteredEmailList(sEmailList, ";", PREFIX_DISABLED);
            }

            MailMessage oMessage = null;

            if (!string.IsNullOrEmpty(sEmailList))
            {
                oMessage = new MailMessage();
                oMessage.From = new MailAddress(sFrom);
                oMessage.To.Add(sEmailList.Replace(";", ","));

                if (isDelayedMode == false)
                    oMessage.Priority = MailPriority.High;

                string sCCList = (string)GetSetting("CC_EMAILLIST", oRuntimeSettings);
                string sBCCList = (string)GetSetting("BCC_EMAILLIST", oRuntimeSettings);

                if (string.IsNullOrEmpty(sCCList) == false)
                    oMessage.CC.Add(sCCList.Replace(";", ",").Replace("|", ","));

                if (string.IsNullOrEmpty(sBCCList) == false)
                    oMessage.Bcc.Add(sBCCList.Replace(";", ",").Replace("|", ","));

                if ((string)GetSetting("EMAIL_FORMAT", oRuntimeSettings) == "HTML")
                {
                    oMessage.IsBodyHtml = true;
                    messageBody = GetHTMLNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, false, 0, bUseCustEmailTemplate, sCustEmailTemplatePath);
                }
                else
                {
                    oMessage.IsBodyHtml = false;
                    messageBody = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, false, 0, bUseCustEmailTemplate, sCustEmailTemplatePath);
                }

                oMessage.Body = messageBody;
            }

            if (bEventLogMethod || bLogFileMethod)
            {
                errorCount = 0;
                warningCount = 0;
                otherCount = 0;
                messageBody = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, false, 0, false, string.Empty);

                if (bLogFileMethod && (iDeleteLogOlderThanDays > 0))
                    DeleteOldFiles(sLogFolderPath, "NF_LOG_*.txt", iDeleteLogOlderThanDays);
            }

            if (warningCount > 0 && (bool)GetSetting("NOTIFY_ONWARNING", oRuntimeSettings))
            {
            }
            else
            {
                // Yes Send Alert 
                if ((errorCount > 0 && (bool)GetSetting("NOTIFY_ONSUCCESS", oRuntimeSettings) && (bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false && (bool)GetSetting("NOTIFY_ONERROR", oRuntimeSettings) == false && (bool)GetSetting("NOTIFY_ONWARNING", oRuntimeSettings) == false))
                    return;
            }

            // Send SMS 
            int iMaxLen = (int)GetSetting("SMS_MAXLENGTH", oRuntimeSettings);
            string sSMSList = (string)GetSetting("SMS_EMAILLIST", oRuntimeSettings);

            if (string.IsNullOrEmpty(sSMSList) == false)
                sSMSList = GetFilteredEmailList(sSMSList, "|", PREFIX_DISABLED);

            MailMessage oMessageSMS = null;

            if (bSMSMethod == true && !string.IsNullOrEmpty(sSMSList))
            {
                oMessageSMS = new MailMessage();
                oMessageSMS.From = new MailAddress(sFrom);
                oMessageSMS.To.Add(sSMSList.Replace("|", ","));
                errorCount = 0;
                warningCount = 0;
                otherCount = 0;
                messageBodySms = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, true, iMaxLen, false, string.Empty);

                string sTempBody;

                if (errorCount > 0)
                    sTempBody = errorCount == 1 ? "<SSIS Error>" : "<SSIS Errors>";
                else if (warningCount > 0)
                    sTempBody = warningCount == 1 ? "<SSIS Warning>" : "<SSIS Warnings>";
                else if (otherCount > 0)
                    sTempBody = otherCount == 1 ? "<SSIS Message>" : "<SSIS Messages>";
                else
                    sTempBody = "<SSIS Success>";

                sTempBody += System.Environment.NewLine + messageBodySms;

                if (sTempBody.Length >= iMaxLen - sFrom.Length)
                    oMessageSMS.Body = sTempBody.Substring(iMaxLen - sFrom.Length);
                else
                    oMessageSMS.Body = sTempBody;
            }

            if (isPackageRunning)
            {
                if (errorCount > 0)
                    subjectLine = "ERROR : Package " + ReadVariable("System::PackageName") + " has error(s) at task [" + ReadVariable("System::SourceName") + "]";
                else if (warningCount > 0)
                    subjectLine = "WARNING : Package " + ReadVariable("System::PackageName").ToString() + " has warning(s) at task [" + ReadVariable("System::SourceName").ToString() + "]";
                else
                {
                    if (otherCount > 0)
                        subjectLine = "ALERT : Package " + ReadVariable("System::PackageName").ToString() + " generated runtime alert(s)";
                    else
                        return;
                }
            }
            else
            {
                if (errorCount > 0)
                    subjectLine = "ERROR : Package " + ReadVariable("System::PackageName").ToString() + " completed with [" + errorCount.ToString() + "] error(s)";
                else if (warningCount > 0)
                    subjectLine = "WARNING : Package " + ReadVariable("System::PackageName").ToString() + " completed with [" + warningCount.ToString() + "] warning(s)";
                else if (otherCount > 0)
                    subjectLine = "ALERT : Package " + ReadVariable("System::PackageName").ToString() + " completed with [" + otherCount.ToString() + "] alert(s)";
                else
                    subjectLine = "SUCCESS : Package " + ReadVariable("System::PackageName").ToString() + " completed successfully";
            }

            SmtpClient oSmtpClient = null;

            if (bEmailMethod || bSMSMethod)
            {
                oSmtpClient = new SmtpClient(ReadVariable("User::varSSISOpsNF_SMTPServerName").ToString(), (int)GetSetting("SMTP_PORT", oRuntimeSettings));

                if (string.IsNullOrEmpty(GetSetting("SMTP_UID", oRuntimeSettings).ToString()) == false)
                    oSmtpClient.Credentials = new System.Net.NetworkCredential(GetSetting("SMTP_UID", oRuntimeSettings).ToString(), GetSetting("SMTP_PWD", oRuntimeSettings).ToString());
                else
                    oSmtpClient.UseDefaultCredentials = true;

                if ((bool)GetSetting("SMTP_USESSL", oRuntimeSettings))
                    oSmtpClient.EnableSsl = true;
            }

            if (isPackageRunning)
            {
                // Already sent immediate mode alert
                WriteVariable(NotificationFrameworkAlertListVariableName, string.Empty);
                alertInfos.Clear();
            }

            if (oMessage != null && oSmtpClient != null)
            {
                oMessage.Subject = subjectLine;

                try
                {
                    oSmtpClient.Send(oMessage);
                }
                catch (System.Net.Mail.SmtpException ex)
                {
                    _isErrorEncountered = true;

                    string exceptionMessage = UnwindExceptionMessages(ex);

                    Dts.Events.FireError((int)ex.StatusCode, NotificationFrameworkSubComponentName, exceptionMessage, "http://help.pragmaticworks.com/BIxPress/", 0);
                }
            }

            if (oMessageSMS != null && oSmtpClient != null)
            {
                if (iMaxLen > 400)
                {
                    ////Must be MMS 
                    oMessageSMS.Subject = subjectLine;

                    if (isDelayedMode == false)
                        oMessageSMS.Priority = MailPriority.High;
                }
                else
                    oMessageSMS.Subject = string.Empty;

                try
                {
                    oSmtpClient.Send(oMessageSMS);
                }
                catch (System.Net.Mail.SmtpException ex)
                {
                    _isErrorEncountered = true;

                    string exceptionMessage = UnwindExceptionMessages(ex);

                    Dts.Events.FireError((int)ex.StatusCode, NotificationFrameworkSubComponentName, exceptionMessage, "http://help.pragmaticworks.com/BIxPress/", 0);
                }
            }

            // Event Log
            if (bEventLogMethod)
            {
                if (errorCount > 0)
                    WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Error, "Application");
                else if (warningCount > 0)
                    WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Warning, "Application");
                else
                    WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Information, "Application");
            }

            // Log File
            if (bLogFileMethod)
            {
                // Log Event to Text File 
                string sPath = null;
                string sFileName = null;

                sPkgName = sPkgName.Replace("<", string.Empty).Replace(">", string.Empty).Replace(":", string.Empty).Replace("/", string.Empty).Replace("\\", string.Empty).Replace("*", string.Empty).Replace("|", string.Empty).Replace("?", string.Empty);

                if (errorCount > 0)
                    sFileName = "NF_LOG_" + System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") + "_ERROR_" + sPkgName + ".txt";
                else if (warningCount > 0)
                    sFileName = "NF_LOG_" + System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") + "_WARNING_" + sPkgName + ".txt";
                else
                    sFileName = "NF_LOG_" + System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") + "_INFO_" + sPkgName + ".txt";

                sPath = System.IO.Path.Combine(sLogFolderPath, sFileName);
                SaveTextToFile(messageBody, sPath, false, null);
            }

            // Increment notification counter
            WriteVariable(NotificationFrameworkCounter, notificationCounter++);
        }

        private System.Collections.Generic.List<AlertInfo> ParseAlertInfos(string alertInfosContents)
        {
            if (string.IsNullOrEmpty(alertInfosContents))
                return new System.Collections.Generic.List<AlertInfo>();

            System.Collections.Generic.List<AlertInfo> alertInfos = new System.Collections.Generic.List<AlertInfo>();

            try
            {
                // Create the XML document once here immediately before use so we don't have to validate it each time we add an AlertInfo object to the list.
                System.Xml.XmlDocument document = new System.Xml.XmlDocument();

                // This is the static XML document declaration that we will load our children into.
                // The <AlertInfos /> element will become our parent element which will contain all of the serialized
                // AlertInfo objects that we added in the OnWarning, OnError, etc. event handlers.
                document.LoadXml("<?xml version=\"1.0\" encoding=\"UTF-16\" ?><AlertInfos />");

                System.Xml.XmlDocumentFragment documentFragment = document.CreateDocumentFragment();

                documentFragment.InnerXml = alertInfosContents;

                document.DocumentElement.AppendChild(documentFragment);

                System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(AlertInfo), new Type[] { typeof(AlertType) });

                foreach (System.Xml.XmlElement alertInfoElement in document.DocumentElement.ChildNodes)
                {
                    using (System.IO.StringReader reader = new System.IO.StringReader(alertInfoElement.OuterXml))
                    {
                        AlertInfo parsedAlertInfo = xmlSerializer.Deserialize(reader) as AlertInfo;

                        if (parsedAlertInfo != null)
                            alertInfos.Add(parsedAlertInfo);
                    }
                }
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(60001, NotificationFrameworkSubComponentName, "There was an error while attempting to parse the accumulated alerts for BI xPress Notification Framework.  Error message: " + ex.Message, "http://help.pragmaticworks.com/BIxPress", 0);
            }

            return alertInfos;
        }

        private string UnwindExceptionMessages(Exception ex)
        {
            if (ex == null)
                return string.Empty;

            string messages = !string.IsNullOrEmpty(ex.Message) ? ex.Message : string.Empty;

            string childMessages = UnwindExceptionMessages(ex.InnerException);

            if (!string.IsNullOrEmpty(childMessages))
                messages += "  " + childMessages;

            return messages;
        }

        public bool WriteToEventLog(string logEntry, string appName, System.Diagnostics.EventLogEntryType eventType, string logName)
        {
            try
            {
                System.Diagnostics.EventLog objEventLog = new System.Diagnostics.EventLog();
            
                // Register the App as an Event Source 
                if (!System.Diagnostics.EventLog.SourceExists(appName))
                    System.Diagnostics.EventLog.CreateEventSource(appName, logName);

                objEventLog.Source = appName;
                objEventLog.WriteEntry(logEntry, eventType);

                return true;
            }
            catch (Exception ex)
            {
                _isErrorEncountered = true;
            
                Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, string.Format("An error occurred while creating the Windows Event Log \"{0}\": {1}.", logName, ex.Message), string.Empty, 0);

                return false;
            }
        }

        public bool SaveTextToFile(string fileContents, string filePath, bool isAppend, System.Text.Encoding encoding)
        {
            if (string.IsNullOrEmpty(filePath))
            {
                _isErrorEncountered = true;
            
                Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, "The log file path is invalid.  Unable to save log file.", string.Empty, 0);

                return false;
            }

            string directoryPath = System.IO.Path.GetDirectoryName(filePath);

            if (string.IsNullOrEmpty(filePath))
            {
                _isErrorEncountered = true;
                
                Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, "The log file directory path is invalid.  Unable to save log file.", string.Empty, 0);

                return false;
            }

            if (directoryPath != null && !System.IO.Directory.Exists(directoryPath))
            {
                _isErrorEncountered = true;
                
                Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, string.Format("The log file directory \"{0}\" does not exist.  Unable to save log file because the specified directory does not exist.", directoryPath), string.Empty, 0);

                return false;
            }

            try
            {
                using (System.IO.StreamWriter objWriter = encoding == null ? new System.IO.StreamWriter(filePath, isAppend) : new System.IO.StreamWriter(filePath, isAppend, encoding))
                {
                    objWriter.Write(fileContents);
                    objWriter.Close();
                }
            }
            catch (Exception ex)
            {
                _isErrorEncountered = true;
            
                Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, string.Format("An error occurred while creating the log file \"{0}\": {1}", filePath, ex.Message), string.Empty, 0);

                return false;
            }

            return true;
        }

        /// <summary>
        /// This will delete files with specified pattern which are older than specified days.
        /// </summary>
        /// <param name="directoryPath">The directory path for which to remove files.</param>
        /// <param name="fileExtensionSearchPattern">The log files search pattern.</param>
        /// <param name="olderThanDays">The number of days ago to begin deleting files.</param>
        /// <returns>The number of files that were deleted.</returns>
        public int DeleteOldFiles(string directoryPath, string fileExtensionSearchPattern, int olderThanDays)
        {
            int iDeleted = 0;

            try
            {
                if (!System.IO.Directory.Exists(directoryPath))
                {
                    Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, string.Format("The directory \"{0}\" does not exist.  Unable to delete old log files because the directory does not exist.", directoryPath), string.Empty, 0);

                    return 0;
                }

                string[] files = System.IO.Directory.GetFiles(directoryPath, fileExtensionSearchPattern);

                foreach (string myfile in files)
                {
                    System.IO.FileInfo fi = new System.IO.FileInfo(myfile);

                    // Write full path of this file 
                    if (fi.CreationTime < DateTime.Today.AddDays(0 - olderThanDays))
                    {
                        fi.Delete();
                        iDeleted++;
                    }
                }
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, string.Format("An error occurred while deleting old log files from the \"{0}\" directory: {1}", directoryPath, ex.Message), string.Empty, 0);
            }

            return iDeleted;
        }

        public string GetSubStringBetween(string stringToParse, string startString, string endString)
        {
            if (string.IsNullOrEmpty(stringToParse))
                return null;

            int startPosition = stringToParse.IndexOf(startString);
            int endPosition = stringToParse.IndexOf(endString);

            if (startPosition < 0 | endPosition < 0)
                return null;

            return stringToParse.Substring(startPosition + startString.Length, endPosition - (startPosition + startString.Length));
        }

        // Example : ReplaceSubStringBetween("---<a>test</a>---", "<a>", "</a>", "HHH",False) ===> ---<a>HHH</a>--- 
        // Example : ReplaceSubStringBetween("---<a>test</a>---", "<a>", "</a>", "HHH",True) ===> ---HHH--- 
        public string ReplaceSubStringBetween(string stringToParse, string startString, string endString, string replacewith, bool replacemarkers)
        {
            if (string.IsNullOrEmpty(stringToParse))
                return null;

            int startPosition = stringToParse.IndexOf(startString);
            int endPosition = stringToParse.IndexOf(endString);

            if (startPosition < 0 | endPosition < 0)
                return stringToParse;

            string s1 = null;
            string s2 = null;

            if (replacemarkers == false)
            {
                s1 = stringToParse.Remove(startPosition + startString.Length, (endPosition) - (startPosition + startString.Length));
                s2 = s1.Insert(startPosition + startString.Length, replacewith);
            }
            else
            {
                s1 = stringToParse.Remove(startPosition, (endPosition + endString.Length) - (startPosition));
                s2 = s1.Insert(startPosition, replacewith);
            }

            return s2;
        }

        private string GetPkgStatus(bool bPkgRunning, string sStepName, int iErrors, int iWarnings)
        {
            string sStatus = null;
            string s = string.Empty;

            if (string.IsNullOrEmpty(sStepName) == false)
                s = " @ STEP [" + sStepName + "]";

            if (iErrors > 0)
            {
                if (bPkgRunning == false)
                    sStatus = "COMPLETED W/ ERRORS";
                else
                    sStatus = "HAS " + (iErrors > 0 ? " ERRORS" : string.Empty) + s;
            }
            else
            {
                if (bPkgRunning == false)
                    sStatus = "COMPLETED" + (iWarnings > 0 ? " W/ WARNINGS" : string.Empty);
                else
                    sStatus = "HAS " + (iWarnings > 0 ? " WARNINGS" : string.Empty) + s;
            }

            return sStatus;
        }

        private string GetTextNotificationMessage(string sPkgName, DateTime dtStartTime, DateTime dtEndTime, string sRunTime, string sMachineName, string sExecAcctName, string sInteractive, bool bPkgRunning, string sStepName, ref int iErrors, ref int iWarnings, ref int iOtherAlerts, System.Collections.Generic.List<AlertInfo> alertList, bool bForSMS, int iSMSLength, bool bUseCustEmailTemplate, string sCustEmailTemplatePath)
        {
            System.Text.StringBuilder oSB = new System.Text.StringBuilder();
            System.Text.StringBuilder oSBAlerts = new System.Text.StringBuilder();

            System.Text.StringBuilder sbAlerts = new System.Text.StringBuilder();

            string sStatus = null;

            string sAlertType = null;

            string sTemplate = string.Empty;

            if (bForSMS == true)
                bUseCustEmailTemplate = false;

            string sAlertRow = string.Empty;
            string sAlertRows = string.Empty;

            if (bUseCustEmailTemplate == true)
            {
                try
                {
                    sTemplate = System.IO.File.ReadAllText(sCustEmailTemplatePath);
                    sAlertRow = GetSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->");
                }
                catch (Exception)
                {
                    bUseCustEmailTemplate = false;
                }
            }

            if (alertList.Count > 0)
            {
                if (bForSMS == false)
                    oSBAlerts.AppendLine("************ Total [" + alertList.Count + "] Alerts *************");
                else
                    oSBAlerts.AppendLine("<< [" + alertList.Count + "] Alerts >> ");

                oSBAlerts.AppendLine();

                foreach (AlertInfo alertInfo in alertList)
                {
                    if (alertInfo.AlertType == AlertType.ErrorAlert)
                    {
                        sAlertType = "ERROR";
                        iErrors = iErrors + 1;
                    }
                    else if (alertInfo.AlertType == AlertType.WarningAlert)
                    {
                        sAlertType = "WARNING";
                        iWarnings = iWarnings + 1;
                    }
                    else if (alertInfo.AlertType == AlertType.TimeThresholdAlert)
                    {
                        sAlertType = "TIME THRESHOLD ALERT";
                        iOtherAlerts = iOtherAlerts + 1;
                    }
                    else
                        sAlertType = "ALERT";

                    if (bForSMS)
                        oSBAlerts.AppendLine(alertInfo.SourceName + " >> " + sAlertType + " : " + alertInfo.AlertDescription);
                    else
                    {
                        if (bUseCustEmailTemplate && string.IsNullOrEmpty(sAlertRow) == false)
                            sAlertRows = sAlertRows + sAlertRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", sAlertType).Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture));
                        else
                            oSBAlerts.AppendLine((((("[" + (alertInfo.AlertTimeStamp).ToString("MM/dd HH:mm:ss") + "] ") + alertInfo.SourceName + " = > ") + sAlertType + "[") + alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture) + "] : ") + alertInfo.AlertDescription + System.Environment.NewLine);
                    }
                }
            }

            sStatus = GetPkgStatus(bPkgRunning, sStepName, iErrors, iWarnings);

            string sShortStatus = GetShortStatus(iErrors, iWarnings);

            if (bUseCustEmailTemplate)
            {
                sTemplate = sTemplate.Replace("{{PackageName}}", sPkgName
                        ).Replace("{{StatusLong}}", sStatus
                        ).Replace("{{StatusShort}}", sShortStatus
                        ).Replace("{{TotalAlertCount}}", (iErrors + iWarnings).ToString()
                        ).Replace("{{ErrorCount}}", iErrors.ToString()
                        ).Replace("{{WarningCount}}", iWarnings.ToString()
                        ).Replace("{{RunTime}}", sRunTime
                        ).Replace("{{MachineName}}", sMachineName
                        ).Replace("{{ExecutionAccount}}", sExecAcctName
                        ).Replace("{{WasInteractive}}", sInteractive
                        ).Replace("{{PackageStartTime}}", dtStartTime.ToString()
                        ).Replace("{{FrameworkVersion}}", "5.7.0.929"
                        ).Replace("{{PackageEndTime}}", dtEndTime.ToString());

                return ReplaceSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->", sAlertRows, true);
            }
            else
            {
                oSB.AppendLine("Package: " + sPkgName);
                oSB.AppendLine("Status: " + sStatus);

                if (bForSMS)
                    oSB.AppendLine("Start Time: " + dtStartTime.ToString("MM/dd HH:mm:ss"));
                else
                    oSB.AppendLine("Start Time: " + dtStartTime);

                if (bPkgRunning == false)
                {
                    if (bForSMS == false)
                        oSB.AppendLine("End Time: " + dtEndTime);

                    oSB.AppendLine("Run Time: " + FormatTimeDifference(dtStartTime, dtEndTime));
                }
                else if (bForSMS == false)
                    oSB.AppendLine("End Time: <Still Running>");

                if (bForSMS == false)
                {
                    oSB.AppendLine("Total Errors: " + iErrors);
                    oSB.AppendLine("Total Warnings: " + iWarnings);
                    oSB.AppendLine("Machine Name: " + sMachineName);
                    oSB.AppendLine("Was Interactive?: " + sInteractive);
                    oSB.AppendLine("Execution Account: " + sExecAcctName);
                    oSB.AppendLine();
                }

                return oSB.ToString() + oSBAlerts.ToString();
            }
        }

        private string GetHTMLNotificationMessage(string sPkgName, DateTime dtStartTime, DateTime dtEndTime, string sRunTime, string sMachineName, string sExecAcctName, string sInteractive, bool bPkgRunning, string sStepName, ref int iErrors, ref int iWarnings, ref int iOtherAlerts, System.Collections.Generic.List<AlertInfo> alertList, bool bForSMS, int iSMSLength, bool bUseCustEmailTemplate, string sCustEmailTemplatePath)
        {
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            System.Text.StringBuilder sbAlerts = new System.Text.StringBuilder();
            string sStatus = null;
            string sColor = null;
            string sTemplate = string.Empty;

            string sAlertBlock = string.Empty;
            string sErrorBlock = string.Empty;
            string sWarningBlock = string.Empty;
            string sErrorSourceBlock = string.Empty;
            string sWarningSourceBlock = string.Empty;
            string sErrorRow = string.Empty;
            string sWarningRow = string.Empty;

            if (bForSMS == true)
                bUseCustEmailTemplate = false;

            if (bUseCustEmailTemplate)
            {
                try
                {
                    sTemplate = System.IO.File.ReadAllText(sCustEmailTemplatePath);
                    sAlertBlock = GetSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->");

                    if (string.IsNullOrEmpty(sAlertBlock) == false)
                    {
                        sWarningBlock = sAlertBlock;
                        sErrorBlock = sAlertBlock;
                    }
                    else
                    {
                        sErrorBlock = GetSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->");
                        sWarningBlock = GetSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->");
                    }

                    sErrorSourceBlock = GetSubStringBetween(sErrorBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->");
                    sErrorRow = GetSubStringBetween(sErrorBlock, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->");

                    if (string.IsNullOrEmpty(sWarningBlock) == false)
                    {
                        sWarningSourceBlock = GetSubStringBetween(sWarningBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->");
                        sWarningRow = GetSubStringBetween(sWarningBlock, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->");
                    }
                }
                catch (Exception)
                {
                    // Dts.FireError "Can not load template file. " + ex.Message
                    // Dont use template becuase we cant load file 
                    bUseCustEmailTemplate = false;
                }
            }

            string sAlertHTML = string.Empty;

            /////////////////////////////////////////// 
            //Loop Through ERRORS 
            /////////////////////////////////////////// 

            string sErrorHTML = string.Empty;
            string sPrevSource = string.Empty;

            string sSourceAlertRows = string.Empty;

            foreach (AlertInfo alertInfo in alertList)
            {
                if (alertInfo.AlertType != AlertType.ErrorAlert)
                    continue;

                iErrors++;
                sColor = "FFD5D5";

                if (bUseCustEmailTemplate == true && string.IsNullOrEmpty(sErrorRow) == true)
                    continue;

                if (sPrevSource != alertInfo.SourceName)
                {
                    // Alert Source Line 
                    if (bUseCustEmailTemplate == true)
                    {
                        if (iErrors > 1)
                            sErrorHTML = ReplaceSubStringBetween(sErrorHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true); // Prev Source Block

                        if (string.IsNullOrEmpty(sWarningSourceBlock) == false)
                            sErrorHTML += sErrorSourceBlock.Replace("{{AlertSourceName}}", alertInfo.SourceName);
                        else
                            sErrorHTML += sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName);

                        sSourceAlertRows = string.Empty;
                    }
                    else
                        sErrorHTML += (("<tr><td width=\"100%\" bgcolor=\"#" + sColor + "\"><b>Source :</b> ") + alertInfo.SourceName + "</td></tr>") + System.Environment.NewLine;
                }

                // Alert Line 
                if (bUseCustEmailTemplate == true)
                    sSourceAlertRows = sSourceAlertRows + sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", "Error").Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture));
                else
                    sErrorHTML = sErrorHTML + ((("<tr><td width=\"100%\"><b>" + alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture) + " : " + "</b>[") + alertInfo.AlertCode + "] ") + alertInfo.AlertDescription + "</td></tr>") + System.Environment.NewLine;

                sPrevSource = alertInfo.SourceName;
            }

            if (iErrors > 0)
            {
                if (bUseCustEmailTemplate == true)
                {
                    // Replace last source detail after loop is done 
                    // Populate Prev Source Block 
                    sErrorHTML = ReplaceSubStringBetween(sErrorHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true);
                    // Populate Error Block 
                    if (string.IsNullOrEmpty(sAlertBlock) == false)
                        sAlertHTML += sErrorHTML;
                    else
                    {
                        sErrorBlock = ReplaceSubStringBetween(sErrorBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sErrorHTML, true);
                        sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->", sErrorBlock, true);
                    }
                }
                else
                {
                    sbAlerts.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                    sbAlerts.AppendLine("<tr><td width=\"100%\" bgcolor=\"#FF0000\"><font color=\"#FFFFFF\" Size=\"4\"><b>ERRORS</b></font></td></tr>");
                    sbAlerts.AppendLine(sErrorHTML);
                    sbAlerts.AppendLine("</table><BR>");
                }
            }
            else if (bUseCustEmailTemplate)
                sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->", string.Empty, true);

            /////////////////////////////////////////// 
            //Loop Through Warnings 
            /////////////////////////////////////////// 
            string sWarningHTML = string.Empty;
            sPrevSource = string.Empty;

            foreach (AlertInfo alertInfo in alertList)
            {
                if (alertInfo.AlertType != AlertType.WarningAlert)
                    continue;

                iWarnings++;
                sColor = "FFFF80";

                if (bUseCustEmailTemplate == true && string.IsNullOrEmpty(sWarningRow) == true)
                    continue;

                if (sPrevSource != alertInfo.SourceName)
                {
                    if (bUseCustEmailTemplate == true)
                    {
                        if (iWarnings > 1)
                            sWarningHTML = ReplaceSubStringBetween(sWarningHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true); // Prev Source Block

                        if (string.IsNullOrEmpty(sWarningSourceBlock) == false)
                            sWarningHTML += sWarningSourceBlock.Replace("{{AlertSourceName}}", alertInfo.SourceName);
                        else
                            sWarningHTML += sWarningRow.Replace("{{AlertSourceName}}", alertInfo.SourceName);

                        sSourceAlertRows = string.Empty;
                    }
                    else
                        sWarningHTML += (("<tr><td width=\"100%\" bgcolor=\"#" + sColor + "\"><b>Source :</b> ") + alertInfo.SourceName + "</td></tr>") + System.Environment.NewLine;
                }

                if (bUseCustEmailTemplate == true && string.IsNullOrEmpty(sWarningRow) == false)
                    sSourceAlertRows += sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", "Warning").Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture));
                else
                    sWarningHTML += ((("<tr><td width=\"100%\"><b>" + alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture) + " : " + "</b>[") + alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture) + "] ") + alertInfo.AlertDescription + "</td></tr>") + System.Environment.NewLine;

                sPrevSource = alertInfo.SourceName;
            }

            if (iWarnings > 0)
            {
                if (bUseCustEmailTemplate == true)
                {
                    if (string.IsNullOrEmpty(sWarningRow) == false)
                    {
                        sWarningHTML = ReplaceSubStringBetween(sWarningHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true);

                        // Populate Warning Block
                        if (string.IsNullOrEmpty(sAlertBlock) == false)
                            sAlertHTML += sWarningHTML;
                        else
                        {
                            sWarningBlock = ReplaceSubStringBetween(sWarningBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sWarningHTML, true);
                            sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->", sWarningBlock, true);
                        }
                    }
                }
                else
                {
                    sbAlerts.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                    sbAlerts.AppendLine("<tr><td width=\"100%\" bgcolor=\"#FD6013\"><font color=\"#FFFFFF\" Size=\"4\"><b>WARNINGS</b></font></td></tr>");
                    sbAlerts.AppendLine(sWarningHTML);
                    sbAlerts.AppendLine("</table><BR>");
                }
            }
            else if (bUseCustEmailTemplate)
                sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->", string.Empty, true);

            if (string.IsNullOrEmpty(sAlertBlock) == false)
            {
                sAlertBlock = ReplaceSubStringBetween(sAlertBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sAlertHTML, true);
                sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->", sAlertBlock, true);
            }

            sStatus = GetPkgStatus(bPkgRunning, sStepName, iErrors, iWarnings);

            if (bUseCustEmailTemplate == true)
            {
                string sShortStatus = GetShortStatus(iErrors, iWarnings);

                sTemplate = sTemplate.Replace("{{PackageName}}", sPkgName
                    ).Replace("{{StatusLong}}", sStatus
                    ).Replace("{{StatusShort}}", sShortStatus
                    ).Replace("{{TotalAlertCount}}", (iErrors + iWarnings).ToString()
                    ).Replace("{{ErrorCount}}", iErrors.ToString()
                    ).Replace("{{WarningCount}}", iWarnings.ToString()
                    ).Replace("{{RunTime}}", sRunTime
                    ).Replace("{{MachineName}}", sMachineName
                    ).Replace("{{ExecutionAccount}}", sExecAcctName
                    ).Replace("{{WasInteractive}}", sInteractive
                    ).Replace("{{PackageStartTime}}", dtStartTime.ToString()
                    ).Replace("{{FrameworkVersion}}", "5.7.0.929"
                    ).Replace("{{PackageEndTime}}", dtEndTime.ToString());
            }
            else
            {
                sbAlerts.AppendLine("<br><br><font face=\"Tahoma\" size=\"1\">This report was generated by <a href=\"http://www.pragmaticworks.com/pages/?src=bixpress&tag=NFEmail&url=/\">BI xPress Notification Framework</a> 5.7.0.929</font>");

                sColor = ((iErrors > 0 ? "FF0000" : ((iWarnings > 0 | iOtherAlerts > 0 ? "FD6013" : "00FF00"))));
                sb.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                sb.AppendLine((("<tr><td><p><b><font size=\"4\">" + sPkgName + " <font color=\"#") + sColor + "\">") + sStatus + "</font></font></b></td></tr>");
                sb.AppendLine("<tr><td width=\"100%\" bgcolor=\"#0B6BE1\"><font color=\"#FFFFFF\"><b>Package Execution Summary</b></font></td></tr>");
                sb.AppendLine("<tr><td width=\"100%\">");
                sb.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                sb.AppendLine(("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Execution Status</b></td><td> <font color=\"#" + sColor + "\">") + sStatus + "</font></td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Start Time</b></td><td>" + dtStartTime + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>End Time</b></td><td>" + dtEndTime + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Run Time</b></td><td>" + sRunTime + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Total Errors</b></td><td>" + iErrors + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Total Warnings</b></td><td>" + iWarnings + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Machine Name</b></td><td>" + sMachineName + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Execution Account</b></td><td>" + sExecAcctName + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Was Interactive?</b></td><td>" + sInteractive + "</td></tr>");
                sb.AppendLine("</table>");
                sb.AppendLine("</td></tr></table><BR>");
                sb.AppendLine();
            }

            if (bUseCustEmailTemplate == true)
                return sTemplate;
            else
                return sb.ToString() + sbAlerts.ToString();
        }

        private string GetShortStatus(int iErrors, int iWarnings)
        {
            if (iErrors > 0)
                return "ERROR";
            else if (iWarnings > 0)
                return "WARNING";
            else
                return "SUCCESS";
        }

        public string FormatTimeDifference(DateTime dStart, DateTime dEnd)
        {
            return FormatTimeSpanFromSec(dEnd.Subtract(dStart));
        }

        public string FormatTimeSpanFromSec(TimeSpan ts)
        {
            try
            {
                string msg = string.Empty;

                if (ts.Days > 0)
                    msg = ts.Days + " day,";

                if (ts.Hours > 0)
                    msg = msg + ts.Hours + " hr,";

                if (ts.Minutes > 0)
                    msg = msg + ts.Minutes + " min,";

                if (ts.Seconds > 0)
                    msg = msg + Math.Round(ts.Seconds + (ts.Milliseconds / 1000.0), 1) + " sec";
                else if (ts.TotalMilliseconds > 0 && string.IsNullOrEmpty(msg))
                    msg = Math.Round(ts.TotalMilliseconds / 1000.0, 2) + " sec";

                return msg.TrimEnd(',');
            }
            catch (Exception)
            {
                return "[0 sec]";
            }
        }

        object GetPropVal(object obj, string propname)
        {
            return System.ComponentModel.TypeDescriptor.GetProperties(obj)[propname].GetValue(obj);
        }

        private string GetLastAlertSource(System.Collections.Generic.List<AlertInfo> alertInfoList)
        {
            string alertSource = string.Empty;

            for (int i = alertInfoList.Count - 1; i > -1; i--)
            {
                if (alertInfoList[i].AlertType == AlertType.ErrorAlert)
                    return alertInfoList[i].SourceName;

                if (alertInfoList[i].AlertType == AlertType.WarningAlert && string.IsNullOrEmpty(alertSource))
                    alertSource = alertInfoList[i].SourceName;
            }

            return alertSource;
        }

        private string GetFilteredEmailList(string sOriginalList, string sSeperator, string sFilterPrefix)
        {
            string[] sArr = null;

            if (string.IsNullOrEmpty(sOriginalList))
                return string.Empty;

            string sReturn = string.Empty;

            sArr = sOriginalList.Split(sSeperator.ToCharArray(), 10000, StringSplitOptions.RemoveEmptyEntries);

            foreach (string sItm in sArr)
            {
                if (sItm.StartsWith(sFilterPrefix) == false)
                    sReturn += sItm + sSeperator;
            }

            return sReturn.Trim(sSeperator.ToCharArray());
        }
        private void SetSetting(string SettingName, object Value, System.Collections.Hashtable runtimeSettings)
        {
            SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (!runtimeSettings.ContainsKey(SettingName))
                throw new Exception(SettingName + " setting doesn't exist in runtime setting list.");

            runtimeSettings[SettingName] = Value;
        }

        private object GetSetting(string settingName, System.Collections.Hashtable runtimeSettings)
        {
            settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (runtimeSettings.ContainsKey(settingName))
                return runtimeSettings[settingName];

            // If key not found then set default 
            switch (settingName)
            {
                case "MAX_NOTIFICATIONS":
                    return 1;
                case "ENABLE_ROWCOUNT_THRESHOLD":
                    return false;
                case "ENABLE_TIME_THRESHOLD":
                    return false;
                case "PRIORITY_MODE":
                    //// DELAYED (After Package) or URGENT (After Task) 
                    return "URGENT";
                case "EMAIL_FORMAT":
                    //// TEXT or HTML 
                    return "TEXT";
                case "SMTP_PORT":
                    //// Default 25 
                    return 25;
                case "SMTP_USESSL":
                    //// Default False
                    return false;
                case "SMTP_UID":
                    return "";
                case "SMTP_PWD":
                    return "";
                case "SMS_EMAILLIST":
                    ////Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                    return "";
                case "FILTERED_ALERTS":
                    ////Must be pipe seperated e.g. -2344556|-11223445 .... 
                    return "";
                case "NOTIFY_ONERROR":
                    return true;
                case "NOTIFY_ONWARNING":
                    return false;
                case "NOTIFY_ONSUCCESS":
                    return false;
                case "NOTIFY_ONCOMPLETE":
                    return false;
                case "SMS_MAXLENGTH":
                    return 160;
                case "NF_CHECK":
                    return "";
                case "CC_EMAILLIST":
                    return "";
                case "BCC_EMAILLIST":
                    return "";
                case "NOTIFY_USING_EMAIL":
                    return true;
                case "NOTIFY_USING_SMS":
                    return true;
                case "NOTIFY_USING_EVENTLOG":
                    return false;
                case "NOTIFY_USING_LOGFILE":
                    return false;
                case "LOG_FOLDER_PATH":
                    return "C:\\SSIS\\Log";
                case "DELETE_LOG_OLDER_THAN_DAYS":
                    return 5;
                case "USE_CUSTOM_EMAIL_TEMPLATE":
                    return false;
                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                    return "C:\\SSIS\\Config\\NF_EmailTemplate.htm";
                default:
                    return null;
            }
        }

        [Serializable]
        public enum AlertType
        {
            ErrorAlert = 1,
            WarningAlert = 2,
            TimeThresholdAlert = 3,
            RowCountThresholdAlert = 4
        }

        // NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
        // In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
        public System.Collections.Hashtable GetRuntimeSettings()
        {
            object otherConfigSettingsVariableValue = ReadVariable("User::varSSISOpsNF_OtherConfigSettings");
            string otherConfigSettings = otherConfigSettingsVariableValue != null ? otherConfigSettingsVariableValue.ToString() : null;

            System.Collections.Hashtable runtimeSettings = new System.Collections.Hashtable();

            // Set Default values
            runtimeSettings.Add("MAX_NOTIFICATIONS", 1);
            runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", false);
            runtimeSettings.Add("ENABLE_TIME_THRESHOLD", false);
            runtimeSettings.Add("PRIORITY_MODE", "DELAYED");
            runtimeSettings.Add("EMAIL_FORMAT", "HTML");
            runtimeSettings.Add("SMTP_PORT", 25);
            runtimeSettings.Add("SMTP_USESSL", false);
            runtimeSettings.Add("SMTP_UID", string.Empty);
            runtimeSettings.Add("SMTP_PWD", string.Empty);
            runtimeSettings.Add("SMS_EMAILLIST", string.Empty);
            runtimeSettings.Add("FILTERED_ALERTS", string.Empty);
            runtimeSettings.Add("NOTIFY_ONERROR", true);
            runtimeSettings.Add("NOTIFY_ONWARNING", false);
            runtimeSettings.Add("NOTIFY_ONSUCCESS", false);
            runtimeSettings.Add("NOTIFY_ONCOMPLETE", false);
            runtimeSettings.Add("SMS_MAXLENGTH", 160);
            runtimeSettings.Add("CC_EMAILLIST", string.Empty);
            runtimeSettings.Add("BCC_EMAILLIST", string.Empty);
            runtimeSettings.Add("NOTIFY_USING_EMAIL", true);
            runtimeSettings.Add("NOTIFY_USING_SMS", true);
            runtimeSettings.Add("NOTIFY_USING_EVENTLOG", false);
            runtimeSettings.Add("NOTIFY_USING_LOGFILE", false);
            runtimeSettings.Add("LOG_FOLDER_PATH", "C:\\SSIS\\Log");
            runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5);
            runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", false);
            runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\\SSIS\\Config\\NF_EmailTemplate.htm");

            if (!string.IsNullOrEmpty(otherConfigSettings))
            {
                // Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

                const string PAIR_SEP = ";";
                const string NAMEVAL_SEP = "=";

                string[] arrNameValue = otherConfigSettings.Split(PAIR_SEP.ToCharArray());

                foreach (string sPair in arrNameValue)
                {
                    string[] arrTemp = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries);

                    try
                    {
                        if (arrTemp.Length >= 2)
                        {
                            string settingName = arrTemp[0];
                            string settingValue = arrTemp[1];

                            switch (settingName.ToUpper().Trim())
                            {
                                case "MAX_NOTIFICATIONS":
                                    runtimeSettings["MAX_NOTIFICATIONS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "ENABLE_ROWCOUNT_THRESHOLD":
                                    runtimeSettings["ENABLE_ROWCOUNT_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "ENABLE_TIME_THRESHOLD":
                                    runtimeSettings["ENABLE_TIME_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "PRIORITY_MODE":
                                    // DELAYED (After Package) or URGENT (After Task) 
                                    runtimeSettings["PRIORITY_MODE"] = (string)settingValue;
                                    break;
                                case "EMAIL_FORMAT":
                                    // TEXT or HTML 
                                    runtimeSettings["EMAIL_FORMAT"] = (string)settingValue;
                                    break;
                                case "SMTP_PORT":
                                    // Default 25 
                                    runtimeSettings["SMTP_PORT"] = Convert.ToInt32(settingValue);
                                    break;
                                case "SMTP_USESSL":
                                    // Default false
                                    runtimeSettings["SMTP_USESSL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMTP_UID":
                                    runtimeSettings["SMTP_UID"] = (string)settingValue;
                                    break;
                                case "SMTP_PWD":
                                    runtimeSettings["SMTP_PWD"] = (string)settingValue;
                                    break;
                                case "SMS_EMAILLIST":
                                    // Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                    runtimeSettings["SMS_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "FILTERED_ALERTS":
                                    ////Must be pipe seperated e.g. -111|-222 .... 
                                    runtimeSettings["FILTERED_ALERTS"] = (string)settingValue;
                                    break;
                                case "NOTIFY_ONERROR":
                                    runtimeSettings["NOTIFY_ONERROR"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONWARNING":
                                    runtimeSettings["NOTIFY_ONWARNING"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONSUCCESS":
                                    runtimeSettings["NOTIFY_ONSUCCESS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONCOMPLETE":
                                    runtimeSettings["NOTIFY_ONCOMPLETE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMS_MAXLENGTH":
                                    runtimeSettings["SMS_MAXLENGTH"] = Convert.ToInt32(settingValue);
                                    break;
                                case "CC_EMAILLIST":
                                    runtimeSettings["CC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "BCC_EMAILLIST":
                                    runtimeSettings["BCC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "NOTIFY_USING_EMAIL":
                                    runtimeSettings["NOTIFY_USING_EMAIL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_SMS":
                                    runtimeSettings["NOTIFY_USING_SMS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_EVENTLOG":
                                    runtimeSettings["NOTIFY_USING_EVENTLOG"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_LOGFILE":
                                    runtimeSettings["NOTIFY_USING_LOGFILE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "LOG_FOLDER_PATH":
                                    runtimeSettings["LOG_FOLDER_PATH"] = (string)settingValue;
                                    break;
                                case "DELETE_LOG_OLDER_THAN_DAYS":
                                    runtimeSettings["DELETE_LOG_OLDER_THAN_DAYS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "USE_CUSTOM_EMAIL_TEMPLATE":
                                    runtimeSettings["USE_CUSTOM_EMAIL_TEMPLATE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                                    runtimeSettings["CUSTOM_EMAIL_TEMPLATE_FILEPATH"] = (string)settingValue;
                                    break;
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, string.Empty, 0);
                    }
                }
            }

            SetNF(runtimeSettings);

            WriteVariable(NotificationFrameworkCounter, 0);

            return runtimeSettings;
        }

        public void SetNF(Hashtable runtimeSettings)
        {
            runtimeSettings.Add(((Char)78).ToString() + ((Char)70).ToString() + ((Char)95).ToString() + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString(), ReadVariable("User::varSSISOpsNF_" + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString()));
        }

        [Serializable]
        public class AlertInfo
        {
            /// <summary>
            /// Retained for serialization purposes.
            /// </summary>
            public AlertInfo()
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
                : this(alertDescription, alertCode, sourceName, sourceId, alertType, DateTime.Now)
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType, DateTime timeStamp)
            {
                AlertCode = alertCode;
                AlertDescription = alertDescription;
                AlertType = alertType;
                SourceName = sourceName;
                SourceId = sourceId;
                AlertTimeStamp = timeStamp;
            }

            public int AlertCode { get; set; }
            public string AlertDescription { get; set; }
            public DateTime AlertTimeStamp { get; set; }
            public AlertType AlertType { get; set; }
            public string SourceId { get; set; }
            public string SourceName { get; set; }
        }

        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_1a3e6923a7a6438780b7d31fe2489f3f</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_1a3e6923a7a6438780b7d31fe2489f3f</msb:DisplayName>
		<msb:ProjectId>{961B815B-C1B8-4639-9B6C-D30F64872157}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_1a3e6923a7a6438780b7d31fe2489f3f.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_1a3e6923a7a6438780b7d31fe2489f3f.Properties.Settings.get_Default():st_1a3e6923a7a6438780b7d31fe2489f3f.Properties.Sett" +
    "ings")]

namespace st_1a3e6923a7a6438780b7d31fe2489f3f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_1a3e6923a7a6438780b7d31fe2489f3f.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5826497a-912f-4453-be9e-ed1ad2d51639}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_1a3e6923a7a6438780b7d31fe2489f3f</RootNamespace>
    <AssemblyName>st_1a3e6923a7a6438780b7d31fe2489f3f</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_1a3e6923a7a6438780b7d31fe2489f3f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_1a3e6923a7a6438780b7d31fe2489f3f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_1a3e6923a7a6438780b7d31fe2489f3f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_1a3e6923a7a6438780b7d31fe2489f3f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_1a3e6923a7a6438780b7d31fe2489f3f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_1a3e6923a7a6438780b7d31fe2489f3f.dll">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
MRExFnI1BwBwohExFwJycwAAcCgfAAAGbxgAAAqiETEYcukHAHCiETEZEhAoLwAACqIRMRpyIwgA
cKIRMSguAAAKEw0rcxERFjFNG40jAAABEzIRMhZyjwcAcKIRMhcCcnMAAHAoHwAABm8YAAAKohEy
GHLpBwBwohEyGRIRKC8AAAqiETIacj0IAHCiETIoLgAAChMNKyFyUwgAcAJycwAAcCgfAAAGbxgA
AApyeQgAcCgqAAAKEw0UEycRFC0HERU5mAAAAAJyqQgAcCgfAAAGbxgAAAoCcu0IAHARCCgbAAAG
pSQAAAFzMAAAChMnAnIBCQBwEQgoGwAABm8YAAAKKB0AAAotMhEnAnIBCQBwEQgoGwAABm8YAAAK
AnITCQBwEQgoGwAABm8YAAAKczEAAApvMgAACisIEScXbzMAAAoCciUJAHARCCgbAAAGpSUAAAEs
CBEnF280AAAKBiwXAnLtAQBwfhsAAAooHgAABhELbzUAAAoRICxSEScsThEgEQ1vNgAAChEnESBv
NwAACt46EygCF30IAAAEAhEoKAsAAAYTKQIoFgAACm84AAAKEShvOQAACnI9CQBwESlylQkAcBZv
OgAACibeABElLHURJyxxESMgkAEAADEXESURDW82AAAKERwtFhElGG8kAAAKKwwRJX4bAAAKbzYA
AAoRJxElbzcAAAreOhMqAhd9CAAABAIRKigLAAAGEysCKBYAAApvOAAAChEqbzkAAApyPQkAcBEr
cpUJAHAWbzoAAAom3gARFixKEQ8WMRYCEQxy5wkAcBdy+wkAcCgMAAAGJisvERAWMRYCEQxy5wkA
cBhy+wkAcCgMAAAGJisUAhEMcucJAHAacvsJAHAoDAAABiYRFzmBAQAAFBMsFBMtB3ITCgBwfhsA
AApvIgAACnIXCgBwfhsAAApvIgAACnIbCgBwfhsAAApvIgAACnIfCgBwfhsAAApvIgAACnIjCgBw
fhsAAApvIgAACnInCgBwfhsAAApvIgAACnIvBQBwfhsAAApvIgAACnIrCgBwfhsAAApvIgAACgsR
DxYxTRuNIwAAARMzETMWci8KAHCiETMXKBkAAAoTNBI0cj8KAHAoOwAACqIRMxhyYwoAcKIRMxkH
ohEzGnJzCgBwohEzKC4AAAoTLTiXAAAAERAWMUobjSMAAAETNRE1FnIvCgBwohE1FygZAAAKEzYS
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
CRkfRRMMEgwolwAACqIRCRofQxMNEg0olwAACqIRCRsfSxMOEg4olwAACqIRCSguAAAKKB8AAAZv
kgAACioAABswAgBnAAAAEQAAERQKFgsCKBYAAApvmAAACgNvmQAACgIoFgAACm+YAAAKEgBvmgAA
CgYDb5sAAAoEb5wAAAreDAYsCAZvnQAAChcL3N4TJgIoFgAACm+YAAAKb54AAAr+Gt4NBiwJBy0G
Bm+dAAAK3CoAASgAAAIAJwAPNgAMAAAAAAAABABARAATCAAAAQIABABVWQANAAAAABswAgBoAAAA
EgAAERQKFgsCKBYAAApvmAAACgNvnwAACgIoFgAACm+YAAAKEgBvmgAACgYDb5sAAApvoAAACgze
DAYsCAZvnQAAChcL3N4TJgIoFgAACm+YAAAKb54AAAr+Gt4NBiwJBy0GBm+dAAAK3AgqASgAAAIA
JwAPNgAMAAAAAAAABABARAATCAAAAQIABABVWQANAAAAAB4CKKEAAAoqHgIoDgAACipOAgMEBQ4E
DgUoGQAACigjAAAGKtICKA4AAAoCBCglAAAGAgMoJwAABgIOBSgrAAAGAgUoLwAABgIOBCgtAAAG
Ag4GKCkAAAYqHgJ7EQAABCoiAgN9EQAABCoeAnsSAAAEKiICA30SAAAEKh4CexMAAAQqIgIDfRMA
AAQqHgJ7FAAABCoiAgN9FAAABCoeAnsVAAAEKiICA30VAAAEKh4CexYAAAQqIgIDfRYAAAQqALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABkDgAAI34AANAO
AAAIFAAAI1N0cmluZ3MAAAAA2CIAAOQmAAAjVVMAvEkAABAAAAAjR1VJRAAAAMxJAADUBgAAI0Js
b2IAAAAAAAAAAgAAAVcdogkJAwAAAPolMwAWAAABAAAAUgAAAAgAAAAYAAAALwAAAGEAAACiAAAA
CgAAACIAAAASAAAAAwAAAAkAAAAQAAAAAwAAAAEAAAAFAAAAAQAAAAMAAAAAAAoAAQAAAAAABgDV
AM4ACgDxANwADgBRASgBBgBtAc4ABgCDAXIBBgC0AZ8BBgAYA/0CBgAvA84ACgBkA1EDBgCSA4YD
BgDyA84ABgBVBM4ABgC6BKcEBgC3CZ0JBgDiCdAJBgD5CdAJBgAWCtAJBgA1CtAJBgBOCtAJBgBn
CtAJBgCCCtAJBgCdCtAJBgC2CtAJBgDvCs8KBgAPC88KBgAtC1EDBgBKC84ABgBPC84ABgBzC9AJ
CgCfC4kLCgC4C4kLBgDNC88KDgDvCygBDgARDCgBBgBLDM4ABgBuDM4ABgB0DM4ACgCaDIoMCgCm
DIoMCgC7DIoMCgDkDIoMBgAlDc4ACgBZDYoMCgBvDWQNCgCBDWQNDgDjDSgBCgACDooMCgAQDooM
BgBCDjgOEgBaDk8OEgBuDk8OEgCZDk8OEgCuDk8OEgDyDtkOEgAAD08OBgAbD6cEBgBODzgOBgBb
DzgOBgByD84ACgCuD1EDBgAEEDgOBgAVEDgOBgAiEDgOBgBCEDgOBgBLEDgOBgCmEIYDBgC0EDgO
HwDQEAAABgDuEM4ABgBmEc4ABgBxEc4ABgCOEc4ACgCbEYkLCgCqEYkLCgDVEYkLBgAGEs4ABgCR
Ev0CBgDSEs4AFgArEwsTFgBgEwsTFgB3EwsTBgCtE84AAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUA
AQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEACQAhAAIhAACxAAAAEQAM
ACEAAiAQALsAAAAFABEAIQAAAAAATBIAAAUAFwAwABEAkwETABEAwAEXABEACgI5AFGALgJHAFGA
WQJHAFGAhwJHAFGApAJHAAEAzwJqAQYGDgUWAlaAFgUZAlaAHgUZAgYGDgUWAlaAJgUnAlaAMQUn
AlaAPgUnAlaAUQUnAgEAKAYWAgEAQwZHAAEAZQZ4AgEAhQYnAgEAoAZHAAEAugZHABMAnhKdBRMA
vhKdBVAgAAAAAIMY0AEbAAEAWCAAAAAAkwjWAR8AAQCRIAAAAACTCOoBJAABAJggAAAAAJMI9gEp
AAEAoCAAAAAAlggaAj0AAgCzIAAAAACGGNABGwACAKcgAAAAAJEY6Au1AgIAuyAAAAAAhgDKAhsA
AgDkIAAAAACBAOMCGwACAAQtAAAAAIEAHwNtAQIAVC4AAAAAgQA5A3cBAwCoLgAAAACGAHYDfQEE
ACwvAAAAAIYAmwOGAQgAfDAAAAAAhgCqA48BDABkMQAAAACGALkDlgEPALAxAAAAAIYAzQOdARIA
ODIAAAAAgQDlA6YBFwDUMgAAAACBAPsDrgEbAAQ4AAAAAIEAFgSuASwAsEIAAAAAgQAxBM0BPQDL
QgAAAACGAEAE0wE/ANxCAAAAAIYAXgTbAUEAEEQAAAAAgQB0BOEBQgAkRAAAAACBAH8E5wFEAIxE
AAAAAIEAkgSWAUUA+UQAAAAAgQDEBPEBSAAwRQAAAACBAM8E+QFLABxIAAAAAIYA2gQAAk0AKE8A
AAAAhgDtBAUCTQAgUAAAAACBAPMECwJOALxQAAAAAIEAAQURAlAAWFEAAAAAhhjQARsAUQBgUQAA
AACGGNABGwBRAGhRAAAAAIYY0AE6AlEAfFEAAAAAhhjQAUQCVgCxUQAAAACGCGgFUAJcALlRAAAA
AIYIdgVUAlwAwlEAAAAAhgiEBVkCXQDKUQAAAACGCJkFXQJdANNRAAAAAIYIrgViAl4A21EAAAAA
hgjBBWcCXgDkUQAAAACGCNQFbQJfAOxRAAAAAIYI4gVyAl8A9VEAAAAAhgjwBVkCYAD9UQAAAACG
CP0FXQJgAAZSAAAAAIYICgZZAmEADlIAAAAAhggZBl0CYQAAAAEAFAcAAAEAGgcAAAEALQcAAAEA
MAcAAAIAOQcAAAMAQQcAAAQASwcAAAEAUwcAAAIAYAcAAAMAaQcAAAQAcgcAAAEAewcAAAIAiQcA
AAMApAcAAAEAsgcAAAIAwAcAAAMAzAcAAAEAsgcAAAIAwAcAAAMAzAcAAAQA1gcAAAUA4gcAAAEA
8QcAAAIA/QcAAAMABwgAAAQADwgAAAEAGQgAAAIAIggAAAMALggAAAQAOAgAAAUAQQgAAAYATggA
AAcAXAgAAAgA8QcAAAkA/QcAAAoABwgAAAsADwgAAAwAaQgAAA0AdggAAA4AgAgAAA8AiAgAABAA
kwgAABEAqQgAAAEAGQgAAAIAIggAAAMALggAAAQAOAgAAAUAQQgAAAYATggAAAcAXAgAAAgA8QcA
AAkA/QcAAAoABwgAAAsADwgAAAwAaQgAAA0AdggAAA4AgAgAAA8AiAgAABAAkwgAABEAqQgAAAEA
BwgAAAIADwgAAAEAwAgAAAIAxwgAAAEAzAgAAAEAzwgAAAIA0wgAAAEA3AgAAAEA6ggAAAIA+AgA
AAMAAwkAAAEAEQkAAAIAHQkAAAMAIwkAAAEAMwkAAAIAIwkAAAEAIwkAAAEAPwkAAAIATAkAAAEA
PwkAAAEAWgkAAAIAawkAAAMAdQkAAAQAgAkAAAUAiQkAAAEAWgkAAAIAawkAAAMAdQkAAAQAgAkA
AAUAiQkAAAYAkwkAAAEAFAcAAAEAFAcAAAEAFAcAAAEAFAcAAAEAFAcAAAEAFAdxANABXQJ5ANAB
XQKBANABXQKJANABXQKRANABXQKZANABXQKhANABXQKpANABXQKxANABXQK5ANABXQLBANABVALJ
ANABGwDRANABGwAJANABGwDZAGELjgLZAHwLlQIpANABmgLxANABpgIBAdABGwARANABGwAJAdAB
GwAZACMMuQIRASsMVAIJADoMWQJZAEMMvwIZAVIMxAIZAV4MRwAMAGQMUAIZAXwM0QIxAdABGwA5
AdABXQIxAbIM1gIxAdEM3QIZAdgM4wJBAeAMXQIxAfEM6QIxAf4M3QIxAQUN3QIxAQ0N8AIxARwN
XQJRATEN9QIZAT0N+QIZAUQNUAIZAU8NAAMZAT0NBQMZAT0NCwMhAToMWQJZAdABEQNhAdABFwNZ
AZQNHQNZAaQN8AJZAb4N8AIMAMwNGwAxAdINXQJZAd4NJAMRAfcNKwN5AR8OMQNxAS4ONwNZADoM
QAOJAUcORQMMANABGwCRAdABGwCRAWYOXQKRAYIOpAOhAaEOXQKRAbkOqgOhAc0OsAOxAdABuQOh
AQwPwgO5AScPyAPBATUPzgOhAUEPWQLJAdABXQKxAWYP0gMMAOAM2QPZAX4PGwDBAYYP3wNBAI8P
WQIZAT0NRQNBAJsPCAThAdABGwDhAbcP0QLhAcQPEgThAdYPXQLhAeEPGAQZAewPHwSJAfMPLwTp
AQ4Q0QIZAewPNATxAdABOgTxAdABQgT5AS0QXQL5ATMQGwDpATkQUgQBAtABXQIJAloQYgJZAGsQ
vwJZAHUQWQRZAH0QXwQJAokQGwAZAZAQeQQZAU8NzQEZAZgQzQEZAZ8QgwQRAtABGwAZArkQLwQZ
AT0NkAQRAsUQlwQRAsUQngQMACcPpAQUADUPtgQxANsQJABZADoMuwQxAP4QJAAhAToMuwQUAIYP
3wMZAT0NwgQZARMRxAJZACERMQVhACoRUAJhADMRUAJhAD0RUAJhAEkRUAJhAFURUAIxAmsROAVh
AHgRPgUZAZMRQgVJAscRTwVRAugRVgVZAvERXQUMAOgRYgUZAfoRbQUZARkScgUZAR8SfQUZASoS
QgUZAS8SjAUZASoSWQJpADcSkgVBANABXQJpAEMSlwVpAOgRXQUcANABVAIcAOAMrgUcALIStgVp
ANABGwBpAOAMlwUZARkSvwUZAS8SWQJxAtoSxgVxAuIS0QJBAjoMWQIRAT0T9AV5AlMTXQJ5AmoT
+gWBAugRAgaJAoATCQaBAooTGwB5ApETGwB5ApcTXQKJAqMTzgMZANABGwCRAtABGwAOABAASgAO
ABQAgwAOABgAxAAOABwAEwEIACgAHQIIACwAIgIIADQAIgIIADgAKwIIADwAMAIIAEAANQIpAJMA
rAIuAFsAqwYuAEMAjgYuAGMAtAYuAAsAHQYuABMAZQYuABsAjgYuACMAjgYuACsAjgYuADMAZQYu
ADsAlAZDAGsAIgJJAJMArAJhAJsAIgKDAKsAIgIDAZsAIgIhApsAIgJBApsAIgJhApsAIgKBApsA
IgKhApsAIgLBApsAIgKABJsAIgKgBJsAIgLABJsAIgLgBJsAIgIABZsAIgIgBZsAIgJABZsAIgJg
BZsAIgKABZsAIgKgBZsAIgLABZsAIgLgBZsAIgKhAksD4wMNBCYESARnBH4EiQTIBOsESAVoBYIF
ywXgBQ4GFQYCAAEAAwADAAcABAAAAIMBLwAAAAICNAAAACYCQgAAANYGfAIAAOAGgAIAAPEGhAIA
ALEAiQIAAAAHgAIAAAkHgAICAAIAAwABAAQABQACAAMABQACAAUABwACACQACQABACUACQABACcA
CwACACYACwACACgADQABACkADQABACsADwACACoADwABAC0AEQACACwAEQACAC4AEwABAC8AEwDK
Aq4EpgUEgAAAAQAAAKsXOl0AAAAAAAB/AAAABAAAAAAAAAAAAAAAAQDFAAAAAAAEAAAAAAAAAAAA
AAABAM4AAAAAAAwAAAAAAAAAAAAAAAoACQEAAAAABAAAAAAAAAAAAAAAAQBPDgAAAAAMAAAAAAAA
AAAAAAAKAOwSAAAAAAAAAAABAAAAwxMAAAUABAAGAAQABwAEAAAAAAAAPE1vZHVsZT4Ac3RfMWEz
ZTY5MjNhN2E2NDM4NzgwYjdkMzFmZTI0ODlmM2YuZGxsAFJlc291cmNlcwBzdF8xYTNlNjkyM2E3
YTY0Mzg3ODBiN2QzMWZlMjQ4OWYzZi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4Ac3Rf
MWEzZTY5MjNhN2E2NDM4NzgwYjdkMzFmZTI0ODlmM2YAU2NyaXB0UmVzdWx0cwBBbGVydFR5cGUA
QWxlcnRJbmZvAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4A
U3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdl
dF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0
SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABOb3RpZmljYXRpb25GcmFtZXdvcmtBbGVydExp
c3RWYXJpYWJsZU5hbWUATm90aWZpY2F0aW9uRnJhbWV3b3JrQWxlcnRMaXN0QWxsVmFyaWFibGVO
YW1lAE5vdGlmaWNhdGlvbkZyYW1ld29ya0NvdW50ZXIATm90aWZpY2F0aW9uRnJhbWV3b3JrU3Vi
Q29tcG9uZW50TmFtZQBNYWluAF9pc0Vycm9yRW5jb3VudGVyZWQAUGVyZm9ybU5vdGlmaWNhdGlv
bkFjdGlvbgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEAUGFyc2VBbGVydEluZm9z
AEV4Y2VwdGlvbgBVbndpbmRFeGNlcHRpb25NZXNzYWdlcwBTeXN0ZW0uRGlhZ25vc3RpY3MARXZl
bnRMb2dFbnRyeVR5cGUAV3JpdGVUb0V2ZW50TG9nAFN5c3RlbS5UZXh0AEVuY29kaW5nAFNhdmVU
ZXh0VG9GaWxlAERlbGV0ZU9sZEZpbGVzAEdldFN1YlN0cmluZ0JldHdlZW4AUmVwbGFjZVN1YlN0
cmluZ0JldHdlZW4AR2V0UGtnU3RhdHVzAERhdGVUaW1lAEdldFRleHROb3RpZmljYXRpb25NZXNz
YWdlAEdldEhUTUxOb3RpZmljYXRpb25NZXNzYWdlAEdldFNob3J0U3RhdHVzAEZvcm1hdFRpbWVE
aWZmZXJlbmNlAFRpbWVTcGFuAEZvcm1hdFRpbWVTcGFuRnJvbVNlYwBHZXRQcm9wVmFsAEdldExh
c3RBbGVydFNvdXJjZQBHZXRGaWx0ZXJlZEVtYWlsTGlzdABTeXN0ZW0uQ29sbGVjdGlvbnMASGFz
aHRhYmxlAFNldFNldHRpbmcAR2V0U2V0dGluZwBHZXRSdW50aW1lU2V0dGluZ3MAU2V0TkYAV3Jp
dGVWYXJpYWJsZQBSZWFkVmFyaWFibGUAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUARXJyb3JBbGVy
dABXYXJuaW5nQWxlcnQAVGltZVRocmVzaG9sZEFsZXJ0AFJvd0NvdW50VGhyZXNob2xkQWxlcnQA
Z2V0X0FsZXJ0Q29kZQBzZXRfQWxlcnRDb2RlAGdldF9BbGVydERlc2NyaXB0aW9uAHNldF9BbGVy
dERlc2NyaXB0aW9uAGdldF9BbGVydFRpbWVTdGFtcABzZXRfQWxlcnRUaW1lU3RhbXAAZ2V0X0Fs
ZXJ0VHlwZQBzZXRfQWxlcnRUeXBlAGdldF9Tb3VyY2VJZABzZXRfU291cmNlSWQAZ2V0X1NvdXJj
ZU5hbWUAc2V0X1NvdXJjZU5hbWUAPEFsZXJ0Q29kZT5rX19CYWNraW5nRmllbGQAPEFsZXJ0RGVz
Y3JpcHRpb24+a19fQmFja2luZ0ZpZWxkADxBbGVydFRpbWVTdGFtcD5rX19CYWNraW5nRmllbGQA
PEFsZXJ0VHlwZT5rX19CYWNraW5nRmllbGQAPFNvdXJjZUlkPmtfX0JhY2tpbmdGaWVsZAA8U291
cmNlTmFtZT5rX19CYWNraW5nRmllbGQAQWxlcnRDb2RlAEFsZXJ0RGVzY3JpcHRpb24AQWxlcnRU
aW1lU3RhbXAAU291cmNlSWQAU291cmNlTmFtZQB2YWx1ZQBhbGVydEluZm9zQ29udGVudHMAZXgA
bG9nRW50cnkAYXBwTmFtZQBldmVudFR5cGUAbG9nTmFtZQBmaWxlQ29udGVudHMAZmlsZVBhdGgA
aXNBcHBlbmQAZW5jb2RpbmcAZGlyZWN0b3J5UGF0aABmaWxlRXh0ZW5zaW9uU2VhcmNoUGF0dGVy
bgBvbGRlclRoYW5EYXlzAHN0cmluZ1RvUGFyc2UAc3RhcnRTdHJpbmcAZW5kU3RyaW5nAHJlcGxh
Y2V3aXRoAHJlcGxhY2VtYXJrZXJzAGJQa2dSdW5uaW5nAHNTdGVwTmFtZQBpRXJyb3JzAGlXYXJu
aW5ncwBzUGtnTmFtZQBkdFN0YXJ0VGltZQBkdEVuZFRpbWUAc1J1blRpbWUAc01hY2hpbmVOYW1l
AHNFeGVjQWNjdE5hbWUAc0ludGVyYWN0aXZlAGlPdGhlckFsZXJ0cwBhbGVydExpc3QAYkZvclNN
UwBpU01TTGVuZ3RoAGJVc2VDdXN0RW1haWxUZW1wbGF0ZQBzQ3VzdEVtYWlsVGVtcGxhdGVQYXRo
AGRTdGFydABkRW5kAHRzAG9iagBwcm9wbmFtZQBhbGVydEluZm9MaXN0AHNPcmlnaW5hbExpc3QA
c1NlcGVyYXRvcgBzRmlsdGVyUHJlZml4AFNldHRpbmdOYW1lAFZhbHVlAHJ1bnRpbWVTZXR0aW5n
cwBzZXR0aW5nTmFtZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQBhbGVydERlc2NyaXB0aW9u
AGFsZXJ0Q29kZQBzb3VyY2VOYW1lAHNvdXJjZUlkAGFsZXJ0VHlwZQB0aW1lU3RhbXAAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxl
Y3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZl
cnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlw
dE9iamVjdE1vZGVsAGdldF9EdHMAc2V0X1Rhc2tSZXN1bHQAVG9TdHJpbmcAZ2V0X05vdwBTdHJp
bmcAb3BfRXF1YWxpdHkARW1wdHkAZ2V0X0NvdW50AEludDMyAEJvb2xlYW4ASXNOdWxsT3JFbXB0
eQBTeXN0ZW0uTmV0Lk1haWwATWFpbE1lc3NhZ2UATWFpbEFkZHJlc3MAc2V0X0Zyb20ATWFpbEFk
ZHJlc3NDb2xsZWN0aW9uAGdldF9UbwBSZXBsYWNlAEFkZABNYWlsUHJpb3JpdHkAc2V0X1ByaW9y
aXR5AGdldF9DQwBnZXRfQmNjAHNldF9Jc0JvZHlIdG1sAHNldF9Cb2R5AEVudmlyb25tZW50AGdl
dF9OZXdMaW5lAENvbmNhdABnZXRfTGVuZ3RoAFN1YnN0cmluZwBTbXRwQ2xpZW50AFN5c3RlbS5O
ZXQATmV0d29ya0NyZWRlbnRpYWwASUNyZWRlbnRpYWxzQnlIb3N0AHNldF9DcmVkZW50aWFscwBz
ZXRfVXNlRGVmYXVsdENyZWRlbnRpYWxzAHNldF9FbmFibGVTc2wAQ2xlYXIAc2V0X1N1YmplY3QA
U2VuZABFdmVudHNPYmplY3RXcmFwcGVyAGdldF9FdmVudHMAU210cEV4Y2VwdGlvbgBTbXRwU3Rh
dHVzQ29kZQBnZXRfU3RhdHVzQ29kZQBGaXJlRXJyb3IAU3lzdGVtLklPAFBhdGgAQ29tYmluZQBT
eXN0ZW0uWG1sAFhtbERvY3VtZW50AExvYWRYbWwAWG1sRG9jdW1lbnRGcmFnbWVudABDcmVhdGVE
b2N1bWVudEZyYWdtZW50AFhtbE5vZGUAc2V0X0lubmVyWG1sAFhtbEVsZW1lbnQAZ2V0X0RvY3Vt
ZW50RWxlbWVudABBcHBlbmRDaGlsZABTeXN0ZW0uWG1sLlNlcmlhbGl6YXRpb24AWG1sU2VyaWFs
aXplcgBYbWxOb2RlTGlzdABnZXRfQ2hpbGROb2RlcwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9y
AGdldF9DdXJyZW50AGdldF9PdXRlclhtbABTdHJpbmdSZWFkZXIAVGV4dFJlYWRlcgBEZXNlcmlh
bGl6ZQBJRGlzcG9zYWJsZQBEaXNwb3NlAE1vdmVOZXh0AGdldF9NZXNzYWdlAGdldF9Jbm5lckV4
Y2VwdGlvbgBFdmVudExvZwBTb3VyY2VFeGlzdHMAQ3JlYXRlRXZlbnRTb3VyY2UAc2V0X1NvdXJj
ZQBXcml0ZUVudHJ5AEZvcm1hdABHZXREaXJlY3RvcnlOYW1lAERpcmVjdG9yeQBFeGlzdHMAU3Ry
ZWFtV3JpdGVyAFRleHRXcml0ZXIAV3JpdGUAQ2xvc2UAR2V0RmlsZXMARmlsZUluZm8ARmlsZVN5
c3RlbUluZm8AZ2V0X0NyZWF0aW9uVGltZQBnZXRfVG9kYXkAQWRkRGF5cwBvcF9MZXNzVGhhbgBE
ZWxldGUASW5kZXhPZgBSZW1vdmUASW5zZXJ0AFN0cmluZ0J1aWxkZXIARmlsZQBSZWFkQWxsVGV4
dABBcHBlbmRMaW5lAEVudW1lcmF0b3IAZ2V0X0N1cnJlbnRDdWx0dXJlAElGb3JtYXRQcm92aWRl
cgBnZXRfSW52YXJpYW50Q3VsdHVyZQBvcF9JbmVxdWFsaXR5AFN1YnRyYWN0AGdldF9EYXlzAGdl
dF9Ib3VycwBnZXRfTWludXRlcwBnZXRfU2Vjb25kcwBnZXRfTWlsbGlzZWNvbmRzAE1hdGgAUm91
bmQARG91YmxlAGdldF9Ub3RhbE1pbGxpc2Vjb25kcwBDaGFyAFRyaW1FbmQAVHlwZURlc2NyaXB0
b3IAUHJvcGVydHlEZXNjcmlwdG9yQ29sbGVjdGlvbgBHZXRQcm9wZXJ0aWVzAFByb3BlcnR5RGVz
Y3JpcHRvcgBnZXRfSXRlbQBHZXRWYWx1ZQBUb0NoYXJBcnJheQBTdHJpbmdTcGxpdE9wdGlvbnMA
U3BsaXQAU3RhcnRzV2l0aABUcmltAFRvVXBwZXIAQ29udGFpbnNLZXkAc2V0X0l0ZW0APFByaXZh
dGVJbXBsZW1lbnRhdGlvbkRldGFpbHM+ezhCMDAyNEI0LTdCQzMtNEI2NS1CRERFLUE3NDZBREM0
QjU0RX0ARGljdGlvbmFyeWAyACQkbWV0aG9kMHg2MDAwMDFhLTEAVHJ5R2V0VmFsdWUAJCRtZXRo
b2QweDYwMDAwMWItMQBDb252ZXJ0AFRvSW50MzIAVG9Cb29sZWFuAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlRGlz
cGVuc2VyAGdldF9WYXJpYWJsZURpc3BlbnNlcgBMb2NrRm9yV3JpdGUAVmFyaWFibGVzAEdldFZh
cmlhYmxlcwBWYXJpYWJsZQBzZXRfVmFsdWUAVW5sb2NrAFJlc2V0AExvY2tGb3JSZWFkAGdldF9W
YWx1ZQBTZXJpYWxpemFibGVBdHRyaWJ1dGUAc3RfMWEzZTY5MjNhN2E2NDM4NzgwYjdkMzFmZTI0
ODlmM2YuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAHFzAHQAXwAxAGEAMwBlADYA
OQAyADMAYQA3AGEANgA0ADMAOAA3ADgAMABiADcAZAAzADEAZgBlADIANAA4ADkAZgAzAGYALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACdTAHkAcwB0AGUAbQA6ADoA
UABhAGMAawBhAGcAZQBOAGEAbQBlAAAjUwB5AHMAdABlAG0AOgA6AFMAdABhAHIAdABUAGkAbQBl
AAAhUwB5AHMAdABlAG0AOgA6AFUAcwBlAHIATgBhAG0AZQAAJ1MAeQBzAHQAZQBtADoAOgBNAGEA
YwBoAGkAbgBlAE4AYQBtAGUAAC9TAHkAcwB0AGUAbQA6ADoASQBuAHQAZQByAGEAYwB0AGkAdgBl
AE0AbwBkAGUAACFTAHkAcwB0AGUAbQA6ADoAUwBvAHUAcgBjAGUASQBEAAAjUwB5AHMAdABlAG0A
OgA6AFAAYQBjAGsAYQBnAGUASQBEAABBVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBO
AEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABsAAAbUABSAEkATwBSAEkAVABZAF8ATQBPAEQA
RQAAD0QARQBMAEEAWQBFAEQAADlVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBf
AEEAbABlAHIAdABMAGkAcwB0AABPVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYA
XwBOAG8AdABpAGYAaQBjAGEAdABpAG8AbgBfAEMAbwB1AG4AdABlAHIAACNNAEEAWABfAE4ATwBU
AEkARgBJAEMAQQBUAEkATwBOAFMAACVOAE8AVABJAEYAWQBfAFUAUwBJAE4ARwBfAEUATQBBAEkA
TAAAIU4ATwBUAEkARgBZAF8AVQBTAEkATgBHAF8AUwBNAFMAACtOAE8AVABJAEYAWQBfAFUAUwBJ
AE4ARwBfAEUAVgBFAE4AVABMAE8ARwAAKU4ATwBUAEkARgBZAF8AVQBTAEkATgBHAF8ATABPAEcA
RgBJAEwARQAAM1UAUwBFAF8AQwBVAFMAVABPAE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQAEwAQQBU
AEUAAD1DAFUAUwBUAE8ATQBfAEUATQBBAEkATABfAFQARQBNAFAATABBAFQARQBfAEYASQBMAEUA
UABBAFQASAAAH0wATwBHAF8ARgBPAEwARABFAFIAXwBQAEEAVABIAAA1RABFAEwARQBUAEUAXwBM
AE8ARwBfAE8ATABEAEUAUgBfAFQASABBAE4AXwBEAEEAWQBTAAAjTgBPAFQASQBGAFkAXwBPAE4A
QwBPAE0AUABMAEUAVABFAAAhTgBPAFQASQBGAFkAXwBPAE4AUwBVAEMAQwBFAFMAUwAAL1UAcwBl
AHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMATgBGAF8ARgByAG8AbQAARU4AbwB0AGkAZgBpAGMA
YQB0AGkAbwBuAEYAcgBhAG0AZQB3AG8AcgBrAEAAQgBJAHgAUAByAGUAcwBzAC4AYwBvAG0AACtV
AHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAFQAbwAAAzsAAAd7AEQAfQAAAywA
ABlDAEMAXwBFAE0AQQBJAEwATABJAFMAVAAAG0IAQwBDAF8ARQBNAEEASQBMAEwASQBTAFQAAAN8
AAAZRQBNAEEASQBMAF8ARgBPAFIATQBBAFQAAAlIAFQATQBMAAAZTgBGAF8ATABPAEcAXwAqAC4A
dAB4AHQAACFOAE8AVABJAEYAWQBfAE8ATgBXAEEAUgBOAEkATgBHAAAdTgBPAFQASQBGAFkAXwBP
AE4ARQBSAFIATwBSAAAbUwBNAFMAXwBNAEEAWABMAEUATgBHAFQASAAAG1MATQBTAF8ARQBNAEEA
SQBMAEwASQBTAFQAABs8AFMAUwBJAFMAIABFAHIAcgBvAHIAcwA+AAAZPABTAFMASQBTACAARQBy
AHIAbwByAD4AAB88AFMAUwBJAFMAIABXAGEAcgBuAGkAbgBnAHMAPgAAHTwAUwBTAEkAUwAgAFcA
YQByAG4AaQBuAGcAPgAAHzwAUwBTAEkAUwAgAE0AZQBzAHMAYQBnAGUAcwA+AAAdPABTAFMASQBT
ACAATQBlAHMAcwBhAGcAZQA+AAAdPABTAFMASQBTACAAUwB1AGMAYwBlAHMAcwA+AAAhRQBSAFIA
TwBSACAAOgAgAFAAYQBjAGsAYQBnAGUAIAAALyAAaABhAHMAIABlAHIAcgBvAHIAKABzACkAIABh
AHQAIAB0AGEAcwBrACAAWwAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQByAGMAZQBOAGEAbQBlAAAD
XQAAJVcAQQBSAE4ASQBOAEcAIAA6ACAAUABhAGMAawBhAGcAZQAgAAAzIABoAGEAcwAgAHcAYQBy
AG4AaQBuAGcAKABzACkAIABhAHQAIAB0AGEAcwBrACAAWwAAIUEATABFAFIAVAAgADoAIABQAGEA
YwBrAGEAZwBlACAAADcgAGcAZQBuAGUAcgBhAHQAZQBkACAAcgB1AG4AdABpAG0AZQAgAGEAbABl
AHIAdAAoAHMAKQAAIyAAYwBvAG0AcABsAGUAdABlAGQAIAB3AGkAdABoACAAWwAAFV0AIABlAHIA
cgBvAHIAKABzACkAABldACAAdwBhAHIAbgBpAG4AZwAoAHMAKQAAFV0AIABhAGwAZQByAHQAKABz
ACkAACVTAFUAQwBDAEUAUwBTACAAOgAgAFAAYQBjAGsAYQBnAGUAIAAALyAAYwBvAG0AcABsAGUA
dABlAGQAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAAQ1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJ
AFMATwBwAHMATgBGAF8AUwBNAFQAUABTAGUAcgB2AGUAcgBOAGEAbQBlAAATUwBNAFQAUABfAFAA
TwBSAFQAABFTAE0AVABQAF8AVQBJAEQAABFTAE0AVABQAF8AUABXAEQAABdTAE0AVABQAF8AVQBT
AEUAUwBTAEwAAFdCAEkAIAB4AFAAcgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAA
RgByAGEAbQBlAHcAbwByAGsAIABTAGUAbgBkACAAQQBsAGUAcgB0AABRaAB0AHQAcAA6AC8ALwBo
AGUAbABwAC4AcAByAGEAZwBtAGEAdABpAGMAdwBvAHIAawBzAC4AYwBvAG0ALwBCAEkAeABQAHIA
ZQBzAHMALwAAE0IASQAgAHgAUAByAGUAcwBzAAAXQQBwAHAAbABpAGMAYQB0AGkAbwBuAAADPAAA
Az4AAAM6AAADLwAAA1wAAAMqAAADPwAAD04ARgBfAEwATwBHAF8AACN5AHkAeQB5AC0ATQBNAC0A
ZABkACAAaABoAG0AbQBzAHMAAQ9fAEUAUgBSAE8AUgBfAAAJLgB0AHgAdAAAE18AVwBBAFIATgBJ
AE4ARwBfAAANXwBJAE4ARgBPAF8AAG08AD8AeABtAGwAIAB2AGUAcgBzAGkAbwBuAD0AIgAxAC4A
MAAiACAAZQBuAGMAbwBkAGkAbgBnAD0AIgBVAFQARgAtADEANgAiACAAPwA+ADwAQQBsAGUAcgB0
AEkAbgBmAG8AcwAgAC8APgABgPVUAGgAZQByAGUAIAB3AGEAcwAgAGEAbgAgAGUAcgByAG8AcgAg
AHcAaABpAGwAZQAgAGEAdAB0AGUAbQBwAHQAaQBuAGcAIAB0AG8AIABwAGEAcgBzAGUAIAB0AGgA
ZQAgAGEAYwBjAHUAbQB1AGwAYQB0AGUAZAAgAGEAbABlAHIAdABzACAAZgBvAHIAIABCAEkAIAB4
AFAAcgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAARgByAGEAbQBlAHcAbwByAGsA
LgAgACAARQByAHIAbwByACAAbQBlAHMAcwBhAGcAZQA6ACAAAE9oAHQAdABwADoALwAvAGgAZQBs
AHAALgBwAHIAYQBnAG0AYQB0AGkAYwB3AG8AcgBrAHMALgBjAG8AbQAvAEIASQB4AFAAcgBlAHMA
cwAABSAAIAAAgIVBAG4AIABlAHIAcgBvAHIAIABvAGMAYwB1AHIAcgBlAGQAIAB3AGgAaQBsAGUA
IABjAHIAZQBhAHQAaQBuAGcAIAB0AGgAZQAgAFcAaQBuAGQAbwB3AHMAIABFAHYAZQBuAHQAIABM
AG8AZwAgACIAewAwAH0AIgA6ACAAewAxAH0ALgAAb1QAaABlACAAbABvAGcAIABmAGkAbABlACAA
cABhAHQAaAAgAGkAcwAgAGkAbgB2AGEAbABpAGQALgAgACAAVQBuAGEAYgBsAGUAIAB0AG8AIABz
AGEAdgBlACAAbABvAGcAIABmAGkAbABlAC4AAICDVABoAGUAIABsAG8AZwAgAGYAaQBsAGUAIABk
AGkAcgBlAGMAdABvAHIAeQAgAHAAYQB0AGgAIABpAHMAIABpAG4AdgBhAGwAaQBkAC4AIAAgAFUA
bgBhAGIAbABlACAAdABvACAAcwBhAHYAZQAgAGwAbwBnACAAZgBpAGwAZQAuAACA61QAaABlACAA
bABvAGcAIABmAGkAbABlACAAZABpAHIAZQBjAHQAbwByAHkAIAAiAHsAMAB9ACIAIABkAG8AZQBz
ACAAbgBvAHQAIABlAHgAaQBzAHQALgAgACAAVQBuAGEAYgBsAGUAIAB0AG8AIABzAGEAdgBlACAA
bABvAGcAIABmAGkAbABlACAAYgBlAGMAYQB1AHMAZQAgAHQAaABlACAAcwBwAGUAYwBpAGYAaQBl
AGQAIABkAGkAcgBlAGMAdABvAHIAeQAgAGQAbwBlAHMAIABuAG8AdAAgAGUAeABpAHMAdAAuAABx
QQBuACAAZQByAHIAbwByACAAbwBjAGMAdQByAHIAZQBkACAAdwBoAGkAbABlACAAYwByAGUAYQB0
AGkAbgBnACAAdABoAGUAIABsAG8AZwAgAGYAaQBsAGUAIAAiAHsAMAB9ACIAOgAgAHsAMQB9AACA
01QAaABlACAAZABpAHIAZQBjAHQAbwByAHkAIAAiAHsAMAB9ACIAIABkAG8AZQBzACAAbgBvAHQA
IABlAHgAaQBzAHQALgAgACAAVQBuAGEAYgBsAGUAIAB0AG8AIABkAGUAbABlAHQAZQAgAG8AbABk
ACAAbABvAGcAIABmAGkAbABlAHMAIABiAGUAYwBhAHUAcwBlACAAdABoAGUAIABkAGkAcgBlAGMA
dABvAHIAeQAgAGQAbwBlAHMAIABuAG8AdAAgAGUAeABpAHMAdAAuAACAmUEAbgAgAGUAcgByAG8A
cgAgAG8AYwBjAHUAcgByAGUAZAAgAHcAaABpAGwAZQAgAGQAZQBsAGUAdABpAG4AZwAgAG8AbABk
ACAAbABvAGcAIABmAGkAbABlAHMAIABmAHIAbwBtACAAdABoAGUAIAAiAHsAMAB9ACIAIABkAGkA
cgBlAGMAdABvAHIAeQA6ACAAewAxAH0AABMgAEAAIABTAFQARQBQACAAWwAAJ0MATwBNAFAATABF
AFQARQBEACAAVwAvACAARQBSAFIATwBSAFMAAAlIAEEAUwAgAAAPIABFAFIAUgBPAFIAUwAAE0MA
TwBNAFAATABFAFQARQBEAAAZIABXAC8AIABXAEEAUgBOAEkATgBHAFMAABMgAFcAQQBSAE4ASQBO
AEcAUwAANTwAIQAtAC0AewB7AEEAbABlAHIAdABCAGwAbwBjAGsAUwB0AGEAcgB0AH0AfQAtAC0A
PgABMTwAIQAtAC0AewB7AEEAbABlAHIAdABCAGwAbwBjAGsARQBuAGQAfQB9AC0ALQA+AAEpKgAq
ACoAKgAqACoAKgAqACoAKgAqACoAIABUAG8AdABhAGwAIABbAAAtXQAgAEEAbABlAHIAdABzACAA
KgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAACTwAPAAgAFsAABldACAAQQBsAGUAcgB0AHMAIAA+
AD4AIAAAC0UAUgBSAE8AUgAAD1cAQQBSAE4ASQBOAEcAAClUAEkATQBFACAAVABIAFIARQBTAEgA
TwBMAEQAIABBAEwARQBSAFQAAAtBAEwARQBSAFQAAAkgAD4APgAgAAAHIAA6ACAAACd7AHsAQQBs
AGUAcgB0AFMAbwB1AHIAYwBlAE4AYQBtAGUAfQB9AAAbewB7AEEAbABlAHIAdABUAGkAbQBlAH0A
fQAAG3sAewBBAGwAZQByAHQAVAB5AHAAZQB9AH0AACF7AHsAQQBsAGUAcgB0AE0AZQBzAHMAYQBn
AGUAfQB9AAAbewB7AEEAbABlAHIAdABDAG8AZABlAH0AfQAAA1sAAB1NAE0ALwBkAGQAIABIAEgA
OgBtAG0AOgBzAHMAAAVdACAAAAsgAD0AIAA+ACAAAAldACAAOgAgAAAfewB7AFAAYQBjAGsAYQBn
AGUATgBhAG0AZQB9AH0AAB17AHsAUwB0AGEAdAB1AHMATABvAG4AZwB9AH0AAB97AHsAUwB0AGEA
dAB1AHMAUwBoAG8AcgB0AH0AfQAAJ3sAewBUAG8AdABhAGwAQQBsAGUAcgB0AEMAbwB1AG4AdAB9
AH0AAB17AHsARQByAHIAbwByAEMAbwB1AG4AdAB9AH0AACF7AHsAVwBhAHIAbgBpAG4AZwBDAG8A
dQBuAHQAfQB9AAAXewB7AFIAdQBuAFQAaQBtAGUAfQB9AAAfewB7AE0AYQBjAGgAaQBuAGUATgBh
AG0AZQB9AH0AACl7AHsARQB4AGUAYwB1AHQAaQBvAG4AQQBjAGMAbwB1AG4AdAB9AH0AACV7AHsA
VwBhAHMASQBuAHQAZQByAGEAYwB0AGkAdgBlAH0AfQAAKXsAewBQAGEAYwBrAGEAZwBlAFMAdABh
AHIAdABUAGkAbQBlAH0AfQAAKXsAewBGAHIAYQBtAGUAdwBvAHIAawBWAGUAcgBzAGkAbwBuAH0A
fQAAEzUALgA3AC4AMAAuADkAMgA5AAAlewB7AFAAYQBjAGsAYQBnAGUARQBuAGQAVABpAG0AZQB9
AH0AABNQAGEAYwBrAGEAZwBlADoAIAAAEVMAdABhAHQAdQBzADoAIAAAGVMAdABhAHIAdAAgAFQA
aQBtAGUAOgAgAAAVRQBuAGQAIABUAGkAbQBlADoAIAAAFVIAdQBuACAAVABpAG0AZQA6ACAAADNF
AG4AZAAgAFQAaQBtAGUAOgAgADwAUwB0AGkAbABsACAAUgB1AG4AbgBpAG4AZwA+AAAdVABvAHQA
YQBsACAARQByAHIAbwByAHMAOgAgAAAhVABvAHQAYQBsACAAVwBhAHIAbgBpAG4AZwBzADoAIAAA
HU0AYQBjAGgAaQBuAGUAIABOAGEAbQBlADoAIAAAJVcAYQBzACAASQBuAHQAZQByAGEAYwB0AGkA
dgBlAD8AOgAgAAAnRQB4AGUAYwB1AHQAaQBvAG4AIABBAGMAYwBvAHUAbgB0ADoAIAAANTwAIQAt
AC0AewB7AEUAcgByAG8AcgBCAGwAbwBjAGsAUwB0AGEAcgB0AH0AfQAtAC0APgABMTwAIQAtAC0A
ewB7AEUAcgByAG8AcgBCAGwAbwBjAGsARQBuAGQAfQB9AC0ALQA+AAE5PAAhAC0ALQB7AHsAVwBh
AHIAbgBpAG4AZwBCAGwAbwBjAGsAUwB0AGEAcgB0AH0AfQAtAC0APgABNTwAIQAtAC0AewB7AFcA
YQByAG4AaQBuAGcAQgBsAG8AYwBrAEUAbgBkAH0AfQAtAC0APgABNzwAIQAtAC0AewB7AEEAbABl
AHIAdABTAG8AdQByAGMAZQBTAHQAYQByAHQAfQB9AC0ALQA+AAEzPAAhAC0ALQB7AHsAQQBsAGUA
cgB0AFMAbwB1AHIAYwBlAEUAbgBkAH0AfQAtAC0APgABMTwAIQAtAC0AewB7AEEAbABlAHIAdABS
AG8AdwBTAHQAYQByAHQAfQB9AC0ALQA+AAEtPAAhAC0ALQB7AHsAQQBsAGUAcgB0AFIAbwB3AEUA
bgBkAH0AfQAtAC0APgABDUYARgBEADUARAA1AAA/PAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9
ACIAMQAwADAAJQAiACAAYgBnAGMAbwBsAG8AcgA9ACIAIwAAJSIAPgA8AGIAPgBTAG8AdQByAGMA
ZQAgADoAPAAvAGIAPgAgAAAVPAAvAHQAZAA+ADwALwB0AHIAPgAAC0UAcgByAG8AcgAAMTwAdABy
AD4APAB0AGQAIAB3AGkAZAB0AGgAPQAiADEAMAAwACUAIgA+ADwAYgA+AAARIAA6ACAAPAAvAGIA
PgBbAACAzzwAdABhAGIAbABlACAAYgBvAHIAZABlAHIAPQAiADEAIgAgAHcAaQBkAHQAaAA9ACIA
MQAwADAAJQAiACAAcwB0AHkAbABlAD0AIgBiAG8AcgBkAGUAcgAtAGMAbwBsAGwAYQBwAHMAZQA6
ACAAYwBvAGwAbABhAHAAcwBlADsAZgBvAG4AdAAtAGYAYQBtAGkAbAB5ADoAIAB2AGUAcgBkAGEA
bgBhADsAIABmAG8AbgB0AC0AcwBpAHoAZQA6ACAAMQAwAHAAdAAiAD4AAYDJPAB0AHIAPgA8AHQA
ZAAgAHcAaQBkAHQAaAA9ACIAMQAwADAAJQAiACAAYgBnAGMAbwBsAG8AcgA9ACIAIwBGAEYAMAAw
ADAAMAAiAD4APABmAG8AbgB0ACAAYwBvAGwAbwByAD0AIgAjAEYARgBGAEYARgBGACIAIABTAGkA
egBlAD0AIgA0ACIAPgA8AGIAPgBFAFIAUgBPAFIAUwA8AC8AYgA+ADwALwBmAG8AbgB0AD4APAAv
AHQAZAA+ADwALwB0AHIAPgAAGTwALwB0AGEAYgBsAGUAPgA8AEIAUgA+AAANRgBGAEYARgA4ADAA
AA9XAGEAcgBuAGkAbgBnAACAzTwAdAByAD4APAB0AGQAIAB3AGkAZAB0AGgAPQAiADEAMAAwACUA
IgAgAGIAZwBjAG8AbABvAHIAPQAiACMARgBEADYAMAAxADMAIgA+ADwAZgBvAG4AdAAgAGMAbwBs
AG8AcgA9ACIAIwBGAEYARgBGAEYARgAiACAAUwBpAHoAZQA9ACIANAAiAD4APABiAD4AVwBBAFIA
TgBJAE4ARwBTADwALwBiAD4APAAvAGYAbwBuAHQAPgA8AC8AdABkAD4APAAvAHQAcgA+AACBizwA
YgByAD4APABiAHIAPgA8AGYAbwBuAHQAIABmAGEAYwBlAD0AIgBUAGEAaABvAG0AYQAiACAAcwBp
AHoAZQA9ACIAMQAiAD4AVABoAGkAcwAgAHIAZQBwAG8AcgB0ACAAdwBhAHMAIABnAGUAbgBlAHIA
YQB0AGUAZAAgAGIAeQAgADwAYQAgAGgAcgBlAGYAPQAiAGgAdAB0AHAAOgAvAC8AdwB3AHcALgBw
AHIAYQBnAG0AYQB0AGkAYwB3AG8AcgBrAHMALgBjAG8AbQAvAHAAYQBnAGUAcwAvAD8AcwByAGMA
PQBiAGkAeABwAHIAZQBzAHMAJgB0AGEAZwA9AE4ARgBFAG0AYQBpAGwAJgB1AHIAbAA9AC8AIgA+
AEIASQAgAHgAUAByAGUAcwBzACAATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AIABGAHIAYQBtAGUA
dwBvAHIAawA8AC8AYQA+ACAANQAuADcALgAwAC4AOQAyADkAPAAvAGYAbwBuAHQAPgAADTAAMABG
AEYAMAAwAAANRgBEADYAMAAxADMAAA1GAEYAMAAwADAAMAAAOzwAdAByAD4APAB0AGQAPgA8AHAA
PgA8AGIAPgA8AGYAbwBuAHQAIABzAGkAegBlAD0AIgA0ACIAPgAAHyAAPABmAG8AbgB0ACAAYwBv
AGwAbwByAD0AIgAjAAAFIgA+AAA5PAAvAGYAbwBuAHQAPgA8AC8AZgBvAG4AdAA+ADwALwBiAD4A
PAAvAHQAZAA+ADwALwB0AHIAPgAAgN08AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADAA
MAAlACIAIABiAGcAYwBvAGwAbwByAD0AIgAjADAAQgA2AEIARQAxACIAPgA8AGYAbwBuAHQAIABj
AG8AbABvAHIAPQAiACMARgBGAEYARgBGAEYAIgA+ADwAYgA+AFAAYQBjAGsAYQBnAGUAIABFAHgA
ZQBjAHUAdABpAG8AbgAgAFMAdQBtAG0AYQByAHkAPAAvAGIAPgA8AC8AZgBvAG4AdAA+ADwALwB0
AGQAPgA8AC8AdAByAD4AACs8AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADAAMAAlACIA
PgAAgKs8AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBnAGMAbwBsAG8A
cgA9ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4ARQB4AGUAYwB1AHQAaQBvAG4AIABTAHQAYQB0
AHUAcwA8AC8AYgA+ADwALwB0AGQAPgA8AHQAZAA+ACAAPABmAG8AbgB0ACAAYwBvAGwAbwByAD0A
IgAjAAAjPAAvAGYAbwBuAHQAPgA8AC8AdABkAD4APAAvAHQAcgA+AACAgTwAdAByAD4APAB0AGQA
IAB3AGkAZAB0AGgAPQAiADEAOAA5ACIAIABiAGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAy
ACIAPgA8AGIAPgBTAHQAYQByAHQAIABUAGkAbQBlADwALwBiAD4APAAvAHQAZAA+ADwAdABkAD4A
AH08AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBnAGMAbwBsAG8AcgA9
ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4ARQBuAGQAIABUAGkAbQBlADwALwBiAD4APAAvAHQA
ZAA+ADwAdABkAD4AAH08AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBn
AGMAbwBsAG8AcgA9ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4AUgB1AG4AIABUAGkAbQBlADwA
LwBiAD4APAAvAHQAZAA+ADwAdABkAD4AAICFPAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIA
MQA4ADkAIgAgAGIAZwBjAG8AbABvAHIAPQAiACMARgAyAEYAMgBGADIAIgA+ADwAYgA+AFQAbwB0
AGEAbAAgAEUAcgByAG8AcgBzADwALwBiAD4APAAvAHQAZAA+ADwAdABkAD4AAICJPAB0AHIAPgA8
AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQA4ADkAIgAgAGIAZwBjAG8AbABvAHIAPQAiACMARgAyAEYA
MgBGADIAIgA+ADwAYgA+AFQAbwB0AGEAbAAgAFcAYQByAG4AaQBuAGcAcwA8AC8AYgA+ADwALwB0
AGQAPgA8AHQAZAA+AACAhTwAdAByAD4APAB0AGQAIAB3AGkAZAB0AGgAPQAiADEAOAA5ACIAIABi
AGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAyACIAPgA8AGIAPgBNAGEAYwBoAGkAbgBlACAA
TgBhAG0AZQA8AC8AYgA+ADwALwB0AGQAPgA8AHQAZAA+AACAjzwAdAByAD4APAB0AGQAIAB3AGkA
ZAB0AGgAPQAiADEAOAA5ACIAIABiAGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAyACIAPgA8
AGIAPgBFAHgAZQBjAHUAdABpAG8AbgAgAEEAYwBjAG8AdQBuAHQAPAAvAGIAPgA8AC8AdABkAD4A
PAB0AGQAPgAAgI08AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBnAGMA
bwBsAG8AcgA9ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4AVwBhAHMAIABJAG4AdABlAHIAYQBj
AHQAaQB2AGUAPwA8AC8AYgA+ADwALwB0AGQAPgA8AHQAZAA+AAARPAAvAHQAYQBiAGwAZQA+AAAt
PAAvAHQAZAA+ADwALwB0AHIAPgA8AC8AdABhAGIAbABlAD4APABCAFIAPgAAD1MAVQBDAEMARQBT
AFMAAAsgAGQAYQB5ACwAAAkgAGgAcgAsAAALIABtAGkAbgAsAAAJIABzAGUAYwAAD1sAMAAgAHMA
ZQBjAF0AAF8gAHMAZQB0AHQAaQBuAGcAIABkAG8AZQBzAG4AJwB0ACAAZQB4AGkAcwB0ACAAaQBu
ACAAcgB1AG4AdABpAG0AZQAgAHMAZQB0AHQAaQBuAGcAIABsAGkAcwB0AC4AATNFAE4AQQBCAEwA
RQBfAFIATwBXAEMATwBVAE4AVABfAFQASABSAEUAUwBIAE8ATABEAAArRQBOAEEAQgBMAEUAXwBU
AEkATQBFAF8AVABIAFIARQBTAEgATwBMAEQAAB9GAEkATABUAEUAUgBFAEQAXwBBAEwARQBSAFQA
UwAAEU4ARgBfAEMASABFAEMASwAADVUAUgBHAEUATgBUAAAJVABFAFgAVAAAAQAXQwA6AFwAUwBT
AEkAUwBcAEwAbwBnAABHQwA6AFwAUwBTAEkAUwBcAEMAbwBuAGYAaQBnAFwATgBGAF8ARQBtAGEA
aQBsAFQAZQBtAHAAbABhAHQAZQAuAGgAdABtAABNVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBP
AHAAcwBOAEYAXwBPAHQAaABlAHIAQwBvAG4AZgBpAGcAUwBlAHQAdABpAG4AZwBzAAADPQAAXUIA
SQAgAHgAUAByAGUAcwBzACAATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AIABGAHIAYQBtAGUAdwBv
AHIAawAgAEUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIAACdVAHMAZQByADoAOgB2AGEAcgBTAFMA
SQBTAE8AcABzAE4ARgBfAAAAAAC0JACLw3tlS73ep0atxLVOAAi3elxWGTTgiQiJhF3NgIDMkQMG
EhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBg44VQBz
AGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABAVQBz
AGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEA
bABsAE5VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMA
YQB0AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgBWQgBJACAAeABQAHIAZQBzAHMAIABOAG8AdABpAGYA
aQBjAGEAdABpAG8AbgAgAEYAcgBhAG0AZQB3AG8AcgBrACAAUwBlAG4AZAAgAEEAbABlAHIAdAAC
BgIJIAEVEh0BEhwOBSABDhIhCCAEAg4OESUOCCAEAg4OAhIpBiADCA4OCAYgAw4ODg4IIAUODg4O
DgIHIAQOAg4ICB4gEQ4OES0RLQ4ODg4CDhAIEAgQCBUSHQESHAIIAg4FIAIOCAgHIAIOES0RLQUg
AQ4RMQUgAhwcDgkgAQ4VEh0BEhwHIAMBDhwSNQYgAhwOEjUEIAASNQUgAQESNQUgAgEOHAQgARwO
AgYIAwYRFAQAAAAABAEAAAADBhEYBAIAAAAEAwAAAAQEAAAACSAFAQ4IDg4RGAsgBgEOCA4OERgR
LQMgAAgEIAEBCAMgAA4EIAEBDgQgABEtBSABAREtBCAAERgFIAEBERgDBhEtAygACAMoAA4EKAAR
LQQoABEYBgABEm0RcQQgABJ1BiACAQ4SdQQHARIVBSABARF9CAEAAgAAAAAAAwAAAQUgABKAiQQA
ABEtBQACAg4OBhUSHQESHAQAAQIOBiABARKAnQUgABKAoQUgAg4ODgYgAQERgKUEIAEBAgMAAA4G
AAMODg4OBCABDggFAAEOHRwFAAEOHQ4FIAIBDggFIAIBDg4GIAEBEoC1BiABARKAmQUgABKAuQUg
ABGAwQggBQIIDg4OCAQgAQ4OBQACDg4OWAc5Ag4RLREtDg4ODhI1DgIVEh0BEhwODg4ICAgICAIC
AgICDg4IAhwODhKAmQ4OCA4SgJkOEoCtEoC9DhKAvQ4ODh0cHQ4dDh0OHQ4dDhEtHQ4RLR0OES0F
IAASgM0FIAASgNUIIAESgNESgNEIIAIBEm0dEm0FIAASgN0FIAASgOEDIAAcBiABHBKA6QUgAQET
AAMgAAIkBwsVEh0BEhwSgMkSgM0SgNkSgNUSgOUSHBIhHRJtEoDhEoDtBCAAEiEEBwIODgUAAgEO
DgYgAgEOESUGAAMODhwcCAcDEoDxEiECBAABDg4FAAIODhwHIAMBDgISKQUgAgEOAgkHBA4SgPkS
IQIGAAIdDg4OBSABES0NBwACAhEtES0RBwkIHQ4OEoEBEiEIHQ4IES0EIAEIDgQHAggIBSACDggO
BgcECAgODgYAAw4cHBwGIAESgQkOBSAAEoEJCSAAFRGBEQETAAcVEYERARIcBCAAEwAGIAEOEoEV
BQACDhwcIgcREoEJEoEJDg4ODg4SHA4VEYERARIcHQ4RLQgdDhEtCAhFBycSgQkSgQkODg4ODg4O
Dg4ODg4ODhIcDhIcDhURgREBEhwOHQ4RLQgdHBEtFRGBEQESHA4dDhEtCA4dDhEtCAgdDh0OBiAB
ETERLQUAAg0NCAMgAA0FIAEOHQMGBwMODh0DBgABEoEpHAYgARKBLQ4EIAEcHAUgARMACAQHAg4I
BCAAHQMKIAMdDh0DCBGBMQQgAQIOCQcFHQ4ODh0OCAUgAQ4SGQQgAQIcBSACARwcCAYVEoE1Ag4I
BxUSgTUCDggHIAIBEwATAQggAgITABATAQYgAR0OHQMEAAEIDhQHDRwOEjUdDg4dDg4OEiEdDggO
CBMHDx0OAwMDAwMDAwMdDgMDAwMDBSAAEoE9ByABARASgUEGIAESgUUcBCABARwGBwISgUECBwcD
EoFBAhxHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjc3RfMWEzZTY5MjNhN2E2NDM4NzgwYjdkMzFmZTI0ODlm
M2YAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQCYowAAAAAAAAAAAACuowAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
oKMAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYwAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABADpdqxcAAAEAOl2rFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABzAHQA
XwAxAGEAMwBlADYAOQAyADMAYQA3AGEANgA0ADMAOAA3ADgAMABiADcAZAAzADEAZgBlADIANAA4
ADkAZgAzAGYAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADUA
OQAuADIAMwA4ADYANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwAx
AGEAMwBlADYAOQAyADMAYQA3AGEANgA0ADMAOAA3ADgAMABiADcAZAAzADEAZgBlADIANAA4ADkA
ZgAzAGYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABzAHQAXwAxAGEAMwBlADYAOQAyADMAYQA3AGEANgA0ADMAOAA3ADgAMABi
ADcAZAAzADEAZgBlADIANAA4ADkAZgAzAGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAcwB0AF8AMQBhADMAZQA2ADkAMgAzAGEANwBhADYANAAzADgANwA4ADAAYgA3
AGQAMwAxAGYAZQAyADQAOAA5AGYAMwBmAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADAANQA5AC4AMgAzADgANgA2AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAANQA5AC4AMgAzADgANgA2AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADAAAAMAzAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{04399FE2-4EC2-4415-8D92-46ADD83B3882\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{04399FE2-4EC2-4415-8D92-46ADD83B3882}"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{04399FE2-4EC2-4415-8D92-46ADD83B3882}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{6B728A39-925F-469A-BBD7-890EA70B9C72\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{6B728A39-925F-469A-BBD7-890EA70B9C72}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{6B728A39-925F-469A-BBD7-890EA70B9C72}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{E4FA11DE-02E2-46DE-BD52-4540965DBF87\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{E4FA11DE-02E2-46DE-BD52-4540965DBF87}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{E4FA11DE-02E2-46DE-BD52-4540965DBF87}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{6AE16A21-92E2-4FA8-9FD5-822579445769}"
      DTS:EventID="0"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{823E9219-0A33-433B-9CD0-F576D91D62D0}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{E308472C-F9AE-4009-921F-15BB2624DD38}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ConnectionValues">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{06916ED4-5546-4BB5-9ADC-A00B852569AB}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DfLayout">
          <DTS:VariableValue
            DTS:DataType="8">&lt;layout version="3" compressed="true"&gt;&lt;DTS:Executable xmlns:DTS = "www.microsoft.com/SqlServer/Dts" DTS:ExecutableType = "SSIS.Package.2"&gt;&lt;/DTS:Executable&gt;&lt;/layout&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of connection strings (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable connectionstring logging."
          DTS:DTSID="{CA4EF952-80DC-443A-B9EA-73F8C2416D35}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableConnLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{C50B2688-E2A9-4A70-87A2-E031D00BEBA3}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableParameterInitialValueLogging"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of variable values (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{59B3BD5A-72E7-4E07-937B-4DF635567CF8}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableVarLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of ConnectionManagers you want to mask ConnectionStrings during logging process inside OnPreExecute Eventhandler. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case in-sensitive. This option is helpful when you want to hide certain connection strings or file paths from users who are using BIxPress Monitoring Console or Reports. When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual connectionstring of specified connection managers. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredConns&quot;. There are 2 places where you have to set this value (OnPreExecute, OnPostExecute)."
          DTS:DTSID="{8E519F61-85DB-4803-8C9E-FA34C642F952}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredConns">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{570A6401-A275-419D-B1DD-0A6A5A82FA08}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredParams"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="8">paramSSISOpsNF_From,paramSSISOpsNF_OnError_Disable,paramSSISOpsNF_OnPostExecute_Disable,paramSSISOpsNF_OnWarning_Disable,paramSSISOpsNF_OtherConfigSettings,paramSSISOpsNF_SMTPServerName,paramSSISOpsNF_To,pJobInstanceParentID</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{104CFF6D-0C1C-4D1C-AE85-2FF670B3F544}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to configure how many characters will be logged for each variable. Default variable length for logging is 4000 anything after that will be truncated. -1 = Log full variable value . There are 3 places where you have to set this value (OnPreExecute, OnPostExecute OnVariableValueChanged)."
          DTS:DTSID="{B6BEBAD5-DF8D-4A74-8250-EE6A896D6903}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_MaxVarCharsToLog">
          <DTS:VariableValue
            DTS:DataType="3">4000</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{6E5EB908-E7B2-4EF3-9BF7-FC4A38F8EA8E}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ParentSourceID">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{BC509EAA-CE16-4170-9C34-948CE8A7FC23}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_PkgLayout">
          <DTS:VariableValue
            DTS:DataType="8">&lt;layout version="3" compressed="true"&gt;&lt;DTS:Executable xmlns:DTS = "www.microsoft.com/SqlServer/Dts" DTS:ExecutableType = "SSIS.Package.2"&gt;&lt;DTS:PackageVariable&gt;		&lt;DTS:Property DTS:Name = "PackageVariableValue" DTS:DataType = "8"&gt;&lt;![CDATA[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]]&gt;&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "Namespace"&gt;dts-designer-1.0&lt;/DTS:Property&gt;&lt;/DTS:PackageVariable&gt;&lt;/DTS:Executable&gt;&lt;/layout&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{9DB77AC4-F640-42A8-83BD-2AF6F835CAEA}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_SourceType">
          <DTS:VariableValue
            DTS:DataType="8">unknown</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{45320E50-B919-495C-94CA-446B2C062983}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_TaskList">
          <DTS:VariableValue
            DTS:DataType="8">&lt;xml AuditControlFlowVersion="6" EnableRowCountLogging="True" EnableRowCountLoggingForSource="True" EnableRowCountLoggingForDestination="True" EnableDataFlowMonitoring="True" MaxIterationCount="0" TrackAllVariables="True" TrackOnlyTagVariables="False" EnableVariableChangeTracking="True" EnableVariableChangeTrackingAdvFeatures="True" EnableVariableChangeTrackingAdvFeaturesADORec="False" LogConnectionMgrs="True"&gt;&lt;tsk id="{1C4C69A7-F5CA-48BA-A4D5-8F38D44BA281}" typ="SequenceContainer" p="" name="Completion (Audit)" on="1" /&gt;&lt;tsk id="{C5E63F1E-E02F-455B-B751-9198888B6B3D}" typ="SQLTask" p="{1C4C69A7-F5CA-48BA-A4D5-8F38D44BA281}" name="Mark Job As Complete in Job" on="1" /&gt;&lt;tsk id="{F65A90E6-D156-4F37-A836-DFADB9E29069}" typ="SQLTask" p="{1C4C69A7-F5CA-48BA-A4D5-8F38D44BA281}" name="Mark Job as Complete in JobInstance" on="1" /&gt;&lt;tsk id="{23DA65EE-D9E5-444E-A149-91EB334720D8}" typ="SequenceContainer" p="" name="Execute  StagingHistorySalesForce Packages" on="1" /&gt;&lt;pc id="{C27A11CF-826E-4467-9D36-27FE0BEA5839}" op="2" and="True" val="0" task1="{D4828E34-7ABD-4C5C-BE45-E1AFED23F654}" task2="{7691F9CD-11CB-4A2C-8659-3773A6BA6A44}" p="{23DA65EE-D9E5-444E-A149-91EB334720D8}" refId="Package\Execute  StagingHistorySalesForce Packages.PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{ED48688A-308A-4898-8F13-6E15BB4D022C}" op="2" and="True" val="0" task1="{7691F9CD-11CB-4A2C-8659-3773A6BA6A44}" task2="{BCCA7E9A-94A1-433C-B091-955588D01A8E}" p="{23DA65EE-D9E5-444E-A149-91EB334720D8}" refId="Package\Execute  StagingHistorySalesForce Packages.PrecedenceConstraints[Constraint 1]"/&gt;&lt;tsk id="{D4828E34-7ABD-4C5C-BE45-E1AFED23F654}" typ="ExecutePackageTask" p="{23DA65EE-D9E5-444E-A149-91EB334720D8}" name="LoadTablePreStagingSalesForceContactStagingHistorySalesForceContactInitIncr" on="1" /&gt;&lt;tsk id="{BCCA7E9A-94A1-433C-B091-955588D01A8E}" typ="ExecutePackageTask" p="{23DA65EE-D9E5-444E-A149-91EB334720D8}" name="LoadTablePreStagingSalesForceLSAAssignmentCStagingHistorySalesForceLSAAssignmentCInitIncr" on="1" /&gt;&lt;tsk id="{7691F9CD-11CB-4A2C-8659-3773A6BA6A44}" typ="ExecutePackageTask" p="{23DA65EE-D9E5-444E-A149-91EB334720D8}" name="LoadTablePreStagingSalesForceMLISAccountCStagingHistorySalesForceMLISAccountCInitIncr" on="1" /&gt;&lt;tsk id="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" typ="SequenceContainer" p="" name="Initialization (Audit)" on="1" /&gt;&lt;pc id="{404156B4-38EE-43B7-B728-2DE726E9CFA0}" op="3" and="True" val="0" task1="{8ADA3897-7AF0-44F7-88DD-19ABECB004E2}" task2="{621AB191-5A0A-43CC-AE08-FD1D50548577}" p="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{6B15B4F2-657B-45AA-B349-6E7F91E5001E}" op="2" and="True" val="0" task1="{7764C30F-43D1-4477-B1AC-B13C773E0CB3}" task2="{8ADA3897-7AF0-44F7-88DD-19ABECB004E2}" p="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 1]"/&gt;&lt;pc id="{42B250E9-FD1D-4DD9-94E5-957DE6AE525B}" op="2" and="True" val="0" task1="{53681F93-7D0C-4942-8E6E-57BC00502387}" task2="{7764C30F-43D1-4477-B1AC-B13C773E0CB3}" p="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 2]"/&gt;&lt;pc id="{C3AA96D5-A464-46A2-85E4-0B64CB0A23C5}" op="2" and="True" val="0" task1="{621AB191-5A0A-43CC-AE08-FD1D50548577}" task2="{39B46BDD-B017-4486-B6E9-5C859DC582F8}" p="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 3]"/&gt;&lt;tsk id="{621AB191-5A0A-43CC-AE08-FD1D50548577}" typ="ScriptTask" p="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" name="Execute cmd shell and retrieve environment variable information" on="1" /&gt;&lt;tsk id="{39B46BDD-B017-4486-B6E9-5C859DC582F8}" typ="SQLTask" p="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" name="Log Environment" on="1" /&gt;&lt;tsk id="{53681F93-7D0C-4942-8E6E-57BC00502387}" typ="SQLTask" p="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" name="Populate ETLUser" on="1" /&gt;&lt;tsk id="{7764C30F-43D1-4477-B1AC-B13C773E0CB3}" typ="SQLTask" p="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" name="Populate Joblog" on="1" /&gt;&lt;tsk id="{8ADA3897-7AF0-44F7-88DD-19ABECB004E2}" typ="SQLTask" p="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" name="Populate new Job Instance" on="1" /&gt;&lt;pc id="{3EE65494-8CCB-4238-8278-D294EE931DBE}" op="2" and="True" val="0" task1="{EF00BAFE-DE5B-47BB-A0CF-E490906E3E39}" task2="{23DA65EE-D9E5-444E-A149-91EB334720D8}" p="" refId="Package.PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{47CB42FC-A223-4976-8CE6-9A479DB0EB5A}" op="2" and="True" val="0" task1="{23DA65EE-D9E5-444E-A149-91EB334720D8}" task2="{1C4C69A7-F5CA-48BA-A4D5-8F38D44BA281}" p="" refId="Package.PrecedenceConstraints[Constraint 1]"/&gt;&lt;/xml&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{07F51B5F-F666-400B-8B3A-4495D415F1CA}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_VariableValues">
          <DTS:VariableValue
            DTS:DataType="8">User::vCurJobID,User::vCurJobInstanceID,User::vCurUserID,User::vDeletedTotalRowCount,User::vEnvironmentTEXT,User::vInsertedTotalRowCount,User::vPackageStartDate,User::vRejectedTotalRowCount,User::vUpdatedTotalRowCount</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{EB87F221-E2A2-4595-8E1D-E6946289A943}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPreExecute_Start">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_046d086a76394c9891663924b477909a"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_046d086a76394c9891663924b477909a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_046d086a76394c9891663924b477909a")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

using System.Xml;


#endregion

namespace st_046d086a76394c9891663924b477909a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            string xmlTaskInfo = this.ReadVariable("varSSISOps_TaskList").ToString();

            if (string.IsNullOrEmpty(xmlTaskInfo))
            {
                this.WriteVariable("varSSISOps_SourceType", "UNKNOWN");
                this.WriteVariable("varSSISOps_ParentSourceID", string.Empty);
                return;
            }

            using (XmlTextReader reader = new XmlTextReader(new System.IO.MemoryStream(System.Text.Encoding.UTF8.GetBytes(xmlTaskInfo))))
            {
                bool isFound = false;

                while (reader.Read())
                {
                    switch (reader.NodeType)
                    {
                        case XmlNodeType.Element:
                            // The node is an Element
                            if (reader.Name.ToLowerInvariant() == "tsk" && this.ReadVariable("System::SourceID").ToString().ToLowerInvariant() == reader.GetAttribute("id").ToLowerInvariant())
                            {
                                this.WriteVariable("varSSISOps_SourceType", reader.GetAttribute("typ"));
                                this.WriteVariable("varSSISOps_ParentSourceID", reader.GetAttribute("p"));
                                isFound = true;
                                break;
                            }

                            break;
                    }
                }

                if (isFound == false)
                {
                    this.WriteVariable("varSSISOps_SourceType", "UNKNOWN");
                    this.WriteVariable("varSSISOps_ParentSourceID", string.Empty);
                }
            }

            if (string.Compare(ReadVariable("System::SourceID").ToString(), ReadVariable("System::PackageID").ToString(), StringComparison.InvariantCultureIgnoreCase) == 0)
            {
                System.Text.StringBuilder sb = new System.Text.StringBuilder(); 
                bool bLogVar = true;
                string sVarList = ReadVariable("User::varSSISOps_VariableValues").ToString();

                if (string.IsNullOrEmpty(sVarList) || Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableConnLogging")))
                    bLogVar = false; 

                if (bLogVar)
                {
                    string filterList = ReadVariable("User::varSSISOps_FilteredVars").ToString();
                    string[] arrFilter = filterList.Split(',');
                    string[] arrVariables = sVarList.Split(','); 
                    object oVal = null; 

                    foreach (string var in arrVariables)
                    {
                        try
                        {

                            bool bSkip = false;
                            string comp = var;
                            string f = string.Empty;

                            foreach (string floop in arrFilter)
                            {
                                comp = comp.ToLower().Trim();
                                f = floop.ToLower().Trim();

                                if (string.IsNullOrEmpty(f))
                                    break;

                                if (comp.IndexOf("::") < 0)
                                    comp = "user::" + comp;

                                if (f.IndexOf("::") < 0)
                                    f = "user::" + f;

                                if (System.Text.RegularExpressions.Regex.IsMatch(comp, f.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                                {
                                    bSkip = true;
                                    break;
                                }
                            }


                            if (bSkip)
                                oVal = "*****";
                            else
                            {
                                oVal = ReadVariable(var); 

                                if (oVal !=null)
                                {
                                    string s = oVal.ToString();
                                    int iMaxCharsToLog = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"));
                                    bool isLogFullValue = iMaxCharsToLog < 1;

                                    if (!isLogFullValue && s.Length > iMaxCharsToLog)
                                        oVal = s.Substring(0, iMaxCharsToLog) + " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 from config file if you want to log full value (Not recommended for performance reasons)>";
                                }
                            }

                            if (oVal != null)
                                sb.AppendLine(var.PadRight(30, '.') + "... " + oVal.ToString()); 
                            else
                                sb.AppendLine(var.PadRight(30, '.') + "... "); 
                        }
                        catch (Exception ex)
                        {
                            sb.AppendLine(var.PadRight(30, '.') + "... {Error reading variable value: " + ex.Message + "}"); 
                        }
                    }

                    WriteVariable("User::varSSISOps_VariableValues", sb.ToString()); 
                }

                bool isDisableLogParameterInitialValues;

                if (bool.TryParse(ReadVariable("User::varSSISOps_DisableParameterInitialValueLogging").ToString(), out isDisableLogParameterInitialValues) && !isDisableLogParameterInitialValues)
                {
                    object filteredParams = ReadVariable("User::varSSISOps_FilteredParams");

                    string parameterList = filteredParams == null ? string.Empty : filteredParams.ToString();

                    string[] parameterNames = parameterList.Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries);

                    System.Text.StringBuilder parameterNameValues = new System.Text.StringBuilder();

                    foreach (string parameterName in parameterNames)
                    {
                        string fullyQualifiedVariableName = parameterName.Contains("::") ? parameterName : "$Package::" + parameterName;

                        if (!Dts.VariableDispenser.Contains(fullyQualifiedVariableName))
                            continue;

                        object parameterValue = ReadVariable(fullyQualifiedVariableName);
                        string parameterDisplayValue = parameterValue == null ? string.Empty : parameterValue.ToString();

                        parameterNameValues.AppendFormat("{0}... {1}{2}", fullyQualifiedVariableName.TrimStart('$').PadRight(30, '.'), parameterDisplayValue, Environment.NewLine);
                    }

                    if (parameterNameValues.Length > 0)
                    {
                        object variableValuesValue = ReadVariable("User::varSSISOps_VariableValues");
                        string variableValuesDisplayValue = variableValuesValue == null ? string.Empty : variableValuesValue.ToString();

                        WriteVariable("User::varSSISOps_VariableValues", variableValuesDisplayValue + parameterNameValues);
                    }
                }

                System.Text.StringBuilder sb1 = new System.Text.StringBuilder(); 
                bool bLogConn = !Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableConnLogging"));

                if (bLogConn)
                {
                    string filterList = ReadVariable("User::varSSISOps_FilteredConns").ToString();
                    string[] arrFilter = filterList.Split(',');
                    string sDataSource = String.Empty;

                    foreach (ConnectionManager conn in Dts.Connections)
                    {
                        try
                        {
                            sDataSource = string.Empty;

                            bool bSkip = false;
                            string comp = conn.Name;
                            string f = string.Empty;

                            foreach (string floop in arrFilter)
                            {
                                comp = comp.ToLower().Trim();
                                f = floop.ToLower().Trim();

                                if (string.IsNullOrEmpty(f))
                                    break;

                                if (System.Text.RegularExpressions.Regex.IsMatch(comp, f.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                                {
                                    bSkip = true;
                                    break;
                                }
                            }


                            string sConnStr = conn.ConnectionString;

                            if (bSkip)
                            {
                                sConnStr = "*****";
                                sDataSource = "*****";
                            }
                            else
                            {
                                try
                                {
                                    if (conn.Properties.Contains("ServerName"))
                                        sDataSource = conn.Properties["ServerName"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("SqlServerName"))
                                        sDataSource = conn.Properties["SqlServerName"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("Host"))
                                        sDataSource = conn.Properties["Host"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("ServerHost"))
                                        sDataSource = conn.Properties["ServerHost"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("Server"))
                                        sDataSource = conn.Properties["Server"].GetValue(conn).ToString();
                                    else if (conn.CreationName == "FLATFILE" || (conn.CreationName == "FILE" && conn.ConnectionString.IndexOf(".", System.StringComparison.InvariantCultureIgnoreCase) > 0))
                                        sDataSource = System.IO.Path.GetFileName(conn.ConnectionString);
                                }
                                catch (Exception) { }
                            }

                            sb1.AppendLine(conn.Name.PadRight(30, '.') + "... " + conn.CreationName.PadRight(10, ' ') + "  \t" + sDataSource.PadRight(15, ' ') + "  \t" + sConnStr);
                        }
                        catch (Exception ex)
                        {
                            sb1.AppendLine(conn.Name.PadRight(30, '.') + "... {Error reading connection: " + ex.Message + "}");
                        }
                    }

                    WriteVariable("User::varSSISOps_ConnectionValues", sb1.ToString());
                }

            }

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_046d086a76394c9891663924b477909a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7b94c3c3-2c2b-41f3-8d38-85abfd12920d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_046d086a76394c9891663924b477909a</RootNamespace>
    <AssemblyName>st_046d086a76394c9891663924b477909a</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_046d086a76394c9891663924b477909a</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_046d086a76394c9891663924b477909a</msb:DisplayName>
		<msb:ProjectId>{291354B2-57AF-4350-B63D-93C4E23AF88F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_046d086a76394c9891663924b477909a.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_046d086a76394c9891663924b477909a.Properties.Settings.get_Default():st_046d086a76394c9891663924b477909a.Properties.Sett" +
    "ings")]

namespace st_046d086a76394c9891663924b477909a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_046d086a76394c9891663924b477909a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_046d086a76394c9891663924b477909a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_046d086a76394c9891663924b477909a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_046d086a76394c9891663924b477909a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_046d086a76394c9891663924b477909a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_046d086a76394c9891663924b477909a.dll">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
JJ0RNG88AAAKHx4fLm8xAAAKERsoPQAACm8+AAAKJhEzF1gTMxEzETKOaT9i////ERdvPwAAChYx
NQJyawEAcCgKAAAGExwRHCwJERxvFgAACisFfhgAAAoTHQJyawEAcBEdERcoQAAACigJAAAGcyUA
AAoTHgJyqwEAcCgKAAAGKCYAAAoW/gETHxEfOQsDAAACchwFAHAoCgAABm8WAAAKEyARIBeNJgAA
ARM1ETUWHyydETVvJwAAChMhfhgAAAoTIgIoOQAACm9BAAAKb0IAAAoTNjikAgAAETZvQwAAChMj
fhgAAAoTIhYTJBEjb0QAAAoTJX4YAAAKEyYRIRM3FhM4K1IRNxE4mhMnESVvKAAACm8pAAAKEyUR
J28oAAAKbykAAAoTJhEmKBcAAAotLhElESZyQwIAcHJHAgBwbywAAAoXKC0AAAosBRcTJCsOETgX
WBM4ETgRN45pMqYRI29FAAAKEygRJCwTck8CAHATKHJPAgBwEyI4WwEAABEjb0YAAApyWgUAcG9H
AAAKLCQRI29GAAAKcloFAHBvSAAAChEjb0kAAApvFgAAChMiOB8BAAARI29GAAAKcnAFAHBvRwAA
CiwkESNvRgAACnJwBQBwb0gAAAoRI29JAAAKbxYAAAoTIjjoAAAAESNvRgAACnKMBQBwb0cAAAos
JBEjb0YAAApyjAUAcG9IAAAKESNvSQAACm8WAAAKEyI4sQAAABEjb0YAAApylgUAcG9HAAAKLCER
I29GAAAKcpYFAHBvSAAAChEjb0kAAApvFgAAChMiK30RI29GAAAKcqwFAHBvRwAACiwhESNvRgAA
CnKsBQBwb0gAAAoRI29JAAAKbxYAAAoTIitJESNvSgAACnK6BQBwKCAAAAotKBEjb0oAAApyzAUA
cCggAAAKLCMRI29FAAAKctYFAHAZb0sAAAoWMQ4RI29FAAAKKEwAAAoTIt4DJt4AER4djRsAAAET
ORE5FhEjb0QAAAofHh8ubzEAAAqiETkXcuoDAHCiETkYESNvSgAACh8KHyBvMQAACqIRORly2gUA
cKIRORoRIh8PHyBvMQAACqIRORty2gUAcKIRORwRKKIROShNAAAKbzMAAAom3jITKREeESNvRAAA
Ch8eHy5vMQAACnLiBQBwESlvNAAACnI8BABwKDUAAApvMwAACibeABE2b04AAAo6UP3//wJyIgYA
cBEebxYAAAooCQAABgIoOQAAChZvTwAACioAAEFkAAACAAAAUAAAALIAAAACAQAACgAAAAAAAAAA
AAAA0QEAAFoBAAArAwAALAAAACkAAAEAAAAA2QUAAFgBAAAxBwAAAwAAACkAAAEAAAAAPAUAAGkC
AAClBwAAMgAAACkAAAEbMAIAZwAAAAMAABEUChYLAig5AAAKbzoAAAoDb1AAAAoCKDkAAApvOgAA
ChIAb1EAAAoGA29SAAAKBG9TAAAK3gwGLAgGb1QAAAoXC9zeEyYCKDkAAApvOgAACm9VAAAK/hre
DQYsCQctBgZvVAAACtwqAAEoAAACACcADzYADAAAAAAAAAQAQEQAEykAAAECAAQAVVkADQAAAAAb
MAIAaAAAAAQAABEUChYLAig5AAAKbzoAAAoDb1YAAAoCKDkAAApvOgAAChIAb1EAAAoGA29SAAAK
b1cAAAoM3gwGLAgGb1QAAAoXC9zeEyYCKDkAAApvOgAACm9VAAAK/hreDQYsCQctBgZvVAAACtwI
KgEoAAACACcADzYADAAAAAAAAAQAQEQAEykAAAECAAQAVVkADQAAAAAeAihYAAAKKrQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAIBgAAI34AAHQGAABECQAA
I1N0cmluZ3MAAAAAuA8AAGgGAAAjVVMAIBYAABAAAAAjR1VJRAAAADAWAADcAgAAI0Jsb2IAAAAA
AAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAANwAAAAUAAAAGAAAACwAAAAQAAABYAAAAAgAAAA8A
AAAEAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAO
AD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAI0CcwIGALgCpgIGAM8CpgIGAOwCpgIGAAsDpgIGACQD
pgIGAD0DpgIGAFgDpgIGAHMDpgIGAIwDpgIGAMUDpQMGAOUDpQMGABYEAwQGADMEugAGADgEugAG
AFwEpgIKAIgEcgQKAKEEcgQGALYEpQMOANgEFAEGAAMFugAGACoFHgUGAE8FRQUSAGcFXAUGAHUF
RQUSAHwFXAUSAIYFXAUGANcFugAGAOsFugAGAAQGHgUGABIGugAGACQGugAKAHIGUwYKAHgGUwYG
AL4GugAGANQGugAGAOUGugAOAAEHFAEWAFoHOgcGAIwHugAWALEHOgcWAM0HOgcWAPAHOgcWACMI
OgcWAEAIOgcGAG8IRQUWAIAIOgcWALMIOgcWAMoIOgcAAAAAAQAAAAAAAQABAAAAEAAyADwABQAB
AAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAwAEQB/ARMAEQCsARcA
EQD2ATkABgY6AlIAVoBCAlUAVoBKAlUAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAA
AJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAA
kRjRBJQAAgC8IAAAAACGABoCGwACADApAAAAAIEAHwJHAAIAzCkAAAAAgQAtAk0ABABoKgAAAACG
GLwBGwAFAAAAAQBSAgAAAQBYAgAAAgBlAgAAAQBYAjkAvAFjAEEAvAFjAEkAvAFjAFEAvAFjAFkA
vAFjAGEAvAFjAGkAvAFjAHEAvAFjAHkAvAFjAIEAvAFjAIkAvAFoAJEAvAEbAJkAvAEbAAkAvAEb
AKEASgRtAKEAZQR0ACkAvAF5ALkAvAGFAMkAvAEbABEAvAEbANEAvAEbAAkA+gSYANkACgWcANkA
GAWhAOEAMwWkAOEAPAWpAOkAvAGvAPEAvAG1AAEBkgW7AAEBnwWYANkAqAWYANkAuQXBAAEBxQXH
AAEB0gXMABEB4wUbANkA/AXQACEBvAEbACkBGgbZANkAKQbeANkALwaYANkANwaYANkAPAblANkA
RAbqANkASwbwADkBhQb2ACkBjQb/ANkAlQYEAdkAoAYIAdkAqgYOAdkARAYUASEBswYbAUkByAaY
ANkARAYiAVEB3AYqAdkAKQYxAdkA+AY7ARkAEwdAAWEBbAdGAWkB+AY7AdkAggdMAXEBmAdSASEB
pAdWASEBlQYEAdkARAZgAWEBvQdmAXkB4gdsAYEBAghyAYkBnwWYAIkBDgiYAIkBMQh4AZEB+AZ+
AZEBTAiDAZkBVQiKAYkBXgiYANkAPAaPAaEBdAiXAdkARAacAakBjgjMAGEBlwhoAGkBpghjAGkB
vQj+AbEBTAgGArkB0wgNArEB3QgbAGkB5AgbAGkB6ghjALkB9ggZAhkAvAEbAAgAFABZAAgAGABe
ACkAkwCLAC4AGwCWAi4AIwCWAi4AYwC8Ai4ACwAlAi4AEwBtAi4AMwBtAi4AKwCWAi4AOwCcAi4A
QwCWAi4AWwCzAkMAawBeAEkAkwCLAGEAmwBeAIMAqwBeAIAAogESAh0CAgABAAMAAwAAAG8BLwAA
AO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAK0XGEkAAAAAAAB/AAAA
BAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAwAAAAAAAAAAAAAAAoA9QAA
AAAABAAAAAAAAAAAAAAAAQBcBQAAAAAMAAAAAAAAAAAAAAAKABsHAAAAAAAAAAABAAAAAAkAAAUA
BAAAAAA8TW9kdWxlPgBzdF8wNDZkMDg2YTc2Mzk0Yzk4OTE2NjM5MjRiNDc3OTA5YS5kbGwAUmVz
b3VyY2VzAHN0XzA0NmQwODZhNzYzOTRjOTg5MTY2MzkyNGI0Nzc5MDlhLlByb3BlcnRpZXMAU2V0
dGluZ3MAU2NyaXB0TWFpbgBzdF8wNDZkMDg2YTc2Mzk0Yzk4OTE2NjM5MjRiNDc3OTA5YQBTY3Jp
cHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4A
U3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdl
dF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0
SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAFdyaXRlVmFyaWFibGUAUmVhZFZhcmlh
YmxlAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAHZhcmlhYmxlTmFtZQB2YXJpYWJsZVZh
bHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5
c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUA
QXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJs
eQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAVG9TdHJpbmcAU3RyaW5nAElzTnVsbE9yRW1wdHkARW1w
dHkAU3lzdGVtLlRleHQARW5jb2RpbmcAZ2V0X1VURjgAR2V0Qnl0ZXMAU3lzdGVtLklPAE1lbW9y
eVN0cmVhbQBTeXN0ZW0uWG1sAFhtbFRleHRSZWFkZXIAU3RyZWFtAFhtbFJlYWRlcgBYbWxOb2Rl
VHlwZQBnZXRfTm9kZVR5cGUAZ2V0X05hbWUAVG9Mb3dlckludmFyaWFudABvcF9FcXVhbGl0eQBH
ZXRBdHRyaWJ1dGUAUmVhZABJRGlzcG9zYWJsZQBEaXNwb3NlAFN0cmluZ0NvbXBhcmlzb24AQ29t
cGFyZQBTdHJpbmdCdWlsZGVyAENvbnZlcnQAVG9Cb29sZWFuAENoYXIAU3BsaXQAVG9Mb3dlcgBU
cmltAEluZGV4T2YAQ29uY2F0AFJlcGxhY2UAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25z
AFJlZ2V4AFJlZ2V4T3B0aW9ucwBJc01hdGNoAFRvSW50MzIAZ2V0X0xlbmd0aABTdWJzdHJpbmcA
UGFkUmlnaHQAQXBwZW5kTGluZQBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAQm9vbGVhbgBUcnlQYXJz
ZQBTdHJpbmdTcGxpdE9wdGlvbnMAQ29udGFpbnMAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBWYXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIAVHJpbVN0YXJ0AEVu
dmlyb25tZW50AGdldF9OZXdMaW5lAEFwcGVuZEZvcm1hdABDb25uZWN0aW9ucwBnZXRfQ29ubmVj
dGlvbnMAQ29ubmVjdGlvbkVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBDb25uZWN0aW9uTWFuYWdl
cgBnZXRfQ3VycmVudABnZXRfQ29ubmVjdGlvblN0cmluZwBEdHNQcm9wZXJ0aWVzAGdldF9Qcm9w
ZXJ0aWVzAER0c1Byb3BlcnR5AGdldF9JdGVtAEdldFZhbHVlAGdldF9DcmVhdGlvbk5hbWUAUGF0
aABHZXRGaWxlTmFtZQBEdHNFbnVtZXJhdG9yAE1vdmVOZXh0AHNldF9UYXNrUmVzdWx0AExvY2tG
b3JXcml0ZQBWYXJpYWJsZXMAR2V0VmFyaWFibGVzAFZhcmlhYmxlAHNldF9WYWx1ZQBVbmxvY2sA
UmVzZXQATG9ja0ZvclJlYWQAZ2V0X1ZhbHVlAHN0XzA0NmQwODZhNzYzOTRjOTg5MTY2MzkyNGI0
Nzc5MDlhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFzAHQAXwAwADQANgBkADAA
OAA2AGEANwA2ADMAOQA0AGMAOQA4ADkAMQA2ADYAMwA5ADIANABiADQANwA3ADkAMAA5AGEALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACd2AGEAcgBTAFMASQBTAE8A
cABzAF8AVABhAHMAawBMAGkAcwB0AAArdgBhAHIAUwBTAEkAUwBPAHAAcwBfAFMAbwB1AHIAYwBl
AFQAeQBwAGUAAA9VAE4ASwBOAE8AVwBOAAAzdgBhAHIAUwBTAEkAUwBPAHAAcwBfAFAAYQByAGUA
bgB0AFMAbwB1AHIAYwBlAEkARAAAB3QAcwBrAAAhUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBl
AEkARAAABWkAZAAAB3QAeQBwAAADcAAAI1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAEkA
RAAAP1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBWAGEAcgBpAGEAYgBsAGUAVgBh
AGwAdQBlAHMAAEdVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ARABpAHMAYQBiAGwA
ZQBDAG8AbgBuAEwAbwBnAGcAaQBuAGcAADtVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABz
AF8ARgBpAGwAdABlAHIAZQBkAFYAYQByAHMAAAU6ADoAAA11AHMAZQByADoAOgAAAyoAAAdcAHcA
KgAACyoAKgAqACoAKgAAQ1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBNAGEAeABW
AGEAcgBDAGgAYQByAHMAVABvAEwAbwBnAACBSSAALgAuAC4APABWAEEATABVAEUAIABUAFIAVQBO
AEMAQQBUAEUARAAgAC0AIABDAGgAYQBuAGcAZQAgAHYAYQBsAHUAZQAgAG8AZgAgAFsAdgBhAHIA
UwBTAEkAUwBPAHAAcwBfAE0AYQB4AFYAYQByAEMAaABhAHIAcwBUAG8ATABvAGcAXQAgAHQAbwAg
AC0AMQAgAGYAcgBvAG0AIABjAG8AbgBmAGkAZwAgAGYAaQBsAGUAIABpAGYAIAB5AG8AdQAgAHcA
YQBuAHQAIAB0AG8AIABsAG8AZwAgAGYAdQBsAGwAIAB2AGEAbAB1AGUAIAAoAE4AbwB0ACAAcgBl
AGMAbwBtAG0AZQBuAGQAZQBkACAAZgBvAHIAIABwAGUAcgBmAG8AcgBtAGEAbgBjAGUAIAByAGUA
YQBzAG8AbgBzACkAPgABCS4ALgAuACAAAEcuAC4ALgAgAHsARQByAHIAbwByACAAcgBlAGEAZABp
AG4AZwAgAHYAYQByAGkAYQBiAGwAZQAgAHYAYQBsAHUAZQA6ACAAAAN9AABpVQBzAGUAcgA6ADoA
dgBhAHIAUwBTAEkAUwBPAHAAcwBfAEQAaQBzAGEAYgBsAGUAUABhAHIAYQBtAGUAdABlAHIASQBu
AGkAdABpAGEAbABWAGEAbAB1AGUATABvAGcAZwBpAG4AZwAAP1UAcwBlAHIAOgA6AHYAYQByAFMA
UwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAUABhAHIAYQBtAHMAABUkAFAAYQBjAGsAYQBn
AGUAOgA6AAAbewAwAH0ALgAuAC4AIAB7ADEAfQB7ADIAfQAAPVUAcwBlAHIAOgA6AHYAYQByAFMA
UwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAQwBvAG4AbgBzAAAVUwBlAHIAdgBlAHIATgBh
AG0AZQAAG1MAcQBsAFMAZQByAHYAZQByAE4AYQBtAGUAAAlIAG8AcwB0AAAVUwBlAHIAdgBlAHIA
SABvAHMAdAAADVMAZQByAHYAZQByAAARRgBMAEEAVABGAEkATABFAAAJRgBJAEwARQAAAy4AAAcg
ACAACQAAPy4ALgAuACAAewBFAHIAcgBvAHIAIAByAGUAYQBkAGkAbgBnACAAYwBvAG4AbgBlAGMA
dABpAG8AbgA6ACAAAENVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8AQwBvAG4AbgBl
AGMAdABpAG8AbgBWAGEAbAB1AGUAcwAAAADE2PtGfxbfTLTrH/OTFy3IAAi3elxWGTTgiQiJhF3N
gIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwF
IAIBDhwEIAEcDgIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkE
BwESFQUgAQERYQgBAAIAAAAAAAMAAAEDIAAOBAABAg4CBg4EAAAScQUgAR0FDgUgAQEdBQUgAQES
fQUgABGAhQUAAgIODgQgAQ4OAyAAAggAAwgODhGAjQQAAQIcBiABHQ4dAwQgAQgOBQACDg4OBSAC
Dg4OCAADAg4OEYChBAABCBwDIAAIBSACDggIBSACDggDBgADDg4ODgYgARKAkQ4HAAQODg4ODgYA
AgIOEAIJIAIdDh0DEYCtBCABAg4FIAASgLEFIAASgLUFIAEOHQMDAAAOCSAEEoCRDhwcHAUAAg4c
HAUgABKAvQUgABKAwQUgABKAxQUgABKAyQQgAQIcBiABEoDNHAQgARwcByACCA4RgI0EAAEODgUA
AQ4dDlsHOg4SeQISgJECDg4dDh0OHA4CDg4ODggCEoClAhwOHQ4SgJEODhwOHA4SgJECDh0ODhKA
xQIODg4OEoClEYCFHQMdAx0OCB0OCB0DHQ4IHQMdAxKAwR0OCB0OByABARASgNkGIAESgN0cBCAB
ARwGBwISgNkCAyAAHAcHAxKA2QIcRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0XzA0NmQwODZhNzYzOTRj
OTg5MTY2MzkyNGI0Nzc5MDlhAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAXEQAAAAAAAAAAAAAfkQAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAHBEAAAAAAAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACw
AwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAGEmtFwAAAQAYSa0XPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
EAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAw
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAHMAdABfADAANAA2AGQA
MAA4ADYAYQA3ADYAMwA5ADQAYwA5ADgAOQAxADYANgAzADkAMgA0AGIANAA3ADcAOQAwADkAYQAA
AEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADAANgAxAC4AMQA4ADcA
MQAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAHMAdABfADAANAA2AGQAMAA4
ADYAYQA3ADYAMwA5ADQAYwA5ADgAOQAxADYANgAzADkAMgA0AGIANAA3ADcAOQAwADkAYQAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAHMAdABfADAANAA2AGQAMAA4ADYAYQA3ADYAMwA5ADQAYwA5ADgAOQAxADYANgAzADkAMgA0
AGIANAA3ADcAOQAwADkAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABzAHQAXwAwADQANgBkADAAOAA2AGEANwA2ADMAOQA0AGMAOQA4ADkAMQA2ADYAMwA5ADIANABi
ADQANwA3ADkAMAA5AGEAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADYAMAA2ADEALgAxADgANwAxADIAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADYAMAA2ADEALgAxADgANwAxADIAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAkDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{AFE33047-4B58-4ED0-AF54-DE3496B4CD74}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnPreExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnPreExecute @Scope='Package',@ExecutionID=?,@SourceID=?,@SourceName=?,@InteractiveMode=?,@UserName=?,@MachineName=?,@LogCustomValues=0,@LayoutXML=?,@TaskListXML=?,@DFLayoutXML=?,@Variables=?,@Connections=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::InteractiveMode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::UserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::MachineName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::varSSISOps_PkgLayout"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varSSISOps_TaskList"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::varSSISOps_DfLayout"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="9"
                SQLTask:DtsVariableName="User::varSSISOps_VariableValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="10"
                SQLTask:DtsVariableName="User::varSSISOps_ConnectionValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{30B40761-317E-4DD9-9EF5-7030870823FA}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnPreExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnPreExecute @Scope='Task',@ExecutionID=?,@SourceID=?,@ParentSourceID=?,@SourceName=?,@SourceType=?,@LogCustomValues=0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_ParentSourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::varSSISOps_SourceType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{3E76761C-F78A-434B-AD3E-D39488AC4C3A\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{3E76761C-F78A-434B-AD3E-D39488AC4C3A}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{3E76761C-F78A-434B-AD3E-D39488AC4C3A}"
          DTS:To="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{B2A62D43-247D-4AF0-99F8-C059A6C2D264\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{B2A62D43-247D-4AF0-99F8-C059A6C2D264}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{B2A62D43-247D-4AF0-99F8-C059A6C2D264}"
          DTS:To="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnTaskFailed]"
      DTS:CreationName="OnTaskFailed"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{6E7962A1-6C14-49CE-9BE4-E0E539683BF4}"
      DTS:EventID="0"
      DTS:EventName="OnTaskFailed"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{7306CC39-7517-4A86-A35E-A8F68C0E5A08}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnTaskFailed]\SSISOpsEhObj_Task_OnTaskFailed"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{3C1E3BDF-36C6-4563-B371-3AD036659594}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnTaskFailed"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnAlert @Scope='Task',@EventType='E',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode='0',@MessageDescription='Task failed with one or more errors. Check for any possible errors from child package.'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnVariableValueChanged]"
      DTS:CreationName="OnVariableValueChanged"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{40530955-6778-48ED-B0B5-D5732D4D81C7}"
      DTS:EventID="6815859"
      DTS:EventName="OnVariableValueChanged"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{BD8CE256-603F-4CF8-8F4F-6E0EB3EAC221}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{66A96FCD-1A53-443F-95D4-C0E555B5E1E6}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_CurValue">
          <DTS:VariableValue
            DTS:DataSubType="ManagedSerializable"
            DTS:DataType="13">
            <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
              <SOAP-ENV:Body>
                <xsd:anyType
                  id="ref-1"></xsd:anyType>
              </SOAP-ENV:Body>
            </SOAP-ENV:Envelope>
          </DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{C3C9E679-E1D8-451B-9980-579FC5992423}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to configure how many characters will be logged for each variable. Default variable length for logging is 4000 anything after that will be truncated. -1 = Log full variable value . There are 3 places where you have to set this value (OnPreExecute, OnPostExecute OnVariableValueChanged)."
          DTS:DTSID="{0380DED4-1761-4505-B511-D2B6F69D358F}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_MaxVarCharsToLog">
          <DTS:VariableValue
            DTS:DataType="3">4000</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:PropertyExpression
        DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{85C82127-35F9-445B-A799-B203CCD8AC07}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="st_d0adf0878b1a4f28b56c0d6b573c7959"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_d0adf0878b1a4f28b56c0d6b573c7959")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_d0adf0878b1a4f28b56c0d6b573c7959")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_d0adf0878b1a4f28b56c0d6b573c7959.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a8d75fda-3a10-4d4f-a39c-559aae78caf1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_d0adf0878b1a4f28b56c0d6b573c7959</RootNamespace>
    <AssemblyName>st_d0adf0878b1a4f28b56c0d6b573c7959</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_d0adf0878b1a4f28b56c0d6b573c7959
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
			try {
                string var = ReadVariable("System::VariableName").ToString();
                string filterList = ReadVariable("User::varSSISOps_FilteredVars").ToString();
                string[] arrFilter = filterList.Split(",".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);

                            bool bSkip = false;
                            string comp = var;
                            string f = string.Empty;

                            foreach (string floop in arrFilter)
                            {
                                comp = comp.ToLower().Trim();
                                f = floop.ToLower().Trim();

                                if (string.IsNullOrEmpty(f))
                                    break;

                                if (comp.IndexOf("::") < 0)
                                    comp = "user::" + comp;

                                if (f.IndexOf("::") < 0)
                                    f = "user::" + f;

                                if (System.Text.RegularExpressions.Regex.IsMatch(comp, f.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                                {
                                    bSkip = true;
                                    break;
                                }
                            }

                if (bSkip){
                    WriteVariable("User::varSSISOps_CurValue", "*****");
                    return;
                }
				object val = ReadVariable("System::VariableValue");
				if ((!DBNull.Value.Equals(val)) && val != null) {
					string s = val.ToString();
                    int iMaxCharsToLog = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"));
                    bool bLogFullValue = (iMaxCharsToLog<=0 ? true : false);
                    if (bLogFullValue || s.Length <= iMaxCharsToLog){
                        WriteVariable("User::varSSISOps_CurValue", s);
                    }else{
                        WriteVariable("User::varSSISOps_CurValue", s.Substring(0, iMaxCharsToLog) + " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 from config file if you want to log full value (Not recommended for performance reason)>");
                    }
				} else {
					WriteVariable("User::varSSISOps_CurValue", "");
				}
			} catch (Exception ex) {
				Dts.Events.FireWarning(0, "VariableValueChanged", "Can not log value for [" + ReadVariable("System::VariableName").ToString() + "]", "", 0);
			}


            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_d0adf0878b1a4f28b56c0d6b573c7959</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_d0adf0878b1a4f28b56c0d6b573c7959</msb:DisplayName>
		<msb:ProjectId>{059D9366-FADB-490E-B1C9-993BE0208F8A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_d0adf0878b1a4f28b56c0d6b573c7959.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_d0adf0878b1a4f28b56c0d6b573c7959.Properties.Settings.get_Default():st_d0adf0878b1a4f28b56c0d6b573c7959.Properties.Sett" +
    "ings")]

namespace st_d0adf0878b1a4f28b56c0d6b573c7959.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_d0adf0878b1a4f28b56c0d6b573c7959.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_d0adf0878b1a4f28b56c0d6b573c7959.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_d0adf0878b1a4f28b56c0d6b573c7959.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_d0adf0878b1a4f28b56c0d6b573c7959.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_d0adf0878b1a4f28b56c0d6b573c7959.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_d0adf0878b1a4f28b56c0d6b573c7959.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALfZpFcAAAAAAAAAAOAAAiELAQsAABgAAAAIAAAAAAAAzjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIA2AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
NgAAAAAAAEgAAAACAAUAuCQAAMgRAAABAAAAAAAAAAAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgDaAQAAAgAAEQJycwAAcCgKAAAGbxYAAAoKAnKdAABwKAoAAAZv
FgAACgsHctkAAHBvFwAAChdvGAAACgwWDQYTBH4ZAAAKEwUIEwsWEww4iwAAABELEQyaEwYRBG8a
AAAKbxsAAAoTBBEGbxoAAApvGwAAChMFEQUoHAAACi1qEQRy3QAAcG8dAAAKFi8OcuMAAHARBCge
AAAKEwQRBXLdAABwbx0AAAoWLw5y4wAAcBEFKB4AAAoTBREEEQVy8QAAcHL1AABwbx8AAAoXKCAA
AAosBBcNKxERDBdYEwwRDBELjmk/av///wksFQJy/QAAcHIxAQBwKAkAAAbd4AAAAAJyPQEAcCgK
AAAGEwd+IQAAChEHbyIAAAotaREHLGURB28WAAAKEwgCcmkBAHAoCgAABigjAAAKEwkRCRYxAxYr
ARcTChEKLQsRCG8kAAAKEQkwDwJy/QAAcBEIKAkAAAYrMQJy/QAAcBEIFhEJbyUAAApyrQEAcCge
AAAKKAkAAAYrEAJy/QAAcHL2AgBwKAkAAAbePiYCKCYAAApvJwAAChZy+AIAcHIiAwBwAnJzAABw
KAoAAAZvFgAACnJSAwBwKCgAAApy9gIAcBZvKQAACt4AAigmAAAKFm8qAAAKKgAAQRwAAAAAAAAA
AAAAjwEAAI8BAAA+AAAAIwAAARswAgBnAAAAAwAAERQKFgsCKCYAAApvKwAACgNvLAAACgIoJgAA
Cm8rAAAKEgBvLQAACgYDby4AAAoEby8AAAreDAYsCAZvMAAAChcL3N4TJgIoJgAACm8rAAAKbzEA
AAr+Gt4NBiwJBy0GBm8wAAAK3CoAASgAAAIAJwAPNgAMAAAAAAAABABARAATIwAAAQIABABVWQAN
AAAAABswAgBoAAAABAAAERQKFgsCKCYAAApvKwAACgNvMgAACgIoJgAACm8rAAAKEgBvLQAACgYD
by4AAApvMwAACgzeDAYsCAZvMAAAChcL3N4TJgIoJgAACm8rAAAKbzEAAAr+Gt4NBiwJBy0GBm8w
AAAK3AgqASgAAAIAJwAPNgAMAAAAAAAABABARAATIwAAAQIABABVWQANAAAAAB4CKDQAAAoqtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAALgEAAAjfgAAJAUA
AEgHAAAjU3RyaW5ncwAAAABsDAAAWAMAACNVUwDEDwAAEAAAACNHVUlEAAAA1A8AAPQBAAAjQmxv
YgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAmAAAABQAAAAYAAAALAAAABAAAADQAAAAC
AAAADwAAAAQAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA
3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAjQJzAgYAuAKmAgYAzwKmAgYA7AKmAgYACwOm
AgYAJAOmAgYAPQOmAgYAWAOmAgYAcwOmAgYAjAOmAgYAxQOlAwYA5QOlAwYAFgQDBAYAMwS6AAYA
OAS6AAYAXASmAgoAiARyBAoAoQRyBAYAtgSlAw4A2AQUAQYAAwW6AAYAFgW6AAoAhgVnBQoAjAVn
BQYAoQW6AAYAtQW6AA4A2gUUAQ4A9AUUAQYALga6ABIAdwZXBhIArAZXBhIAwwZXBgAAAAABAAAA
AAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAAR
AAQADAARAH8BEwARAKwBFwARAPYBOQAGBjoCUgBWgEICVQBWgEoCVQBQIAAAAACDGLwBGwABAFgg
AAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAA
AAAAhhi8ARsAAgCnIAAAAACRGNEElAACALwgAAAAAIYAGgIbAAIAwCIAAAAAgQAfAkcAAgBcIwAA
AACBAC0CTQAEAPgjAAAAAIYYvAEbAAUAAAABAFICAAABAFgCAAACAGUCAAABAFgCOQC8AWMAQQC8
AWMASQC8AWMAUQC8AWMAWQC8AWMAYQC8AWMAaQC8AWMAcQC8AWMAeQC8AWMAgQC8AWMAiQC8AWgA
kQC8ARsAmQC8ARsACQC8ARsAoQBKBG0AoQBlBHQAKQC8AXkAuQC8AYUAyQC8ARsAEQC8ARsA0QC8
ARsACQD6BJgA2QAKBZwA2QApBaEA2QAvBaoA2QA1BZgA2QA9BZgA2QBCBa0A2QBQBbIA2QBYBbcA
2QBfBb0A6QCZBcMA+QCoBcsACQCuBc8AAQG9BdQA2QDFBdkA2QDQBd0AGQDsBeMACQEIBukA2QBY
Be8AEQETBvYACQEfBmgACQGJBhEBIQGfBmMAIQG2BhcBKQHMBh8BMQHVBiYBKQHfBhsAIQHmBhsA
IQHsBmMAMQH4BjIBGQC8ARsACAAUAFkACAAYAF4AKQCTAIsALgAbAK8BLgAjAK8BLgBjANUBLgAL
AD4BLgATAIYBLgAzAIYBLgArAK8BLgA7ALUBLgBDAK8BLgBbAMwBQwBrAF4ASQCTAIsAYQCbAF4A
gwCrAF4AgAD/ACsBNgECAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAF
AAIABQAHAASAAAABAAAArRcbSQAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAA
AAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAKADgGAAAAAAAAAAAB
AAAAAgcAAAUABAAAAAAAADxNb2R1bGU+AHN0X2QwYWRmMDg3OGIxYTRmMjhiNTZjMGQ2YjU3M2M3
OTU5LmRsbABSZXNvdXJjZXMAc3RfZDBhZGYwODc4YjFhNGYyOGI1NmMwZDZiNTczYzc5NTkuUHJv
cGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAHN0X2QwYWRmMDg3OGIxYTRmMjhiNTZjMGQ2YjU3
M2M3OTU5AFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmln
dXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlw
dFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBy
ZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1
cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0
dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AV3JpdGVWYXJpYWJs
ZQBSZWFkVmFyaWFibGUAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAdmFyaWFibGVOYW1l
AHZhcmlhYmxlVmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVy
ZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkA
Z2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9y
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBUb1N0cmluZwBTdHJpbmcAVG9DaGFy
QXJyYXkAU3RyaW5nU3BsaXRPcHRpb25zAFNwbGl0AEVtcHR5AFRvTG93ZXIAVHJpbQBJc051bGxP
ckVtcHR5AEluZGV4T2YAQ29uY2F0AFJlcGxhY2UAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Np
b25zAFJlZ2V4AFJlZ2V4T3B0aW9ucwBJc01hdGNoAERCTnVsbABWYWx1ZQBFcXVhbHMAQ29udmVy
dABUb0ludDMyAGdldF9MZW5ndGgAU3Vic3RyaW5nAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMA
RXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfRXZlbnRzAEZpcmVXYXJuaW5nAHNldF9UYXNrUmVzdWx0
AEV4Y2VwdGlvbgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBWYXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIA
TG9ja0ZvcldyaXRlAFZhcmlhYmxlcwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0Ac2V0
X1ZhbHVlAFVubG9jawBSZXNldABMb2NrRm9yUmVhZABnZXRfVmFsdWUAc3RfZDBhZGYwODc4YjFh
NGYyOGI1NmMwZDZiNTczYzc5NTkuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABx
cwB0AF8AZAAwAGEAZABmADAAOAA3ADgAYgAxAGEANABmADIAOABiADUANgBjADAAZAA2AGIANQA3
ADMAYwA3ADkANQA5AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAp
UwB5AHMAdABlAG0AOgA6AFYAYQByAGkAYQBiAGwAZQBOAGEAbQBlAAA7VQBzAGUAcgA6ADoAdgBh
AHIAUwBTAEkAUwBPAHAAcwBfAEYAaQBsAHQAZQByAGUAZABWAGEAcgBzAAADLAAABToAOgAADXUA
cwBlAHIAOgA6AAADKgAAB1wAdwAqAAAzVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBf
AEMAdQByAFYAYQBsAHUAZQAACyoAKgAqACoAKgAAK1MAeQBzAHQAZQBtADoAOgBWAGEAcgBpAGEA
YgBsAGUAVgBhAGwAdQBlAABDVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAE0AYQB4
AFYAYQByAEMAaABhAHIAcwBUAG8ATABvAGcAAIFHIAAuAC4ALgA8AFYAQQBMAFUARQAgAFQAUgBV
AE4AQwBBAFQARQBEACAALQAgAEMAaABhAG4AZwBlACAAdgBhAGwAdQBlACAAbwBmACAAWwB2AGEA
cgBTAFMASQBTAE8AcABzAF8ATQBhAHgAVgBhAHIAQwBoAGEAcgBzAFQAbwBMAG8AZwBdACAAdABv
ACAALQAxACAAZgByAG8AbQAgAGMAbwBuAGYAaQBnACAAZgBpAGwAZQAgAGkAZgAgAHkAbwB1ACAA
dwBhAG4AdAAgAHQAbwAgAGwAbwBnACAAZgB1AGwAbAAgAHYAYQBsAHUAZQAgACgATgBvAHQAIABy
AGUAYwBvAG0AbQBlAG4AZABlAGQAIABmAG8AcgAgAHAAZQByAGYAbwByAG0AYQBuAGMAZQAgAHIA
ZQBhAHMAbwBuACkAPgABAQApVgBhAHIAaQBhAGIAbABlAFYAYQBsAHUAZQBDAGgAYQBuAGcAZQBk
AAAvQwBhAG4AIABuAG8AdAAgAGwAbwBnACAAdgBhAGwAdQBlACAAZgBvAHIAIABbAAADXQAAAACx
J1VN7UQ5SKXayMjzJ53DAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkF
AAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwFIAIBDhwEIAEcDgIGCAMGERQEAAAAAAQBAAAA
BCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEDIAAO
BCAAHQMIIAIdDh0DEXECBg4EAAECDgQgAQgOBQACDg4OBSACDg4OBwADAg4OEXkDBhJ9BCABAhwE
AAEIHAMgAAgFIAIOCAgFIAASgIUFIAASgIkGAAMODg4OCCAFAQgODg4IEQcNDg4dDgIODg4cDggC
HQ4IBSAAEoCRByABARASgJUGIAESgJkcBCABARwGBwISgJUCAyAAHAcHAxKAlQIcRwEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1l
d29yayA0KAEAI3N0X2QwYWRmMDg3OGIxYTRmMjhiNTZjMGQ2YjU3M2M3OTU5AAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwGoNgAAAAAAAAAAAAC+NgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsDYAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABABtJrRcAAAEAG0mtFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABzAHQAXwBk
ADAAYQBkAGYAMAA4ADcAOABiADEAYQA0AGYAMgA4AGIANQA2AGMAMABkADYAYgA1ADcAMwBjADcA
OQA1ADkAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADYAMQAu
ADEAOAA3ADEANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwBkADAA
YQBkAGYAMAA4ADcAOABiADEAYQA0AGYAMgA4AGIANQA2AGMAMABkADYAYgA1ADcAMwBjADcAOQA1
ADkALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABzAHQAXwBkADAAYQBkAGYAMAA4ADcAOABiADEAYQA0AGYAMgA4AGIANQA2AGMA
MABkADYAYgA1ADcAMwBjADcAOQA1ADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAcwB0AF8AZAAwAGEAZABmADAAOAA3ADgAYgAxAGEANABmADIAOABiADUANgBjADAA
ZAA2AGIANQA3ADMAYwA3ADkANQA5AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA2ADAANgAxAC4AMQA4ADcAMQA1AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAANgAxAC4AMQA4ADcAMQA1AAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{462D3D67-CC68-4220-8E60-0060C0BB9F72}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec usp_SSISOps_Audit_OnVariableValueChanged @ExecutionID=?,@SourceID=?,@VariableName=?,@VariableValue=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::VariableName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_CurValue"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnVariableValueChanged].PrecedenceConstraints[{8936E647-4341-43D1-B65F-536A77667F51\}]"
          DTS:CreationName=""
          DTS:DTSID="{8936E647-4341-43D1-B65F-536A77667F51}"
          DTS:From="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{8936E647-4341-43D1-B65F-536A77667F51}"
          DTS:To="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnWarning]"
      DTS:CreationName="OnWarning"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{DB2E2B90-D1F6-4C03-92BA-B28F2B8BA415}"
      DTS:EventID="52685"
      DTS:EventName="OnWarning"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{A4EE217B-3AC8-454D-A550-57280A14DBD1}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{E5313247-0BBF-4CF3-87BA-2F335E16828D}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{96CB80E1-E620-4C41-9C5D-C30A48C5DB69}</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{990F5634-EEAB-4F59-82F0-307AD0FF434C}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnWarning_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_f771ec9dba1841adb6c149f27fd02d61"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_f771ec9dba1841adb6c149f27fd02d61")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_f771ec9dba1841adb6c149f27fd02d61")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_f771ec9dba1841adb6c149f27fd02d61
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_f771ec9dba1841adb6c149f27fd02d61.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{94618319-d24a-432f-86b7-526ff786b261}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_f771ec9dba1841adb6c149f27fd02d61</RootNamespace>
    <AssemblyName>st_f771ec9dba1841adb6c149f27fd02d61</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_f771ec9dba1841adb6c149f27fd02d61</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_f771ec9dba1841adb6c149f27fd02d61</msb:DisplayName>
		<msb:ProjectId>{5E356745-3E35-4664-8B25-29A6A09A4D29}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_f771ec9dba1841adb6c149f27fd02d61.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f771ec9dba1841adb6c149f27fd02d61.Properties.Settings.get_Default():st_f771ec9dba1841adb6c149f27fd02d61.Properties.Sett" +
    "ings")]

namespace st_f771ec9dba1841adb6c149f27fd02d61.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f771ec9dba1841adb6c149f27fd02d61.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f771ec9dba1841adb6c149f27fd02d61.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f771ec9dba1841adb6c149f27fd02d61.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_f771ec9dba1841adb6c149f27fd02d61.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_f771ec9dba1841adb6c149f27fd02d61.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_f771ec9dba1841adb6c149f27fd02d61.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK3ZpFcAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA3i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIgvAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
LwAAAAAAAEgAAAACAAUAyCIAAMAMAAABAAAAAAAAABAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqNgIoFgAAChZvFwAACioAAAAbMAIAZwAAAAIAABEUChYLAigWAAAKbxgA
AAoDbxkAAAoCKBYAAApvGAAAChIAbxoAAAoGA28bAAAKBG8cAAAK3gwGLAgGbx0AAAoXC9zeEyYC
KBYAAApvGAAACm8eAAAK/hreDQYsCQctBgZvHQAACtwqAAEoAAACACcADzYADAAAAAAAAAQAQEQA
Ex8AAAECAAQAVVkADQAAAAAbMAIAaAAAAAMAABEUChYLAigWAAAKbxgAAAoDbx8AAAoCKBYAAApv
GAAAChIAbxoAAAoGA28bAAAKbyAAAAoM3gwGLAgGbx0AAAoXC9zeEyYCKBYAAApvGAAACm8eAAAK
/hreDQYsCQctBgZvHQAACtwIKgEoAAACACcADzYADAAAAAAAAAQAQEQAEx8AAAECAAQAVVkADQAA
AAAeAighAAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAAGAQAACN+AACEBAAAPAYAACNTdHJpbmdzAAAAAMAKAAB0AAAAI1VTADQLAAAQAAAAI0dV
SUQAAABECwAAfAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAAB8AAAAFAAAA
BgAAAAsAAAAEAAAAIQAAAAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAA
AAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCNAnMCBgC4AqYC
BgDPAqYCBgDsAqYCBgALA6YCBgAkA6YCBgA9A6YCBgBYA6YCBgBzA6YCBgCMA6YCBgDFA6UDBgDl
A6UDBgAWBAMEBgAzBLoABgA4BLoABgBcBKYCCgCIBHIECgChBHIEBgC2BKUDDgDYBBQBDgD6BBQB
EgBiBUIFEgCXBUIFEgCuBUIFBgDXBboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABr
ADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAMABEAfwETABEArAEXABEA9gE5AAYG
OgJSAFaAQgJVAFaASgJVAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY0QSUAAIA
uyAAAAAAhgAaAhsAAgDMIAAAAACBAB8CRwACAGghAAAAAIEALQJNAAQABCIAAAAAhhi8ARsABQAA
AAEAUgIAAAEAWAIAAAIAZQIAAAEAWAI5ALwBYwBBALwBYwBJALwBYwBRALwBYwBZALwBYwBhALwB
YwBpALwBYwBxALwBYwB5ALwBYwCBALwBYwCJALwBaACRALwBGwCZALwBGwAJALwBGwChAEoEbQCh
AGUEdAApALwBeQC5ALwBhQDJALwBGwARALwBGwDRALwBGwAZAAwFmADZABQFaADZAHQFnQDhAIoF
YwDhAKEFogDpALcFqQDxAMAFrwDpAMoFGwDhANEFGwDhAOEFYwDxAO0FugAZALwBGwAIABQAWQAI
ABgAXgApAJMAiwAuABsANgEuACMANgEuAGMAXAEuAAsAxQAuABMADQEuADMADQEuACsANgEuADsA
PAEuAEMANgEuAFsAUwFDAGsAXgBJAJMAiwBhAJsAXgCDAKsAXgCAALQAvgACAAEAAwADAAAAbwEv
AAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAArRcWSQAAAAAAAH8A
AAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1
AAAAAAAMAAAAAAAAAAAAAAAKACMFAAAAAAAAAAABAAAA9wUAAAUABAAAAAA8TW9kdWxlPgBzdF9m
NzcxZWM5ZGJhMTg0MWFkYjZjMTQ5ZjI3ZmQwMmQ2MS5kbGwAUmVzb3VyY2VzAHN0X2Y3NzFlYzlk
YmExODQxYWRiNmMxNDlmMjdmZDAyZDYxLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBz
dF9mNzcxZWM5ZGJhMTg0MWFkYjZjMTQ5ZjI3ZmQwMmQ2MQBTY3JpcHRSZXN1bHRzAG1zY29ybGli
AFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVt
LlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRp
b24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1
bHQARGVmYXVsdABNYWluAFdyaXRlVmFyaWFibGUAUmVhZFZhcmlhYmxlAHZhbHVlX18AU3VjY2Vz
cwBGYWlsdXJlAHZhbHVlAHZhcmlhYmxlTmFtZQB2YXJpYWJsZVZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25v
c3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBzZXRfVGFza1Jlc3VsdABNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJp
YWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIATG9ja0ZvcldyaXRlAFZhcmlhYmxl
cwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0Ac2V0X1ZhbHVlAFVubG9jawBSZXNldABF
eGNlcHRpb24ATG9ja0ZvclJlYWQAZ2V0X1ZhbHVlAHN0X2Y3NzFlYzlkYmExODQxYWRiNmMxNDlm
MjdmZDAyZDYxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxcwB0AF8AZgA3ADcA
MQBlAGMAOQBkAGIAYQAxADgANAAxAGEAZABiADYAYwAxADQAOQBmADIANwBmAGQAMAAyAGQANgAx
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAkbHY3sl7yUyUL87L
R9qHAQAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUE
CAASGQMGEgwEAAASDAQIABIMBSACAQ4cBCABHA4CBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgG
AAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQYgAQEQ
EnUFIAESeRwEIAEBHAUHAhJ1AgMgABwGBwMSdQIcRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0X2Y3NzFl
YzlkYmExODQxYWRiNmMxNDlmMjdmZDAyZDYxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAsC8AAAAAAAAAAAAAzi8A
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAvAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAWSa0XAAABABZJrRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcwB0
AF8AZgA3ADcAMQBlAGMAOQBkAGIAYQAxADgANAAxAGEAZABiADYAYwAxADQAOQBmADIANwBmAGQA
MAAyAGQANgAxAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAA2
ADEALgAxADgANwAxADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8A
ZgA3ADcAMQBlAGMAOQBkAGIAYQAxADgANAAxAGEAZABiADYAYwAxADQAOQBmADIANwBmAGQAMAAy
AGQANgAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAcwB0AF8AZgA3ADcAMQBlAGMAOQBkAGIAYQAxADgANAAxAGEAZABiADYA
YwAxADQAOQBmADIANwBmAGQAMAAyAGQANgAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAHMAdABfAGYANwA3ADEAZQBjADkAZABiAGEAMQA4ADQAMQBhAGQAYgA2AGMA
MQA0ADkAZgAyADcAZgBkADAAMgBkADYAMQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA3ADEAMAAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA3ADEAMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{C6548A53-35EB-4A7E-A857-C4F0D434E603}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnWarning"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnAlert @Scope='Package',@EventType='W',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{E7F7D107-A56D-4528-ABAD-221A80E59ED8}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnWarning"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnAlert @Scope='Task',@EventType='W',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsNFObj_UpdateAlertList"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Disabled="True"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{F5E5C91F-D05B-4476-990F-0B4B3DD8D521}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_UpdateAlertList">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::paramSSISOpsNF_OnWarning_Disable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_9fb532fee3b6494a81c5963508d13840"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_9fb532fee3b6494a81c5963508d13840")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_9fb532fee3b6494a81c5963508d13840")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
Copyright © 2014 Pragmatic Works Inc.
#####################################################################################################################
LEGAL NOTICE
#####################################################################################################################
THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
##################################################################################################################### 
*/
#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

using System.Net;
using System.Net.Mail;
using System.Collections;


#endregion

namespace st_9fb532fee3b6494a81c5963508d13840
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            UpdateAlertList();
            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion

        private const string NotificationFrameworkAlertListVariableName = "User::varSSISOpsNF_AlertList";
        private const string NotificationFrameworkAlertListAllVariableName = "User::varSSISOpsNF_AlertList_All";
        private const string NotificationFrameworkCounter = "User::varSSISOpsNF_Notification_Counter";
        private const string NotificationFrameworkSubComponentName = "BI xPress Notification Framework Send Alert";

        private void UpdateAlertList()
        {
            System.Collections.Hashtable oRuntimeSettings = GetRuntimeSettings();

            string sFilteredAlerts = "|" + oRuntimeSettings["FILTERED_ALERTS"].ToString() + "|";

            string errorCodeValue = ReadVariable("System::ErrorCode").ToString();

            if (sFilteredAlerts.IndexOf("|" + errorCodeValue.ToString() + "|") >= 0)
                return; // Filter This

            string errorDescription = ReadVariable("System::ErrorDescription").ToString();
            string sourceName = ReadVariable("System::SourceName").ToString();
            string sourceId = ReadVariable("System::SourceID").ToString();

            bool isErrorScope = false;

            try
            {
                if (Dts.VariableDispenser.Contains("System::Cancel"))
                    isErrorScope = true;
                else
                    isErrorScope = false;
            }
            catch (Exception)
            {
                isErrorScope = false;
            }

            AlertType alertType = isErrorScope ? AlertType.ErrorAlert : AlertType.WarningAlert;

            int errorCode;

            if (string.IsNullOrEmpty(errorCodeValue) || !int.TryParse(errorCodeValue, out errorCode))
                errorCode = 0;

            AddAlertInfo(errorDescription, errorCode, sourceName, sourceId, alertType);
        }

        private void AddAlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
        {
            if (string.IsNullOrEmpty(alertDescription))
                alertDescription = "<NO ALERT DESCRIPTION GIVEN>";

            if (string.IsNullOrEmpty(sourceName))
                sourceName = "<NO ALERT SOURCE NAME GIVEN>";

            System.Text.StringBuilder alertListBuilder = new System.Text.StringBuilder();
            System.Text.StringBuilder alertListAllBuilder = new System.Text.StringBuilder();

            AlertInfo alertInfo = new AlertInfo(alertDescription, alertCode, sourceName, sourceId, alertType);

            System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(AlertInfo), new Type[] { typeof(AlertType) });

            // Build a flat list of XML AlertInfo elements that don't have to be validated each time we add new node(s).  This will save on processing time but will increase code complexity in the OnPostExecute event handler.
            using (System.IO.StringWriter stringWriter = new System.IO.StringWriter())
            {
                xmlSerializer.Serialize(stringWriter, alertInfo);

                System.Xml.XmlDocument alertInfoDocument = new System.Xml.XmlDocument();

                alertInfoDocument.LoadXml(stringWriter.GetStringBuilder().ToString());

                foreach (System.Xml.XmlNode documentNode in alertInfoDocument.ChildNodes)
                {
                    if (documentNode is System.Xml.XmlDeclaration || documentNode is System.Xml.XmlComment || documentNode is System.Xml.XmlAttribute || string.IsNullOrEmpty(documentNode.OuterXml))
                        continue;

                    string outerXml = documentNode.OuterXml;

                    outerXml = outerXml.Replace("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"", string.Empty).Replace("xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", string.Empty);

                    alertListBuilder.Append(outerXml);
                    alertListAllBuilder.Append(outerXml);
                }
            }

            string updatedAlertList = ReadVariable(NotificationFrameworkAlertListVariableName) as string;
            string existingAlertList;

            if (!string.IsNullOrEmpty(updatedAlertList))
                existingAlertList = updatedAlertList + alertListBuilder.ToString();
            else
                existingAlertList = alertListBuilder.ToString();

            WriteVariable(NotificationFrameworkAlertListVariableName, existingAlertList);

            string updatedAlertListAll = ReadVariable(NotificationFrameworkAlertListAllVariableName) as string;
            string existingAlertListAll;

            if (!string.IsNullOrEmpty(updatedAlertListAll))
                existingAlertListAll = updatedAlertListAll + alertListAllBuilder.ToString();
            else
                existingAlertListAll = alertListAllBuilder.ToString();
            
            WriteVariable(NotificationFrameworkAlertListAllVariableName, existingAlertListAll);
        }
        private void SetSetting(string SettingName, object Value, System.Collections.Hashtable runtimeSettings)
        {
            SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (!runtimeSettings.ContainsKey(SettingName))
                throw new Exception(SettingName + " setting doesn't exist in runtime setting list.");

            runtimeSettings[SettingName] = Value;
        }

        private object GetSetting(string settingName, System.Collections.Hashtable runtimeSettings)
        {
            settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (runtimeSettings.ContainsKey(settingName))
                return runtimeSettings[settingName];

            // If key not found then set default 
            switch (settingName)
            {
                case "MAX_NOTIFICATIONS":
                    return 1;
                case "ENABLE_ROWCOUNT_THRESHOLD":
                    return false;
                case "ENABLE_TIME_THRESHOLD":
                    return false;
                case "PRIORITY_MODE":
                    //// DELAYED (After Package) or URGENT (After Task) 
                    return "URGENT";
                case "EMAIL_FORMAT":
                    //// TEXT or HTML 
                    return "TEXT";
                case "SMTP_PORT":
                    //// Default 25 
                    return 25;
                case "SMTP_USESSL":
                    //// Default False
                    return false;
                case "SMTP_UID":
                    return "";
                case "SMTP_PWD":
                    return "";
                case "SMS_EMAILLIST":
                    ////Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                    return "";
                case "FILTERED_ALERTS":
                    ////Must be pipe seperated e.g. -2344556|-11223445 .... 
                    return "";
                case "NOTIFY_ONERROR":
                    return true;
                case "NOTIFY_ONWARNING":
                    return false;
                case "NOTIFY_ONSUCCESS":
                    return false;
                case "NOTIFY_ONCOMPLETE":
                    return false;
                case "SMS_MAXLENGTH":
                    return 160;
                case "NF_CHECK":
                    return "";
                case "CC_EMAILLIST":
                    return "";
                case "BCC_EMAILLIST":
                    return "";
                case "NOTIFY_USING_EMAIL":
                    return true;
                case "NOTIFY_USING_SMS":
                    return true;
                case "NOTIFY_USING_EVENTLOG":
                    return false;
                case "NOTIFY_USING_LOGFILE":
                    return false;
                case "LOG_FOLDER_PATH":
                    return "C:\\SSIS\\Log";
                case "DELETE_LOG_OLDER_THAN_DAYS":
                    return 5;
                case "USE_CUSTOM_EMAIL_TEMPLATE":
                    return false;
                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                    return "C:\\SSIS\\Config\\NF_EmailTemplate.htm";
                default:
                    return null;
            }
        }

        [Serializable]
        public enum AlertType
        {
            ErrorAlert = 1,
            WarningAlert = 2,
            TimeThresholdAlert = 3,
            RowCountThresholdAlert = 4
        }

        // NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
        // In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
        public System.Collections.Hashtable GetRuntimeSettings()
        {
            object otherConfigSettingsVariableValue = ReadVariable("User::varSSISOpsNF_OtherConfigSettings");
            string otherConfigSettings = otherConfigSettingsVariableValue != null ? otherConfigSettingsVariableValue.ToString() : null;

            System.Collections.Hashtable runtimeSettings = new System.Collections.Hashtable();

            // Set Default values
            runtimeSettings.Add("MAX_NOTIFICATIONS", 1);
            runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", false);
            runtimeSettings.Add("ENABLE_TIME_THRESHOLD", false);
            runtimeSettings.Add("PRIORITY_MODE", "DELAYED");
            runtimeSettings.Add("EMAIL_FORMAT", "HTML");
            runtimeSettings.Add("SMTP_PORT", 25);
            runtimeSettings.Add("SMTP_USESSL", false);
            runtimeSettings.Add("SMTP_UID", string.Empty);
            runtimeSettings.Add("SMTP_PWD", string.Empty);
            runtimeSettings.Add("SMS_EMAILLIST", string.Empty);
            runtimeSettings.Add("FILTERED_ALERTS", string.Empty);
            runtimeSettings.Add("NOTIFY_ONERROR", true);
            runtimeSettings.Add("NOTIFY_ONWARNING", false);
            runtimeSettings.Add("NOTIFY_ONSUCCESS", false);
            runtimeSettings.Add("NOTIFY_ONCOMPLETE", false);
            runtimeSettings.Add("SMS_MAXLENGTH", 160);
            runtimeSettings.Add("CC_EMAILLIST", string.Empty);
            runtimeSettings.Add("BCC_EMAILLIST", string.Empty);
            runtimeSettings.Add("NOTIFY_USING_EMAIL", true);
            runtimeSettings.Add("NOTIFY_USING_SMS", true);
            runtimeSettings.Add("NOTIFY_USING_EVENTLOG", false);
            runtimeSettings.Add("NOTIFY_USING_LOGFILE", false);
            runtimeSettings.Add("LOG_FOLDER_PATH", "C:\\SSIS\\Log");
            runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5);
            runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", false);
            runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\\SSIS\\Config\\NF_EmailTemplate.htm");

            if (!string.IsNullOrEmpty(otherConfigSettings))
            {
                // Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

                const string PAIR_SEP = ";";
                const string NAMEVAL_SEP = "=";

                string[] arrNameValue = otherConfigSettings.Split(PAIR_SEP.ToCharArray());

                foreach (string sPair in arrNameValue)
                {
                    string[] arrTemp = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries);

                    try
                    {
                        if (arrTemp.Length >= 2)
                        {
                            string settingName = arrTemp[0];
                            string settingValue = arrTemp[1];

                            switch (settingName.ToUpper().Trim())
                            {
                                case "MAX_NOTIFICATIONS":
                                    runtimeSettings["MAX_NOTIFICATIONS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "ENABLE_ROWCOUNT_THRESHOLD":
                                    runtimeSettings["ENABLE_ROWCOUNT_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "ENABLE_TIME_THRESHOLD":
                                    runtimeSettings["ENABLE_TIME_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "PRIORITY_MODE":
                                    // DELAYED (After Package) or URGENT (After Task) 
                                    runtimeSettings["PRIORITY_MODE"] = (string)settingValue;
                                    break;
                                case "EMAIL_FORMAT":
                                    // TEXT or HTML 
                                    runtimeSettings["EMAIL_FORMAT"] = (string)settingValue;
                                    break;
                                case "SMTP_PORT":
                                    // Default 25 
                                    runtimeSettings["SMTP_PORT"] = Convert.ToInt32(settingValue);
                                    break;
                                case "SMTP_USESSL":
                                    // Default false
                                    runtimeSettings["SMTP_USESSL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMTP_UID":
                                    runtimeSettings["SMTP_UID"] = (string)settingValue;
                                    break;
                                case "SMTP_PWD":
                                    runtimeSettings["SMTP_PWD"] = (string)settingValue;
                                    break;
                                case "SMS_EMAILLIST":
                                    // Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                    runtimeSettings["SMS_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "FILTERED_ALERTS":
                                    ////Must be pipe seperated e.g. -111|-222 .... 
                                    runtimeSettings["FILTERED_ALERTS"] = (string)settingValue;
                                    break;
                                case "NOTIFY_ONERROR":
                                    runtimeSettings["NOTIFY_ONERROR"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONWARNING":
                                    runtimeSettings["NOTIFY_ONWARNING"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONSUCCESS":
                                    runtimeSettings["NOTIFY_ONSUCCESS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONCOMPLETE":
                                    runtimeSettings["NOTIFY_ONCOMPLETE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMS_MAXLENGTH":
                                    runtimeSettings["SMS_MAXLENGTH"] = Convert.ToInt32(settingValue);
                                    break;
                                case "CC_EMAILLIST":
                                    runtimeSettings["CC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "BCC_EMAILLIST":
                                    runtimeSettings["BCC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "NOTIFY_USING_EMAIL":
                                    runtimeSettings["NOTIFY_USING_EMAIL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_SMS":
                                    runtimeSettings["NOTIFY_USING_SMS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_EVENTLOG":
                                    runtimeSettings["NOTIFY_USING_EVENTLOG"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_LOGFILE":
                                    runtimeSettings["NOTIFY_USING_LOGFILE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "LOG_FOLDER_PATH":
                                    runtimeSettings["LOG_FOLDER_PATH"] = (string)settingValue;
                                    break;
                                case "DELETE_LOG_OLDER_THAN_DAYS":
                                    runtimeSettings["DELETE_LOG_OLDER_THAN_DAYS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "USE_CUSTOM_EMAIL_TEMPLATE":
                                    runtimeSettings["USE_CUSTOM_EMAIL_TEMPLATE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                                    runtimeSettings["CUSTOM_EMAIL_TEMPLATE_FILEPATH"] = (string)settingValue;
                                    break;
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, string.Empty, 0);
                    }
                }
            }

            SetNF(runtimeSettings);

            WriteVariable(NotificationFrameworkCounter, 0);

            return runtimeSettings;
        }

        public void SetNF(Hashtable runtimeSettings)
        {
            runtimeSettings.Add(((Char)78).ToString() + ((Char)70).ToString() + ((Char)95).ToString() + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString(), ReadVariable("User::varSSISOpsNF_" + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString()));
        }

        [Serializable]
        public class AlertInfo
        {
            /// <summary>
            /// Retained for serialization purposes.
            /// </summary>
            public AlertInfo()
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
                : this(alertDescription, alertCode, sourceName, sourceId, alertType, DateTime.Now)
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType, DateTime timeStamp)
            {
                AlertCode = alertCode;
                AlertDescription = alertDescription;
                AlertType = alertType;
                SourceName = sourceName;
                SourceId = sourceId;
                AlertTimeStamp = timeStamp;
            }

            public int AlertCode { get; set; }
            public string AlertDescription { get; set; }
            public DateTime AlertTimeStamp { get; set; }
            public AlertType AlertType { get; set; }
            public string SourceId { get; set; }
            public string SourceName { get; set; }
        }

        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_9fb532fee3b6494a81c5963508d13840.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{fea3469c-3faf-4e5c-81d0-90bf7c5cb0f0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_9fb532fee3b6494a81c5963508d13840</RootNamespace>
    <AssemblyName>st_9fb532fee3b6494a81c5963508d13840</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_9fb532fee3b6494a81c5963508d13840</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_9fb532fee3b6494a81c5963508d13840</msb:DisplayName>
		<msb:ProjectId>{0E8DBFE6-0C11-4415-8BB1-F25E269AE960}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_9fb532fee3b6494a81c5963508d13840.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_9fb532fee3b6494a81c5963508d13840.Properties.Settings.get_Default():st_9fb532fee3b6494a81c5963508d13840.Properties.Sett" +
    "ings")]

namespace st_9fb532fee3b6494a81c5963508d13840.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_9fb532fee3b6494a81c5963508d13840.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_9fb532fee3b6494a81c5963508d13840.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_9fb532fee3b6494a81c5963508d13840.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_9fb532fee3b6494a81c5963508d13840.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_9fb532fee3b6494a81c5963508d13840.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_9fb532fee3b6494a81c5963508d13840.dll">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
JgIoFgAACm8cAAAKb0wAAAr+Gt4NBiwJBy0GBm9LAAAK3AgqASgAAAIAJwAPNgAMAAAAAAAABABA
RAATIQAAAQIABABVWQANAAAAAB4CKE8AAAoqHgIoDgAACipOAgMEBQ4EDgUoUQAACigUAAAGKtIC
KA4AAAoCBCgWAAAGAgMoGAAABgIOBSgcAAAGAgUoIAAABgIOBCgeAAAGAg4GKBoAAAYqHgJ7EAAA
BCoiAgN9EAAABCoeAnsRAAAEKiICA30RAAAEKh4CexIAAAQqIgIDfRIAAAQqHgJ7EwAABCoiAgN9
EwAABCoeAnsUAAAEKiICA30UAAAEKh4CexUAAAQqIgIDfRUAAAQqAAAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAYAkAACN+AADMCQAAyAwAACNTdHJp
bmdzAAAAAJQWAACgCAAAI1VTADQfAAAQAAAAI0dVSUQAAABEHwAAQAQAACNCbG9iAAAAAAAAAAIA
AAFXHaIJCQMAAAD6JTMAFgAAAQAAADYAAAAIAAAAFwAAACAAAAAgAAAAUQAAAAoAAAAiAAAACAAA
AAMAAAAJAAAAEAAAAAEAAAABAAAABQAAAAEAAAADAAAAAAAKAAEAAAAAAAYA1QDOAAoA8QDcAA4A
UQEoAQYAbQHOAAYAgwFyAQYAtAGfAQYA/wLsAgYArQPOAAYADgb0BQYAOQYnBgYAUAYnBgYAbQYn
BgYAjAYnBgYApQYnBgYAvgYnBgYA2QYnBgYA9AYnBgYADQcnBgYARgcmBwYAZgcmBwYAlweEBwYA
tAfOAAYAuQfOAAYA3QcnBgoACQjzBwoAIgjzBwYANwgmBw4AWQgoAQ4AewgoAQYAtgjOABIACwnr
CAYASgnOAAYAWQnOAAYAbwljCRYAoQmICQYAuQmvCQYAxgmvCRYA2wl9CRYAAAp9CRYACAp9CQYA
IwrsAhYASQp9CRYAWAp9CRYAYwp9CQYAmwrOAAYARgsrCwYAdwvOAAYAkQvOAAYAuAvOAA4A0gso
AQYABwzOABIAGQzrCBIAMAzrCAYAZgzOAAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAA
awA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAgAEgACIQAAsQAAABEACwASAAIgEAC7
AAAABQAQABIAAAAAAOYKAAAFABYAIQARAJMBEwARAMABFwARAAoCOQBRgC4CRwBRgFkCRwBRgIcC
RwBRgKQCRwAGBlMDmQFWgFsDnAFWgGMDnAEGBlMDmQFWgGsDqgFWgHYDqgFWgIMDqgFWgJYDqgEB
AHYEmQEBAJEERwABALME8QEBANMEqgEBAO4ERwABAAgFRwATAFML4AITAKQL4AJQIAAAAACDGNAB
GwABAFggAAAAAJMI1gEfAAEAkSAAAAAAkwjqASQAAQCYIAAAAACTCPYBKQABAKAgAAAAAJYIGgI9
AAIAsyAAAAAAhhjQARsAAgCnIAAAAACRGFIILgICALsgAAAAAIYAygIbAAIA0CAAAAAAgQDPAhsA
AgDUIQAAAACBAN8CagECALwjAAAAAIEACQN0AQcA9CMAAAAAgQAUA3wBCgDgJgAAAACGAB8DgwEM
AOwtAAAAAIYAMgOIAQwA5C4AAAAAgQA4A44BDQCALwAAAACBAEYDlAEPABwwAAAAAIYY0AEbABAA
JDAAAAAAhhjQARsAEAAsMAAAAACGGNABagEQAEAwAAAAAIYY0AG9ARUAdTAAAAAAhgi2A8kBGwB9
MAAAAACGCMQDzQEbAIYwAAAAAIYI0gPSARwAjjAAAAAAhgjnA9YBHACXMAAAAACGCPwD2wEdAJ8w
AAAAAIYIDwTgAR0AqDAAAAAAhggiBOYBHgCwMAAAAACGCDAE6wEeALkwAAAAAIYIPgTSAR8AwTAA
AAAAhghLBNYBHwDKMAAAAACGCFgE0gEgANIwAAAAAIYIZwTWASAAAAABAGIFAAABAGgFAAACAHkF
AAADAIMFAAAEAI4FAAAFAJcFAAABAKEFAAACAK0FAAADALMFAAABAMMFAAACALMFAAABALMFAAAB
AM8FAAACANwFAAABAM8FAAABAGgFAAACAHkFAAADAIMFAAAEAI4FAAAFAJcFAAABAGgFAAACAHkF
AAADAIMFAAAEAI4FAAAFAJcFAAAGAOoFAAABAGIFAAABAGIFAAABAGIFAAABAGIFAAABAGIFAAAB
AGIFSQDQAdYBUQDQAdYBWQDQAdYBYQDQAdYBaQDQAdYBcQDQAdYBeQDQAdYBgQDQAdYBiQDQAdYB
kQDQAdYBmQDQAc0BoQDQARsAqQDQARsACQDQARsAsQDLBwcCsQDmBw4CKQDQARMCyQDQAR8C2QDQ
ARsAEQDQARsA4QDQARsAGQCNCDIC6QCVCM0BOQCkCDcCCQCtCNIB8QC9CDwC8QDECEMC6QAdCUgC
+QAzCU0C8QA8CVICAQFQCVcCEQHQARsAGQHQAWwCIQHQARsAGQHRCXUCMQHQARsAIQHnCX0CMQH4
CdYBOQEUCoMCQQEvCokCSQE9Co8COQFwCtIB8QB9CkcA8QCDCpMCEQGLCpkCSQGSCqACaQGnChsA
8QC9CKQCMQCvCiQA8QDECs8C8QDMCtIBOQDRCtUCCQHQAdYBOQDdCtoCDADQAc0BDABnC/ECDABr
C/kCOQDQARsAOQBnC9oC8QB/CwcD8QCLCwwD8QCLCxMD8QDECtIBiQHACx4DiQHIC1IC6QDmCyMD
CQHxC9IBkQH9CykDmQGtCNIB8QC9CEgD+QAMDNYB+QAjDGIDoQGkCGoDqQE5DHEDoQFDDBsA+QBK
DBsA+QBQDNYBqQFcDI8CGQDQARsAsQHQARsAQQB8DIUDDgAQAEoADgAUAIMADgAYAMQADgAcABMB
CAAkAKABCAAoAKUBCAAwAKUBCAA0AK4BCAA4ALMBCAA8ALgBKQCTACUCLgBbABgELgBDAPsDLgBj
ACEELgALAIoDLgATANIDLgAbAPsDLgAjAPsDLgArAPsDLgAzANIDLgA7AAEEQwBrAKUBSQCTACUC
YQCbAKUBgwCrAKUBAwGbAKUBAQKbAKUBIQKbAKUBQQKbAKUBYQKbAKUBgQKbAKUBoAKbAKUBoQKb
AKUBwAKbAKUB4AKbAKUBAAObAKUBIAObAKUBQAObAKUBYAObAKUBgAObAKUBoAObAKUBwAObAKUB
4AObAKUBAASbAKUBGgJeAqoCAgMyA04DdgN9AwIAAQADAAMABwAEAAAAgwEvAAAAAgI0AAAAJgJC
AAAAJAX1AQAALgX5AQAAPwX9AQAAsQACAgAATgX5AQAAVwX5AQIAAgADAAEABAAFAAIAAwAFAAIA
BQAHAAIAFQAJAAEAFgAJAAEAGAALAAIAFwALAAIAGQANAAEAGgANAAEAHAAPAAIAGwAPAAEAHgAR
AAIAHQARAAIAHwATAAEAIAATAOkCBIAAAAEAAACrFzpdAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEA
xQAAAAAABAAAAAAAAAAAAAAAAQDOAAAAAAAMAAAAAAAAAAAAAAAKAAkBAAAAAAwAAAAAAAAAAAAA
AAoAzAgAAAAABAAAAAAAAAAAAAAAAQB9CQAAAAAAAAAAAQAAAIQMAAAFAAQABgAEAAcABAAAAAAA
ADxNb2R1bGU+AHN0XzlmYjUzMmZlZTNiNjQ5NGE4MWM1OTYzNTA4ZDEzODQwLmRsbABSZXNvdXJj
ZXMAc3RfOWZiNTMyZmVlM2I2NDk0YTgxYzU5NjM1MDhkMTM4NDAuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAHN0XzlmYjUzMmZlZTNiNjQ5NGE4MWM1OTYzNTA4ZDEzODQwAFNjcmlwdFJl
c3VsdHMAQWxlcnRUeXBlAEFsZXJ0SW5mbwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5D
b25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5h
Z2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNl
Q3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATm90aWZpY2F0aW9u
RnJhbWV3b3JrQWxlcnRMaXN0VmFyaWFibGVOYW1lAE5vdGlmaWNhdGlvbkZyYW1ld29ya0FsZXJ0
TGlzdEFsbFZhcmlhYmxlTmFtZQBOb3RpZmljYXRpb25GcmFtZXdvcmtDb3VudGVyAE5vdGlmaWNh
dGlvbkZyYW1ld29ya1N1YkNvbXBvbmVudE5hbWUATWFpbgBVcGRhdGVBbGVydExpc3QAQWRkQWxl
cnRJbmZvAFN5c3RlbS5Db2xsZWN0aW9ucwBIYXNodGFibGUAU2V0U2V0dGluZwBHZXRTZXR0aW5n
AEdldFJ1bnRpbWVTZXR0aW5ncwBTZXRORgBXcml0ZVZhcmlhYmxlAFJlYWRWYXJpYWJsZQB2YWx1
ZV9fAFN1Y2Nlc3MARmFpbHVyZQBFcnJvckFsZXJ0AFdhcm5pbmdBbGVydABUaW1lVGhyZXNob2xk
QWxlcnQAUm93Q291bnRUaHJlc2hvbGRBbGVydABEYXRlVGltZQBnZXRfQWxlcnRDb2RlAHNldF9B
bGVydENvZGUAZ2V0X0FsZXJ0RGVzY3JpcHRpb24Ac2V0X0FsZXJ0RGVzY3JpcHRpb24AZ2V0X0Fs
ZXJ0VGltZVN0YW1wAHNldF9BbGVydFRpbWVTdGFtcABnZXRfQWxlcnRUeXBlAHNldF9BbGVydFR5
cGUAZ2V0X1NvdXJjZUlkAHNldF9Tb3VyY2VJZABnZXRfU291cmNlTmFtZQBzZXRfU291cmNlTmFt
ZQA8QWxlcnRDb2RlPmtfX0JhY2tpbmdGaWVsZAA8QWxlcnREZXNjcmlwdGlvbj5rX19CYWNraW5n
RmllbGQAPEFsZXJ0VGltZVN0YW1wPmtfX0JhY2tpbmdGaWVsZAA8QWxlcnRUeXBlPmtfX0JhY2tp
bmdGaWVsZAA8U291cmNlSWQ+a19fQmFja2luZ0ZpZWxkADxTb3VyY2VOYW1lPmtfX0JhY2tpbmdG
aWVsZABBbGVydENvZGUAQWxlcnREZXNjcmlwdGlvbgBBbGVydFRpbWVTdGFtcABTb3VyY2VJZABT
b3VyY2VOYW1lAHZhbHVlAGFsZXJ0RGVzY3JpcHRpb24AYWxlcnRDb2RlAHNvdXJjZU5hbWUAc291
cmNlSWQAYWxlcnRUeXBlAFNldHRpbmdOYW1lAFZhbHVlAHJ1bnRpbWVTZXR0aW5ncwBzZXR0aW5n
TmFtZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQB0aW1lU3RhbXAAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRN
b2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAHNldF9UYXNrUmVzdWx0AGdldF9JdGVtAFRv
U3RyaW5nAFN0cmluZwBDb25jYXQASW5kZXhPZgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZURpc3BlbnNlcgBnZXRf
VmFyaWFibGVEaXNwZW5zZXIAQ29udGFpbnMASXNOdWxsT3JFbXB0eQBJbnQzMgBUcnlQYXJzZQBF
eGNlcHRpb24AU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBTeXN0ZW0uWG1sAFN5c3RlbS5YbWwu
U2VyaWFsaXphdGlvbgBYbWxTZXJpYWxpemVyAFN5c3RlbS5JTwBTdHJpbmdXcml0ZXIAVGV4dFdy
aXRlcgBTZXJpYWxpemUAWG1sRG9jdW1lbnQAR2V0U3RyaW5nQnVpbGRlcgBMb2FkWG1sAFhtbE5v
ZGUAWG1sTm9kZUxpc3QAZ2V0X0NoaWxkTm9kZXMASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBn
ZXRfQ3VycmVudABYbWxEZWNsYXJhdGlvbgBYbWxDb21tZW50AFhtbEF0dHJpYnV0ZQBnZXRfT3V0
ZXJYbWwARW1wdHkAUmVwbGFjZQBBcHBlbmQATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBn
ZXRfSW52YXJpYW50Q3VsdHVyZQBUb1VwcGVyAFRyaW0AQ29udGFpbnNLZXkAc2V0X0l0ZW0APFBy
aXZhdGVJbXBsZW1lbnRhdGlvbkRldGFpbHM+ezVGMDZDNDhBLUQyMUEtNEMwQS05OUIxLTcxMzU4
MDI3RTk3Rn0AU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMARGljdGlvbmFyeWAyACQkbWV0aG9k
MHg2MDAwMDBiLTEAQWRkAFRyeUdldFZhbHVlAEJvb2xlYW4AVG9DaGFyQXJyYXkAU3BsaXQAU3Ry
aW5nU3BsaXRPcHRpb25zACQkbWV0aG9kMHg2MDAwMDBjLTEAQ29udmVydABUb0ludDMyAFRvQm9v
bGVhbgBFdmVudHNPYmplY3RXcmFwcGVyAGdldF9FdmVudHMAZ2V0X01lc3NhZ2UARmlyZUVycm9y
AENoYXIATG9ja0ZvcldyaXRlAFZhcmlhYmxlcwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAc2V0X1Zh
bHVlAFVubG9jawBSZXNldABMb2NrRm9yUmVhZABnZXRfVmFsdWUAU2VyaWFsaXphYmxlQXR0cmli
dXRlAGdldF9Ob3cAc3RfOWZiNTMyZmVlM2I2NDk0YTgxYzU5NjM1MDhkMTM4NDAuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAcXMAdABfADkAZgBiADUAMwAyAGYAZQBlADMAYgA2ADQA
OQA0AGEAOAAxAGMANQA5ADYAMwA1ADAAOABkADEAMwA4ADQAMAAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAA3wAAB9GAEkATABUAEUAUgBFAEQAXwBBAEwARQBSAFQA
UwAAI1MAeQBzAHQAZQBtADoAOgBFAHIAcgBvAHIAQwBvAGQAZQAAMVMAeQBzAHQAZQBtADoAOgBF
AHIAcgBvAHIARABlAHMAYwByAGkAcAB0AGkAbwBuAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIA
YwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoAUwBvAHUAcgBjAGUASQBEAAAdUwB5AHMAdABl
AG0AOgA6AEMAYQBuAGMAZQBsAAA5PABOAE8AIABBAEwARQBSAFQAIABEAEUAUwBDAFIASQBQAFQA
SQBPAE4AIABHAEkAVgBFAE4APgAAOTwATgBPACAAQQBMAEUAUgBUACAAUwBPAFUAUgBDAEUAIABO
AEEATQBFACAARwBJAFYARQBOAD4AAFl4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8A
LwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAAGt4
AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8A
MgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAATlVAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAEEAbABlAHIAdABMAGkAcwB0AABBVQBzAGUA
cgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABs
AABfIABzAGUAdAB0AGkAbgBnACAAZABvAGUAcwBuACcAdAAgAGUAeABpAHMAdAAgAGkAbgAgAHIA
dQBuAHQAaQBtAGUAIABzAGUAdAB0AGkAbgBnACAAbABpAHMAdAAuAAEjTQBBAFgAXwBOAE8AVABJ
AEYASQBDAEEAVABJAE8ATgBTAAAzRQBOAEEAQgBMAEUAXwBSAE8AVwBDAE8AVQBOAFQAXwBUAEgA
UgBFAFMASABPAEwARAAAK0UATgBBAEIATABFAF8AVABJAE0ARQBfAFQASABSAEUAUwBIAE8ATABE
AAAbUABSAEkATwBSAEkAVABZAF8ATQBPAEQARQAAGUUATQBBAEkATABfAEYATwBSAE0AQQBUAAAT
UwBNAFQAUABfAFAATwBSAFQAABdTAE0AVABQAF8AVQBTAEUAUwBTAEwAABFTAE0AVABQAF8AVQBJ
AEQAABFTAE0AVABQAF8AUABXAEQAABtTAE0AUwBfAEUATQBBAEkATABMAEkAUwBUAAAdTgBPAFQA
SQBGAFkAXwBPAE4ARQBSAFIATwBSAAAhTgBPAFQASQBGAFkAXwBPAE4AVwBBAFIATgBJAE4ARwAA
IU4ATwBUAEkARgBZAF8ATwBOAFMAVQBDAEMARQBTAFMAACNOAE8AVABJAEYAWQBfAE8ATgBDAE8A
TQBQAEwARQBUAEUAABtTAE0AUwBfAE0AQQBYAEwARQBOAEcAVABIAAARTgBGAF8AQwBIAEUAQwBL
AAAZQwBDAF8ARQBNAEEASQBMAEwASQBTAFQAABtCAEMAQwBfAEUATQBBAEkATABMAEkAUwBUAAAl
TgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBFAE0AQQBJAEwAACFOAE8AVABJAEYAWQBfAFUAUwBJ
AE4ARwBfAFMATQBTAAArTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBFAFYARQBOAFQATABPAEcA
AClOAE8AVABJAEYAWQBfAFUAUwBJAE4ARwBfAEwATwBHAEYASQBMAEUAAB9MAE8ARwBfAEYATwBM
AEQARQBSAF8AUABBAFQASAAANUQARQBMAEUAVABFAF8ATABPAEcAXwBPAEwARABFAFIAXwBUAEgA
QQBOAF8ARABBAFkAUwAAM1UAUwBFAF8AQwBVAFMAVABPAE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQ
AEwAQQBUAEUAAD1DAFUAUwBUAE8ATQBfAEUATQBBAEkATABfAFQARQBNAFAATABBAFQARQBfAEYA
SQBMAEUAUABBAFQASAAADVUAUgBHAEUATgBUAAAJVABFAFgAVAAAAQAXQwA6AFwAUwBTAEkAUwBc
AEwAbwBnAABHQwA6AFwAUwBTAEkAUwBcAEMAbwBuAGYAaQBnAFwATgBGAF8ARQBtAGEAaQBsAFQA
ZQBtAHAAbABhAHQAZQAuAGgAdABtAABNVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBO
AEYAXwBPAHQAaABlAHIAQwBvAG4AZgBpAGcAUwBlAHQAdABpAG4AZwBzAAAPRABFAEwAQQBZAEUA
RAAACUgAVABNAEwAAAM7AAADPQAAXUIASQAgAHgAUAByAGUAcwBzACAATgBvAHQAaQBmAGkAYwBh
AHQAaQBvAG4AIABGAHIAYQBtAGUAdwBvAHIAawAgAEUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIA
AE9VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMAYQB0
AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgAAJ1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMA
TgBGAF8AAACKxAZfGtIKTJmxcTWAJ+l/AAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQA
ABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBg44VQBzAGUAcgA6ADoAdgBh
AHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABAVQBzAGUAcgA6ADoAdgBh
AHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABsAE5VAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuAF8A
QwBvAHUAbgB0AGUAcgBWQgBJACAAeABQAHIAZQBzAHMAIABOAG8AdABpAGYAaQBjAGEAdABpAG8A
bgAgAEYAcgBhAG0AZQB3AG8AcgBrACAAUwBlAG4AZAAgAEEAbABlAHIAdAAJIAUBDggODhEYByAD
AQ4cEh0GIAIcDhIdBCAAEh0FIAEBEh0FIAIBDhwEIAEcDgIGCAMGERQEAAAAAAQBAAAAAwYRGAQC
AAAABAMAAAAEBAAAAAsgBgEOCA4OERgRIQMgAAgEIAEBCAMgAA4EIAEBDgQgABEhBSABAREhBCAA
ERgFIAEBERgDBhEhAygACAMoAA4EKAARIQQoABEYBgABElkRXQQgABJhBiACAQ4SYQQHARIVBSAB
ARFpCAEAAgAAAAAAAwAAAQQgABJ1BCABHBwGAAMODg4OBCABCA4EIAASfQQgAQIOBAABAg4GAAIC
DhAIDQcJEh0ODg4ODgIRGAgIIAIBElkdElkHIAIBEoCVHAUgABKAiQUgABKAoQUgABKApQMgABwF
IAIODg4GIAESgIkOAyAAAgUAAg4ODiQHDxKAiRKAiRIcEoCNEoCREoCZEoCdDg4ODg4dElkSgKUS
gLUFIAEOEhkEIAECHAUgAgEcHAgGFRKAuQIOCAcVEoC5Ag4IByACARMAEwEIIAICEwAQEwEEBwIO
CAQgAB0DBiABHQ4dAwogAx0OHQMIEYDBBAABCA4FIAASgMkIIAUCCA4ODggVBw0cDhIdHQ4OHQ4O
DhKAhR0OCA4IBQABDh0OEwcPHQ4DAwMDAwMDAx0OAwMDAwMHIAEBEBKA0QYgARKA1RwEIAEBHAYH
AhKA0QIHBwMSgNECHAQAABEhRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0XzlmYjUzMmZlZTNiNjQ5NGE4
MWM1OTYzNTA4ZDEzODQwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFEVQAAAAAAAAAAAABeVQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAUFUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAAAAAA
AAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABADpd
qxcAAAEAOl2rFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABzAHQAXwA5AGYAYgA1ADMAMgBmAGUA
ZQAzAGIANgA0ADkANABhADgAMQBjADUAOQA2ADMANQAwADgAZAAxADMAOAA0ADAAAABAAA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADUAOQAuADIAMwA4ADYANgAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwA5AGYAYgA1ADMAMgBmAGUAZQAz
AGIANgA0ADkANABhADgAMQBjADUAOQA2ADMANQAwADgAZAAxADMAOAA0ADAALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHQA
XwA5AGYAYgA1ADMAMgBmAGUAZQAzAGIANgA0ADkANABhADgAMQBjADUAOQA2ADMANQAwADgAZAAx
ADMAOAA0ADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAcwB0AF8A
OQBmAGIANQAzADIAZgBlAGUAMwBiADYANAA5ADQAYQA4ADEAYwA1ADkANgAzADUAMAA4AGQAMQAz
ADgANAAwAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAA
NQA5AC4AMgAzADgANgA2AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA2ADAANQA5AC4AMgAzADgANgA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAHA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnWarning].PrecedenceConstraints[{21951A74-A629-43C4-ABF8-F49E1AAEB015\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{21951A74-A629-43C4-ABF8-F49E1AAEB015}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{21951A74-A629-43C4-ABF8-F49E1AAEB015}"
          DTS:To="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnWarning].PrecedenceConstraints[{61F05A68-FFBB-4462-B54B-5BCA42CF4DF7\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{61F05A68-FFBB-4462-B54B-5BCA42CF4DF7}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{61F05A68-FFBB-4462-B54B-5BCA42CF4DF7}"
          DTS:To="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="217,42"
          Id="Package\Completion (Audit)\Mark Job As Complete in Job"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="256,42"
          Id="Package\Completion (Audit)\Mark Job as Complete in JobInstance"
          TopLeft="283,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="544,103"
          Size="544,146"
          Id="Package\Completion (Audit)"
          TopLeft="92.5000000000001,608.5" />
        <NodeLayout
          Size="455,42"
          Id="Package\Execute  StagingHistorySalesForce Packages\LoadTablePreStagingSalesForceContactStagingHistorySalesForceContactInitIncr"
          TopLeft="70.5,36.5" />
        <NodeLayout
          Size="540,42"
          Id="Package\Execute  StagingHistorySalesForce Packages\LoadTablePreStagingSalesForceLSAAssignmentCStagingHistorySalesForceLSAAssignmentCInitIncr"
          TopLeft="25.5,218.5" />
        <NodeLayout
          Size="518,42"
          Id="Package\Execute  StagingHistorySalesForce Packages\LoadTablePreStagingSalesForceMLISAccountCStagingHistorySalesForceMLISAccountCInitIncr"
          TopLeft="35,128.5" />
        <EdgeLayout
          Id="Package\Execute  StagingHistorySalesForce Packages.PrecedenceConstraints[Constraint]"
          TopLeft="296,78.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute  StagingHistorySalesForce Packages.PrecedenceConstraints[Constraint 1]"
          TopLeft="294.75,170.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="610,328"
          Size="610,371"
          Id="Package\Execute  StagingHistorySalesForce Packages"
          TopLeft="64.5000000000001,196.5" />
        <NodeLayout
          Size="253,47"
          Id="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information"
          TopLeft="52.7,251" />
        <NodeLayout
          Size="253,42"
          Id="Package\Initialization (Audit)\Log Environment"
          TopLeft="52.7,334" />
        <NodeLayout
          Size="253,42"
          Id="Package\Initialization (Audit)\Populate ETLUser"
          TopLeft="52.7,19" />
        <NodeLayout
          Size="253,42"
          Id="Package\Initialization (Audit)\Populate Joblog"
          TopLeft="52.7,96" />
        <NodeLayout
          Size="253,42"
          Id="Package\Initialization (Audit)\Populate new Job Instance"
          TopLeft="52.7,173" />
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint]"
          TopLeft="179.2,215">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,6.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint 1]"
          TopLeft="179.2,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint 2]"
          TopLeft="179.2,61">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint 3]"
          TopLeft="179.2,298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="False"
          PanelSize="365,396"
          Size="197,43"
          Id="Package\Initialization (Audit)"
          TopLeft="266,72.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="367,115.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,81"
              Start="0,0"
              End="0,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="367,567.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="&#xA;SaleForce Master-Package; Development Date: 26/07/2016  &#xA;Package Design By Darlington C. Nwemeh &#xA;&#xA;Overview: This Master Package is designed with the specific purpose to Execute all Packages associated with the SalesForce Project to pull records (data's) from Tables PreStaging to StagingHistory  &#xA;                 to aid in the report developments emanating from Sales-Force Platform. This data will be JOINED to other datasets to produce the LSA Assignments (LSA tied to a specific clients). &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="1072,218"
          Id="68f3e5c3-5ce8-4530-acf5-ba8f260e7f57"
          TopLeft="665.5,34.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Mark Job as a failure"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsNFObj_UpdateAlertList"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[{19388046-71D3-418C-8678-D7D7A434206D\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[{D86B7521-791E-4277-9D98-453215D5EB59\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsNFObj_SendAlert"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{04399FE2-4EC2-4415-8D92-46ADD83B3882\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{6B728A39-925F-469A-BBD7-890EA70B9C72\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{E4FA11DE-02E2-46DE-BD52-4540965DBF87\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{3E76761C-F78A-434B-AD3E-D39488AC4C3A\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{B2A62D43-247D-4AF0-99F8-C059A6C2D264\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnTaskFailed]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnTaskFailed]\SSISOpsEhObj_Task_OnTaskFailed"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnVariableValueChanged]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnVariableValueChanged].PrecedenceConstraints[{8936E647-4341-43D1-B65F-536A77667F51\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnWarning]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsNFObj_UpdateAlertList"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnWarning].PrecedenceConstraints[{21951A74-A629-43C4-ABF8-F49E1AAEB015\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnWarning].PrecedenceConstraints[{61F05A68-FFBB-4462-B54B-5BCA42CF4DF7\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>