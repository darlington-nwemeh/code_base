<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/14/2015 9:19:57 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="IT-DEV174"
  DTS:CreatorName="MLABS\dnwemeh"
  DTS:DelayValidation="True"
  DTS:DTSID="{6907DE8A-B1AE-4622-9F75-208E5E7C4949}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:ISOLevel="256"
  DTS:LastModifiedProductVersion="14.0.3008.28"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadTablePreStagingSalesForceLSAAssignmentCStagingHistorySalesForceLSAAssignmentCInitIncr"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:TransactionOption="0"
  DTS:VersionBuild="1859"
  DTS:VersionGUID="{B107A46E-BBBB-4B39-B8EC-FC1B4C0E2911}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{3CAB991D-6F12-4F97-BB11-2469E2E5C02F}"
      DTS:ObjectName="paramSSISOpsNF_From">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">ETLNotification@millenniumhealth.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{A0C5C325-1275-40A6-9A49-E0BB94EB0FF1}"
      DTS:ObjectName="paramSSISOpsNF_OnError_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{2A4EA7CF-673B-41D5-A313-28454EBC6200}"
      DTS:ObjectName="paramSSISOpsNF_OnPostExecute_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{A5F92FBE-6C57-46FC-AB96-E8D64C756261}"
      DTS:ObjectName="paramSSISOpsNF_OnWarning_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{E96CC114-5B25-456C-BDFD-92DD02100660}"
      DTS:ObjectName="paramSSISOpsNF_OtherConfigSettings">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">PRIORITY_MODE=DELAYED;EMAIL_FORMAT=HTML;SMTP_UID=;SMTP_PWD=;SMTP_PORT=465;SMTP_USESSL=True;NOTIFY_ONERROR=True;NOTIFY_ONWARNING=False;NOTIFY_ONSUCCESS=False;NOTIFY_ONCOMPLETE=False;SMS_EMAILLIST=;MAX_NOTIFICATIONS=10;ENABLE_TIME_THRESHOLD=False;ENABLE_ROWCOUNT_THRESHOLD=False;SMS_MAXLENGTH=140;FILTERED_ALERTS=;CC_EMAILLIST=;BCC_EMAILLIST=;NOTIFY_USING_EMAIL=True;NOTIFY_USING_SMS=False;NOTIFY_USING_EVENTLOG=False;NOTIFY_USING_LOGFILE=False;LOG_FOLDER_PATH=C:\SSIS\Log;USE_CUSTOM_EMAIL_TEMPLATE=False;CUSTOM_EMAIL_TEMPLATE_FILEPATH=C:\SSIS\Config\NF_EmailTemplate.htm;DELETE_LOG_OLDER_THAN_DAYS=5</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{EE78FFBC-B769-4FB9-BBD5-30FB94FF3DFE}"
      DTS:ObjectName="paramSSISOpsNF_SMTPServerName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">mail.millenniumhealth.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{196DFEE6-67CD-47AC-A736-50C348E06CCA}"
      DTS:ObjectName="paramSSISOpsNF_To">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">darlington.nwemeh@millenniumhealth.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{E50333B1-4436-4A91-A935-376415467326}"
      DTS:ObjectName="pDefaultBufferMaxRows">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">47800</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{51518D52-4EFB-4983-8FE6-51CD1740BD38}"
      DTS:ObjectName="pDefaultBufferSize">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">104857600</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{7D59BCFF-C41B-489C-8EB6-6EF54A10090B}"
      DTS:ObjectName="pEngineThreads">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">4</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="20"
      DTS:Description="Parent Job Instance Identificator"
      DTS:DTSID="{73E0F9C4-8C5E-46B0-8424-D98522F06A91}"
      DTS:ObjectName="pJobInstanceParentID">
      <DTS:Property
        DTS:DataType="20"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Source Table name"
      DTS:DTSID="{301D6FD8-C973-4B88-B32C-3B4E292938C9}"
      DTS:ObjectName="pSourceTableName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Target StagingHistory Table Name"
      DTS:DTSID="{462233B6-A300-4304-AF90-597F7AD94C4D}"
      DTS:ObjectName="pTargetTableName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">LSAAssignmentC</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{41101E53-985E-4B55-90DB-F4BF1938E49B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_AlertList">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{FD581B09-9FE5-47A6-B913-DC737B706FE7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_AlertList_All">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{9CE52C26-0145-4D0A-9836-0E3BAC3D1440}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::paramSSISOpsNF_From]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_From">
      <DTS:VariableValue
        DTS:DataType="8">ETLNotification@millenniumhealth.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{A54B2538-3944-49ED-9798-CA55316F0FCF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_Notification_Counter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{1D2897EC-DA50-4BF9-BD9C-2DEA6AC2118F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::paramSSISOpsNF_OtherConfigSettings]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_OtherConfigSettings">
      <DTS:VariableValue
        DTS:DataType="8">PRIORITY_MODE=DELAYED;EMAIL_FORMAT=HTML;SMTP_UID=;SMTP_PWD=;SMTP_PORT=465;SMTP_USESSL=True;NOTIFY_ONERROR=True;NOTIFY_ONWARNING=False;NOTIFY_ONSUCCESS=False;NOTIFY_ONCOMPLETE=False;SMS_EMAILLIST=;MAX_NOTIFICATIONS=10;ENABLE_TIME_THRESHOLD=False;ENABLE_ROWCOUNT_THRESHOLD=False;SMS_MAXLENGTH=140;FILTERED_ALERTS=;CC_EMAILLIST=;BCC_EMAILLIST=;NOTIFY_USING_EMAIL=True;NOTIFY_USING_SMS=False;NOTIFY_USING_EVENTLOG=False;NOTIFY_USING_LOGFILE=False;LOG_FOLDER_PATH=C:\SSIS\Log;USE_CUSTOM_EMAIL_TEMPLATE=False;CUSTOM_EMAIL_TEMPLATE_FILEPATH=C:\SSIS\Config\NF_EmailTemplate.htm;DELETE_LOG_OLDER_THAN_DAYS=5</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{8C942BAE-6AB1-4D78-B422-DFD1076E52E2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::paramSSISOpsNF_SMTPServerName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_SMTPServerName">
      <DTS:VariableValue
        DTS:DataType="8">mail.millenniumhealth.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{1432A63D-06EC-4595-98DF-E70B9894A247}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::paramSSISOpsNF_To]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_To">
      <DTS:VariableValue
        DTS:DataType="8">darlington.nwemeh@millenniumhealth.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{DCBF7953-2DA1-404D-9905-6BCC9DF1C79A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{5D1E9EC5-B37E-41CF-A4AF-C07D470806CC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{E0675A60-6E2A-428E-BA67-5FE89C3EFDE8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{1728DA75-272F-4AF3-BBB5-1184780A5939}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{561E7267-1868-4B62-A11F-426E7D9BCE40}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls execution of all event handlers for BIxPress Auditing Framework. Set this variable to True or -1 if you want to disable auditing framework related code inside all eventhandlers. You may also have to set Package.LoggingMode=2 along with this variable if you want to disable framework completely."
      DTS:DTSID="{EB44B451-717D-4D6D-8C25-2A8C67A79B2F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::paramSSISOps_DisableBIxAuditing]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_DisableBIxAuditing">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1A819522-19C0-4837-B014-6C1E0BCD5D7E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vAuditDateTime"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3D650137-5802-4655-BF51-7756C0CA33D6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vCreateAllIndexSQL"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E14985D-AC98-48AB-96C4-5D7E51D22D04}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vCurJobID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6093BA0D-B8E8-4E64-B988-B3E7E9B60936}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vCurJobInstanceID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">474</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6C856FDC-74D0-4197-A312-07095C789996}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vCurUserID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{967F4C58-95AB-4985-B71A-61AE85E27CC7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vDeletedRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8854C724-9B4A-4EEE-9DC2-ADBCB52A3857}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vDeletedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3086BFEC-B5F4-4C1F-87FF-132962D0F096}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vDropAllIndexSQL"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2D427BC1-C19E-4262-BC68-A8D8CEDA693E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vEnvironmentTEXT"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3806F60-67FB-4166-9DA5-8D0F4E4CD7BC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vFileCreatedDate"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">2/26/2015 9:07:02 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{57F81F3C-6C12-457C-9F91-0C1319AB984B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vFileLastModifiedDate"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">2/26/2015 9:07:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D8D74C5C-D5BB-4708-8C5C-00F333A6FE9E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vFileList"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC8D115B-7527-467F-B23E-00482031B21F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vFileTypeExtension"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8">.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{17D5F719-7DB9-4B57-82F3-0AB70F1D9D7E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vInsertedRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0083920E-7804-49B6-86F7-D3AB3AEC6664}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vInsertedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D19B157D-94BF-4AC2-94A2-E78270DFF062}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vJobInstanceSourceID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6D43BB78-7F9B-45F6-8F54-3239FCEA3AAB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vLastExecutionDate"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">6/22/2015 12:39:44 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FD3FACA1-F682-4817-A3EB-1FB7BCEBA96D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vLastRecordsProcessedDate"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">8/17/2015 3:03:34 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{401E7741-27C1-49C7-BCCF-530ADCF2E04D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_STR, 4, 1252) DATEPART(&quot;yyyy&quot;, @[System::StartTime]) + &quot;-&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mm&quot;, @[System::StartTime]), 2) + &quot;-&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;dd&quot;, @[System::StartTime]), 2) + &quot; &quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;hh&quot;, @[System::StartTime]), 2) + &quot;:&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mi&quot;, @[System::StartTime]), 2) + &quot;:&quot; +&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;ss&quot;, @[System::StartTime]), 2) + &quot;.&quot; +&#xA;RIGHT(&quot;000&quot; + (DT_STR, 3, 1252) DATEPART(&quot;ms&quot;, @[System::StartTime]), 3)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vPackageStartDate">
      <DTS:VariableValue
        DTS:DataType="8">2025-01-13 14:25:58.000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3410D090-877D-4391-B044-5CC21BC98090}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vProcessedRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{529BA927-D587-4AC9-8EFD-D1B420C67E53}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vProcessingFileCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4669C380-3153-4720-A498-FE58331D4314}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vProcessingFileFullPathName"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF4E595B-EEFF-46DB-B84C-341D6F63083C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vProcessingFileName"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4D732CF1-26BC-42B1-B440-7FEC14629940}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vRejectedRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1AFF0F51-99A9-45D8-95BE-5B7AA8CC651E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vRejectedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20B2A05F-6B9A-4CB4-A5EC-A99D9422EDF1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::pSchemaName] +&quot;.&quot;+@[$Package::pTargetTableName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSchemaTableName">
      <DTS:VariableValue
        DTS:DataType="8">SalesForce.LSAAssignmentC</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D7DEFCA1-F06B-4D1F-AC6D-A1CA305A7C2A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::pSourceServer]+&quot;.&quot;+ @[$Project::pSourceDatabase]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSourceServerDatabase">
      <DTS:VariableValue
        DTS:DataType="8">MHEDW-DEV.Prestaging</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F949B1C2-728F-4E88-BD1B-82780966CC04}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;WITH CTE AS(SELECT RN = ROW_NUMBER()OVER(PARTITION BY Id, Hashbyte ORDER BY Id, Hashbyte, SystemModStamp ,AuditJobInstanceSourceIDInit) FROM &quot; + @[User::vSchemaTableName] + &quot;)&#xA; DELETE FROM CTE WHERE RN &gt;1&#xA;&#xA;SELECT @@ROWCOUNT AS DeletedRows&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLDeleteDuplicates">
      <DTS:VariableValue
        DTS:DataType="8">WITH CTE AS(SELECT RN = ROW_NUMBER()OVER(PARTITION BY Id, Hashbyte ORDER BY Id, Hashbyte, SystemModStamp ,AuditJobInstanceSourceIDInit) FROM SalesForce.LSAAssignmentC)
 DELETE FROM CTE WHERE RN &gt;1

SELECT @@ROWCOUNT AS DeletedRows</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5B0F4AB-00D6-42E5-90A5-13ED07DE851F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT    c.Id&#xA;        , c.MLISAccountC&#xA;        , c.ContactC&#xA;        , c.Name&#xA;        , c.PracticeStartDateC&#xA;        , c.PracticeTerminationDateC&#xA;        , c.LSAStatusC&#xA;        , c.IsDeleted&#xA;        , c.CreatedDate&#xA;        , c.SystemModStamp&#xA;        , c.HashByte&#xA;        , c.AuditJobInstanceSourceIDInit AS JobInstanceSourceID&#xA;FROM      PreStaging.SalesForce.LSAAssignmentC C&#xA;LEFT JOIN StagingHistory.SalesForce.LSAAssignmentC M &#xA;ON        m.Id = c.Id&#xA;AND       m.HashByte = c.HashByte     &#xA;WHERE     m.Id IS NULL &quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLLSAAssignmentCStatement">
      <DTS:VariableValue
        DTS:DataType="8">SELECT    c.Id
        , c.MLISAccountC
        , c.ContactC
        , c.Name
        , c.PracticeStartDateC
        , c.PracticeTerminationDateC
        , c.LSAStatusC
        , c.IsDeleted
        , c.CreatedDate
        , c.SystemModStamp
        , c.HashByte
        , c.AuditJobInstanceSourceIDInit AS JobInstanceSourceID
FROM      PreStaging.SalesForce.LSAAssignmentC C
LEFT JOIN StagingHistory.SalesForce.LSAAssignmentC M 
ON        m.Id = c.Id
AND       m.HashByte = c.HashByte     
WHERE     m.Id IS NULL </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4C99192F-1CC3-4906-B141-35887984F22A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT  Id&#xA;      , MLISAccountC&#xA;      , ContactC&#xA;      , Name&#xA;      , PracticeStartDateC&#xA;      , PracticeTerminationDateC&#xA;      , LSAStatusC&#xA;      , IsDeleted&#xA;      , CreatedDate&#xA;      , SystemModStamp&#xA;&#x9;  , HashByte&#xA;  FROM  PreStaging.SalesForce.LSAAssignmentC&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLSelectPreStagingRecords">
      <DTS:VariableValue
        DTS:DataType="8">SELECT  Id
      , MLISAccountC
      , ContactC
      , Name
      , PracticeStartDateC
      , PracticeTerminationDateC
      , LSAStatusC
      , IsDeleted
      , CreatedDate
      , SystemModStamp
	  , HashByte
  FROM  PreStaging.SalesForce.LSAAssignmentC</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9DC3E881-391E-4A4C-9032-CD386D573760}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;TRUNCATE TABLE &quot; + @[$Project::pSchemaName] +&quot;.&quot;+@[$Package::pTargetTableName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLTruncateTargetTable">
      <DTS:VariableValue
        DTS:DataType="8">TRUNCATE TABLE SalesForce.LSAAssignmentC</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C854303B-B95E-47EA-ABE2-AC3B9C550E4B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vTargetTableCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{015EFFC5-65ED-48BB-8778-93DE9D4E6183}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vUpdatedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">6,22,PipelineInitialization,18,OnPipelineRowsSent,24,OnPipelinePrePrimeOutput,25,OnPipelinePostPrimeOutput,24,OnPipelinePreEndOfRowset,25,OnPipelinePostEndOfRowset</DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="PipelineInitialization"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Completion Initial Load(Audit)"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{6762A3E9-FA48-4BC1-836D-35B4703F7EFB}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Completion Initial Load(Audit)">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Completion Initial Load(Audit)\Mark Job As Complete in Job"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{B2C9596D-F8C4-4AE9-84BE-88B5A4AFF161}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Job As Complete in Job"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="&#xA;DECLARE @LastRecordsProcessedOnDate DATETIME&#xA;DECLARE @InsertTotalRowCounts INT&#xA;DECLARE @UpdatedTotalRowCounts INT&#xA;DECLARE @TotalRows INT&#xA;&#xA;SET @InsertTotalRowCounts = ?&#xA;SET @UpdatedTotalRowCounts = ?&#xA;&#xA;SET @TotalRows = @InsertTotalRowCounts + @UpdatedTotalRowCounts&#xA;&#xA;IF @TotalRows &gt; 0&#xA;BEGIN&#xA;&#xA;SET @LastRecordsProcessedOnDate = ( SELECT  DATEADD(dd, -1, MAX(SystemModStamp))&#xA;FROM   StagingHistory.SalesForce.LSAAssignmentC&#xA;WHERE SystemModStamp&lt; GETDATE())&#xA;&#xA;UPDATE [Audit].[Job] &#xA;SET  LastRunStartDate = ?,&#xA;  LastRunEndDate = GETDATE(), &#xA;  ExpectedRunTimeNUMBER = DATEDIFF(MS, ?, GETDATE()),&#xA;  JobLastStatus = 'Pass',&#xA;  LastRecordsProcessedDate = @LastRecordsProcessedOnDate&#xA; WHERE JobID = ?&#xA;&#xA;END&#xA;ELSE&#xA;BEGIN &#xA;&#xA;UPDATE [Audit].[Job] &#xA;SET  LastRunStartDate = ?,&#xA;  LastRunEndDate = GETDATE(), &#xA;  ExpectedRunTimeNUMBER = DATEDIFF(MS, ?, GETDATE()),&#xA;  JobLastStatus = 'Pass'&#xA; WHERE JobID = ?&#xA;&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vInsertedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vUpdatedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Completion Initial Load(Audit)\Mark Job as Complete in JobInstance"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{8EFB6D50-3D12-4281-BBD1-95EF9F4B9EC7}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Job as Complete in JobInstance"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="EXEC [Audit].[log_JobInstance] &#xA;@JobInstanceID = ?,&#xA;@RowCreatedNumber = ?, &#xA;@RowUpdatedNumber = ?, &#xA;@RowDeletedNumber = ?, &#xA;@RowRejectedNumber=?, &#xA;@JobSuccessIND = 'S',&#xA;@JobCompleteDTS = 'Today';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vInsertedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vUpdatedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::vDeletedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::vRejectedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Determine if Init vs Incr load"
      DTS:CreationName="SSIS.ReplacementTask"
      DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:DTSID="{BA4B8F72-EF54-4626-B486-071CBB8FD138}"
      DTS:ExecutableType="SSIS.ReplacementTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Determine if Init vs Incr load"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CA874F74-21A5-433F-BA21-98A8EF6F4CF5}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @TableName sysname, @TargetTableCount BIGINT&#xA;SET @TableName = 'SalesForce.LSAAssignmentC'&#xA;&#xA;SELECT ddps.row_count as TargetTableCount&#xA;FROM sys.objects so&#xA;&#x9;JOIN sys.indexes si &#xA;&#x9;&#x9;ON si.OBJECT_ID = so.OBJECT_ID&#xA;&#x9;JOIN sys.dm_db_partition_stats AS ddps &#xA;&#x9;&#x9;ON si.OBJECT_ID = ddps.OBJECT_ID  AND si.index_id = ddps.index_id&#xA;WHERE so.object_id = OBJECT_ID(@TableName)&#xA;AND si.index_id &lt; 2  &#xA;AND so.is_ms_shipped = 0; &#xA;&#xA;SELECT ? = Convert(DateTime2, sysdatetime(),121); &#xA;"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="TargetTableCount"
            SQLTask:DtsVariableName="User::vTargetTableCount" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::vAuditDateTime"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get LastRecordsProcessedDate for Package"
      DTS:CreationName="SSIS.ReplacementTask"
      DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:DTSID="{FE0C65AD-8B79-4C85-85AF-CC4A4D3E1C73}"
      DTS:ExecutableType="SSIS.ReplacementTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get LastRecordsProcessedDate for Package"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
          SQLTask:SqlStatementSource="DECLARE @LastRecordsProcessedDate DATETIME&#xA;&#xA;SELECT @LastRecordsProcessedDate = ISNULL(LastRecordsProcessedDate, '1900-01-01')&#xA; FROM Audit.Job&#xA;WHERE JobID = ?&#xA;&#xA;SELECT @LastRecordsProcessedDate AS [LastRecordsProcessedDate]"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="LastRecordsProcessedDate"
            SQLTask:DtsVariableName="User::vLastRecordsProcessedDate" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::vCurJobID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Incremental load MLISAssignmentC into StagingHistory"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{0CC0FEF7-4FFE-44B8-BEEB-D4280FCE624E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Incremental load MLISAssignmentC into StagingHistory">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Incremental load MLISAssignmentC into StagingHistory\Incremental Load"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DelayValidation="True"
          DTS:Description="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Incremental Load"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              defaultBufferMaxRows="47800"
              defaultBufferSize="104857600"
              engineThreads="4"
              version="1">
              <components>
                <component
                  componentClassID="DTSTransform.DerivedColumn.3"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add Audit Column 2"
                  usesDispositions="true"
                  id="2">
                  <inputs>
                    <input
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input"
                      id="3">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="3"
                      id="4">
                      <outputColumns>
                        <outputColumn
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="5"
                          name="AuditJobInstanceSourceIDInit"
                          truncationRowDisposition="FailComponent"
                          id="5">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression"
                              id="6">@[User::vJobInstanceSourceID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression"
                              id="7">@[User::vJobInstanceSourceID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="8"
                          name="AuditJobInstanceSourceIDIncr"
                          truncationRowDisposition="FailComponent"
                          id="8">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression"
                              id="9">@[User::vJobInstanceSourceID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression"
                              id="10">@[User::vJobInstanceSourceID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          dataType="dbTimeStamp2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="11"
                          name="AuditCreatedDTS"
                          scale="3"
                          truncationRowDisposition="FailComponent"
                          id="11">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression"
                              id="12">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression"
                              id="13">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          dataType="dbTimeStamp2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="14"
                          name="AuditModifiedDTS"
                          scale="3"
                          truncationRowDisposition="FailComponent"
                          id="14">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression"
                              id="15">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression"
                              id="16">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="3"
                      id="17">
                      <outputColumns>
                        <outputColumn
                          dataType="i4"
                          lineageId="18"
                          name="ErrorCode"
                          specialFlags="1"
                          id="18" />
                        <outputColumn
                          dataType="i4"
                          lineageId="19"
                          name="ErrorColumn"
                          specialFlags="2"
                          id="19" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSTransform.DerivedColumn.3"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add JobInstanceID Column"
                  usesDispositions="true"
                  id="20">
                  <inputs>
                    <input
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input"
                      id="21">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="21"
                      id="22">
                      <outputColumns>
                        <outputColumn
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="23"
                          name="JobInstanceID"
                          truncationRowDisposition="FailComponent"
                          id="23">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression"
                              id="24">@[User::vCurJobInstanceID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression"
                              id="25">@[User::vCurJobInstanceID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="26"
                          name="RowNumber"
                          truncationRowDisposition="FailComponent"
                          id="26">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression"
                              id="27">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression"
                              id="28">1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="21"
                      id="29">
                      <outputColumns>
                        <outputColumn
                          dataType="i4"
                          lineageId="30"
                          name="ErrorCode"
                          specialFlags="1"
                          id="30" />
                        <outputColumn
                          dataType="i4"
                          lineageId="31"
                          name="ErrorColumn"
                          specialFlags="2"
                          id="31" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Concatenate Columns"
                  version="6"
                  id="32">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata"
                      id="33">
                      <arrayElements
                        arrayElementCount="20">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using Microsoft.SqlServer.Dts.Pipeline;
using System.Text;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private int ColumnCount;
    private ColumnClass[] ColumnNameArray;
    private PipelineBuffer inputBuffer;


    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    private class ColumnClass
    {
        public int Index;
        public string Name;
    }

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */



        ColumnCount = ComponentMetaData.InputCollection[0].InputColumnCollection.Count;
        ColumnNameArray = new ColumnClass[ColumnCount];

        int[] ColumnIndexes = GetColumnIndexes(ComponentMetaData.InputCollection[0].ID);
        int columnIndex = 0;

        foreach (IDTSInputColumn100 item in ComponentMetaData.InputCollection[0].InputColumnCollection)
        {
            ColumnNameArray[columnIndex] = new ColumnClass();
            ColumnNameArray[columnIndex].Name = Convert.ToString(item.Name);
            ColumnNameArray[columnIndex].Index = ColumnIndexes[ComponentMetaData.InputCollection[0].InputColumnCollection.GetObjectIndexByID(item.ID)];
            columnIndex++;
        }

        Array.Sort(
            ColumnNameArray,
            delegate(ColumnClass column1, ColumnClass column2)
            { return column1.Index.CompareTo(column2.Index); }
        );

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>

    public override void ProcessInput(int InputID, Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer Buffer)
    {
        inputBuffer = Buffer;

        base.ProcessInput(InputID, Buffer);
    }


    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        StringBuilder RawDataTEXT = new StringBuilder(ColumnCount);

        for (int columnIndex = 0; columnIndex < ColumnCount; columnIndex++)
        {
            RawDataTEXT.Append(ColumnNameArray[columnIndex].Name + "=");
            RawDataTEXT.Append(Convert.ToString(inputBuffer[ColumnNameArray[columnIndex].Index]));
            RawDataTEXT.Append(";");
        }

        Row.RawDataTEXT.AddBlobData(System.Text.Encoding.GetEncoding(1252).GetBytes(RawDataTEXT.ToString()));

    }

}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 EODErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool EODErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 EODErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool EODErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String EODErrorDescription
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool EODErrorDescription_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String EODComponentName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool EODComponentName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String EODColumnName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool EODColumnName_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public BlobColumn RawDataTEXT
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[5]];
        }
        set
        {
            this[5] = value;
        }
    }
    public bool RawDataTEXT_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f4e89ce516434bf59e7741926fc60477.Properties.Settings.get_Default():SC_f4e89ce516434bf59e7741926fc60477.Properties.Sett" +
    "ings")]

namespace SC_f4e89ce516434bf59e7741926fc60477.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f4e89ce516434bf59e7741926fc60477.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f4e89ce516434bf59e7741926fc60477.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f4e89ce516434bf59e7741926fc60477.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f4e89ce516434bf59e7741926fc60477.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f4e89ce516434bf59e7741926fc60477.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_f4e89ce516434bf59e7741926fc60477</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_f4e89ce516434bf59e7741926fc60477</msb:DisplayName>
		<msb:ProjectId>{56ABEC40-297B-466B-BFB2-0A485BA7563F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_f4e89ce516434bf59e7741926fc60477.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f4e89ce516434bf59e7741926fc60477")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f4e89ce516434bf59e7741926fc60477")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f4e89ce516434bf59e7741926fc60477.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{3784153b-cbdc-4665-b729-23679d72af16}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_f4e89ce516434bf59e7741926fc60477</RootNamespace><AssemblyName>SC_DCC87FD4CC8E488FAC035A4C6319C8D6</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_f4e89ce516434bf59e7741926fc60477" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata"
                      id="34">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_DCC87FD4CC8E488FAC035A4C6319C8D6.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHomolcAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAArjwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFg8AABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBwAAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
PAAAAAAAAEgAAAACAAUAECUAAEgXAAABAAAAAAAAAFgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMdAAAGfQEAAAQCAnMeAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzDAAABm8DAAAGKkorBwIDbwQAAAYDbxsAAAYt8SoGKkoC
fAcAAAQDewcAAAQoEgAACioAAAAbMAQANQEAAAEAABECKBMAAAoCAigUAAAKbxUAAAoWjBsAAAFv
FgAACm8XAAAKbxgAAAp9AwAABAICewMAAASNBAAAAn0EAAAEAgIoFAAACm8VAAAKFowbAAABbxYA
AApvGQAACigPAAAKChYLAigUAAAKbxUAAAoWjBsAAAFvFgAACm8XAAAKbxoAAAoNK2oJbxsAAAp0
IQAAAQwCewQAAAQHcwsAAAaiAnsEAAAEB5oIbxwAAAooHQAACn0IAAAEAnsEAAAEB5oGAigUAAAK
bxUAAAoWjBsAAAFvFgAACm8XAAAKCG8eAAAKbx8AAAqUfQcAAAQHF1gLCW8gAAAKLY7eFAl1IwAA
ARMEEQQsBxEEbyEAAArcAnsEAAAEfgYAAAQtERT+BgoAAAZzIgAACoAGAAAEfgYAAAQoAQAAKyoA
AAABEAAAAgCCAHb4ABQAAAAAHgIoJAAACipCAgR9BQAABAIDBCglAAAKKgAAABMwBACMAAAAAgAA
EQJ7AwAABHMmAAAKChYLK1IGAnsEAAAEB5p7CAAABHIRAABwKCcAAApvKAAACiYGAnsFAAAEAnsE
AAAEB5p7BwAABG8pAAAKKCoAAApvKAAACiYGchUAAHBvKAAACiYHF1gLBwJ7AwAABDKlA28XAAAG
IOQEAAAoKwAACgZvLAAACm8tAAAKby4AAAoqHgIoAQAABioeAigvAAAKKioCAwQFKDAAAAoqUgJ7
MQAACgJ7MgAAChaUbzMAAAoqIgIWKDQAAAoqUgJ7MQAACgJ7MgAACheUbzMAAAoqIgIXKDQAAAoq
UgJ7MQAACgJ7MgAAChiUbzUAAAoqIgIYKDQAAAoqUgJ7MQAACgJ7MgAAChmUbzUAAAoqIgIZKDQA
AAoqUgJ7MQAACgJ7MgAAChqUbzUAAAoqIgIaKDQAAAoqZgJ7MQAACgJ7MgAAChuUbykAAAp0BwAA
ASomAhsDKDYAAAoqIgIbKDQAAAoqWgMsCAIbKDcAAAoqchkAAHBzOAAACnoeAig5AAAKKh4CKDoA
AAoqOgIoLwAACgIDfQkAAAQqOgIoLwAACgIDfQoAAAQqHgIoLwAACioAEzACAC0AAAADAAARfgsA
AAQtIHK2AABw0AgAAAIoPAAACm89AAAKcz4AAAoKBoALAAAEfgsAAAQqGn4MAAAEKh4CgAwAAAQq
Gn4NAAAEKi5zJAAABoANAAAEKh4CKEAAAAoqALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAA
djQuMC4zMDMxOQAAAAAFAGwAAAAMCAAAI34AAHgIAAAwCwAAI1N0cmluZ3MAAAAAqBMAACgBAAAj
VVMA0BQAABAAAAAjR1VJRAAAAOAUAABoAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJCwAAAPolMwAW
AAABAAAALQAAAAkAAAANAAAAJQAAABMAAABAAAAAEQAAAAMAAAADAAAADwAAABIAAAABAAAAAQAA
AAUAAAABAAAAAQAAAAEAAAAAAAoAAQAAAAAABgD6ANkACgAaARMBBgAhAdkADgBDAS4BEgCCAdkA
BgCRAdkAEgAKA9kACgB4BGcECgCpBJQECgCCBWgFCgCtBZsFCgDEBZsFCgDhBZsFCgAABpsFCgAZ
BpsFCgAyBpsFCgBNBpsFCgBoBpsFCgCBBpsFCgC6BpoGCgDaBpoGCgAcBxMBCgAjBxMBBgBMB9kA
CgCUBxMBCgDIB5oGCgDjBxMBFgBACBcIFgBvCBcIFgCaCBcIFgCwCBcICgALCfgIFgAxCRcICgBN
CRMBCgB6CRMBCgCOCRMBCgClCZkJCgDBCZkJCgAWChMBCgBDCjAKCgBgChMBCgBlChMBCgCJCpsF
DgC1Cp8KDgDOCp8KAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAADAAUAAwAQ
AEsAAAAJAAcACwABABAAVwAAAA0ACQAMAAEAEABkAAAACQAJAB0AAQAQAHAAAAAJAAoAHgAAABAA
egCEAAkACwAfAAABEACzAIQAEQANACMABgBkABMABgBwABcAAQDXAS8AAQDjATIAAQDzATcAEQCh
B9oABgAWAi8ABgAcAkIAAQBXBHwAAQBXBHwAEQCIBIYAEQC1BIoAEQD5BKgAUCAAAAAAhhhbARsA
AQBwIAAAAADGAJ8BHwABAJUgAAAAAMYBrAEpAAUAqCAAAAAAxgHAASkABgDAIAAAAADGAP8BGwAH
ABQiAAAAAMYACgIbAAcAHCIAAAAAxgCfATsABwAwIgAAAADGAMABKQAJAMgiAAAAAIYYWwEbAAoA
qiAAAAAAkQBzB9IACgDQIgAAAACGGFsBGwAMANgiAAAAAIYYWwFFAAwA4yIAAAAAhgghAk8ADwD4
IgAAAACGCDICUwAPAAEjAAAAAIYISgJPAA8AFiMAAAAAhghdAlMADwAfIwAAAACGCHcCVwAPADQj
AAAAAIYIjwJTAA8APSMAAAAAhgiuAlcADwBSIwAAAACGCMMCUwAPAFsjAAAAAIYI3wJXAA8AcCMA
AAAAhgjxAlMADwB5IwAAAACGCBUDWwAPAJMjAAAAAIYIJQNgAA8AnSMAAAAAhgg1A1MAEACmIwAA
AACGCEwDZgAQAL0jAAAAAIYAYwNTABEAxSMAAAAAhgBrA1MAEQDNIwAAAACGGFsBgAARANwjAAAA
AIYYWwGAABIA6yMAAAAAgxhbARsAEwD0IwAAAACTCMUEjgATAC0kAAAAAJMI2QSTABMANCQAAAAA
kwjlBJgAEwA8JAAAAACWCAkFrAAUAE8kAAAAAIYYWwEbABQAQyQAAAAAkRjjCqsBFAAAAAEAHQUA
AAIAJQUAAAMALwUAAAQANgUAAAEALwUAAAEAQAUAAAEAHQUAAAIALwUAAAEAQAUAAAEAhAcAAAIA
jAcAAAEALwUAAAIARAUAAAMANgUAAAEAWAUAAAEAWAUAAAEAXgUAAAEAXgUAAAEAWAVRAFsBtgBZ
AFsBtgBhAFsBtgBpAFsBtgBxAFsBtgB5AFsBtgCBAFsBtgCJAFsBtgCRAFsBtgCZAFsBtgChAFsB
uwCpAFsBGwAJAFsBGwCxADQHwAAJADsHxwDBAFsBGwDRAFsBGwDZAOkH4gAJAP8BGwAJAFkI5wDh
AIYI7ADpAKcI8QDxAM0I9wD5AOcITwDxAPEITwD5ABcJ/AABASUJAgEJAUQJVwARAVUJBgEJAfEI
TwD5AF4J4gABAXEJUwAZAYYJGwAMAFsBEgEhAZQJGAEJAAoCGwAJAJ8BOwApAVsBuwCxALMJOgEp
AboJQAEpAKcIRwERAVUJTAExAcoJUQERAFUJVwAxAdYJWAE5AN8JXgERAFsBGwAZAFsBRQAZAC8F
NwAZAEQFawEpAOsJ4gAZAPQJbwEpAPsJdAEZAAUKeQEZAA4KuwA5AVsBtgAZAGMDUwAZAGsDUwBB
AVsBGwBJAXcKfwFJAZIKiAFBAFsBjgFhAVsBmwEhAFsBGwAuABMA9wEuAGMARgIuAAsArwEuABsA
IAIuACMAIAIuACsAIAIuADMA9wEuADsAJgIuAEMAIAIuAFsAPQJjAIMAzQDBAIsAzQADAdsBzQBA
AYsAzQChAYsAzQCpAfsBogHJAfsBogErAWQBlgEFAAEACAANAAkADwAAAHcDawAAAIQDbwAAAJgD
awAAAKcDbwAAAL0DcwAAANEDbwAAAOwDcwAAAP0DbwAAABUEcwAAACMEbwAAADgEdwAAAEQEbwAA
AHgEngAAAPEEowAAABUFsQACAA0AAwACAA4ABQACAA8ABwACABAACQACABEACwACABIADQACABMA
DwACABQAEQACABUAEwACABYAFQACABcAFwABABgAFwABABoAGQACABkAGQACACAAGwACACEAHQAB
ACIAHQACACMAHwALAQSAAAABAAAAqxf9QAAAAAAAAPgGAAAMAAAAAAAAAAAAAAABALwAAAAAAAQA
AAAAAAAAAAAAAAoACgEAAAAABAAAAAAAAAAAAAAACgATAQAAAAAMAAAAAAAAAAAAAAABAGEBAAAA
AAwAAAAAAAAAAAAAAAEA8wcAAAAAAAAAAAEAAADqCgAABAADAEcAJgEAAAA8TW9kdWxlPgBTQ19E
Q0M4N0ZENENDOEU0ODhGQUMwMzVBNEM2MzE5QzhENi5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRN
YWluAENvbHVtbkNsYXNzAElucHV0MEJ1ZmZlcgBDb25uZWN0aW9ucwBWYXJpYWJsZXMAUmVzb3Vy
Y2VzAFNDX2Y0ZTg5Y2U1MTY0MzRiZjU5ZTc3NDE5MjZmYzYwNDc3LlByb3BlcnRpZXMAU2V0dGlu
Z3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5Q
aXBlbGluZQBTY3JpcHRDb21wb25lbnQAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTY3JpcHRCdWZm
ZXIAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UALmN0b3IATWlj
cm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1h
cABQcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93
AENvbHVtbkNvdW50AENvbHVtbk5hbWVBcnJheQBpbnB1dEJ1ZmZlcgBQcmVFeGVjdXRlAFBvc3RF
eGVjdXRlAEluZGV4AE5hbWUAZ2V0X0VPREVycm9yQ29kZQBnZXRfRU9ERXJyb3JDb2RlX0lzTnVs
bABnZXRfRU9ERXJyb3JDb2x1bW4AZ2V0X0VPREVycm9yQ29sdW1uX0lzTnVsbABnZXRfRU9ERXJy
b3JEZXNjcmlwdGlvbgBnZXRfRU9ERXJyb3JEZXNjcmlwdGlvbl9Jc051bGwAZ2V0X0VPRENvbXBv
bmVudE5hbWUAZ2V0X0VPRENvbXBvbmVudE5hbWVfSXNOdWxsAGdldF9FT0RDb2x1bW5OYW1lAGdl
dF9FT0RDb2x1bW5OYW1lX0lzTnVsbABCbG9iQ29sdW1uAGdldF9SYXdEYXRhVEVYVABzZXRfUmF3
RGF0YVRFWFQAZ2V0X1Jhd0RhdGFURVhUX0lzTnVsbABzZXRfUmF3RGF0YVRFWFRfSXNOdWxsAE5l
eHRSb3cARW5kT2ZSb3dzZXQARU9ERXJyb3JDb2RlAEVPREVycm9yQ29kZV9Jc051bGwARU9ERXJy
b3JDb2x1bW4ARU9ERXJyb3JDb2x1bW5fSXNOdWxsAEVPREVycm9yRGVzY3JpcHRpb24ARU9ERXJy
b3JEZXNjcmlwdGlvbl9Jc051bGwARU9EQ29tcG9uZW50TmFtZQBFT0RDb21wb25lbnROYW1lX0lz
TnVsbABFT0RDb2x1bW5OYW1lAEVPRENvbHVtbk5hbWVfSXNOdWxsAFJhd0RhdGFURVhUAFJhd0Rh
dGFURVhUX0lzTnVsbABQYXJlbnRDb21wb25lbnQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1h
bmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3Vy
Y2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3Vs
dHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFt
ZQBCdWZmZXIAT3V0cHV0TWFwAFJvdwBCdWZmZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVu
dABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0
ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFz
c2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAU0NfRENDODdGRDRDQzhFNDg4RkFDMDM1QTRDNjMxOUM4RDYAU3RyaW5nAFN0cmluZ0NvbXBh
cmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9p
bnRBdHRyaWJ1dGUAPFByZUV4ZWN1dGU+Yl9fMABjb2x1bW4xAGNvbHVtbjIAQ29tcGFyaXNvbmAx
AENTJDw+OV9fQ2FjaGVkQW5vbnltb3VzTWV0aG9kRGVsZWdhdGUxAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAEludDMyAENvbXBhcmVUbwBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5l
V3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAElEVFNDb21wb25l
bnRNZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEASURUU0lucHV0Q29sbGVjdGlvbjEw
MABnZXRfSW5wdXRDb2xsZWN0aW9uAElEVFNJbnB1dDEwMABnZXRfSXRlbQBJRFRTSW5wdXRDb2x1
bW5Db2xsZWN0aW9uMTAwAGdldF9JbnB1dENvbHVtbkNvbGxlY3Rpb24AZ2V0X0NvdW50AGdldF9J
RABTeXN0ZW0uQ29sbGVjdGlvbnMASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVu
dABJRFRTSW5wdXRDb2x1bW4xMDAAZ2V0X05hbWUAQ29udmVydABUb1N0cmluZwBHZXRPYmplY3RJ
bmRleEJ5SUQATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBBcnJheQBTb3J0AFN5c3RlbS5U
ZXh0AFN0cmluZ0J1aWxkZXIAQ29uY2F0AEFwcGVuZABFbmNvZGluZwBHZXRFbmNvZGluZwBHZXRC
eXRlcwBBZGRCbG9iRGF0YQBHZXRJbnQzMgBJc051bGwAR2V0U3RyaW5nAHNldF9JdGVtAFNldE51
bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAC5jY3RvcgBTQ19mNGU4OWNlNTE2
NDM0YmY1OWU3NzQxOTI2ZmM2MDQ3Ny5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAA
AA9JAG4AcAB1AHQAIAAwAAADPQAAAzsAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkA
IABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBp
AGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMA
dABlAGEAZAAuAABxUwBDAF8AZgA0AGUAOAA5AGMAZQA1ADEANgA0ADMANABiAGYANQA5AGUANwA3
ADQAMQA5ADIANgBmAGMANgAwADQANwA3AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAUdyTsZWTNRIFRYgSvN0KYAAiJhF3NgIDMkQi3elxWGTTgiQMGEhgDBhIcAyAA
AQkgBAEIDhIVEhkFIAEBEhQCBggEBh0SEAMGEhUGIAIBCBIVAgYOCSADARIVHQgSGQMgAAgDIAAC
AyAADgQgABIdBSABARIdBCABAQIDKAAIAygAAgMoAA4EKAASHQMGEgUFIAEBEgUDBhIhAwYSJQQA
ABIhBAAAEiUFAAEBEiUECAASIQQIABIlAwYSJAQAABIkBAgAEiQEIAEBDgQgAQEIBiACAg4RXQUg
AR0ICAQBAAAABwACCBIQEhAHBhUSZQESEAQgAQgIBCAAEnEEIAASdQUgARJ5HAQgABJ9BSAAEoCB
AyAAHAQAAQ4OBhUSZQESEAUgAgEcGA0QAQIBHR4AFRJlAR4ABAoBEhAOBwUdCAgSgIUSgIESgI0F
AAIODg4GIAESgJUOBCABHAgEAAEOHAYAARKAmQgFIAEdBQ4FIAEBHQUGBwISgJUIAwYdCAQgAQII
BCABDggFIAIBCBwIAAESgKURgKkFIAASgK0HIAIBDhKArQQHARIhBiABARGAtQgBAAIAAAAAAAMA
AAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
EC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfZjRlODljZTUxNjQzNGJmNTllNzc0MTkyNmZjNjA0NzcA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQAAAIA8AAAAAAAAAAAAAJ48AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQ
PAAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAP1AqxcAAAEA/UCrFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0
AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBmADQA
ZQA4ADkAYwBlADUAMQA2ADQAMwA0AGIAZgA1ADkAZQA3ADcANAAxADkAMgA2AGYAYwA2ADAANAA3
ADcAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADUAOQAuADEA
NgA2ADMANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBEAEMAQwA4
ADcARgBEADQAQwBDADgARQA0ADgAOABGAEEAQwAwADMANQBBADQAQwA2ADMAMQA5AEMAOABEADYA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADEANAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAEMAXwBEAEMAQwA4ADcARgBEADQAQwBDADgARQA0ADgAOABGAEEAQwAwADMANQBB
ADQAQwA2ADMAMQA5AEMAOABEADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBDAF8AZgA0AGUAOAA5AGMAZQA1ADEANgA0ADMANABiAGYANQA5AGUANwA3ADQAMQA5
ADIANgBmAGMANgAwADQANwA3AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA2ADAANQA5AC4AMQA2ADYAMwA3AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAANQA5AC4AMQA2ADYAMwA3AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAALA8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE"
                      id="35">SC_dcc87fd4cc8e488fac035a4c6319c8d6</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      id="36">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      id="37"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      id="38"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE"
                      id="39">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE"
                      id="40">9e9152f2114713771ef9ee9335d9d931</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName"
                      id="41">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <inputs>
                    <input
                      hasSideEffects="true"
                      name="Input 0"
                      id="42">
                      <inputColumns>
                        <inputColumn
                          cachedDataType="i4"
                          cachedName="EOD_ErrorCode"
                          lineageId="226"
                          id="43" />
                        <inputColumn
                          cachedDataType="i4"
                          cachedName="EOD_ErrorColumn"
                          lineageId="227"
                          id="44" />
                        <inputColumn
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="EOD_ErrorDescription"
                          lineageId="228"
                          id="45" />
                        <inputColumn
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="EOD_ComponentName"
                          lineageId="229"
                          id="46" />
                        <inputColumn
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="EOD_ColumnName"
                          lineageId="230"
                          id="47" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Output 0"
                      synchronousInputId="42"
                      id="48">
                      <outputColumns>
                        <outputColumn
                          codePage="1252"
                          dataType="text"
                          lineageId="49"
                          name="RawDataTEXT"
                          id="49" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="SSISOps : DON'T CHANGE PREFIX. "
                  name="DEST Insert Redirected row to ExceptionData Table"
                  id="50">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName"
                      id="51">User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1</property>
                  </properties>
                  <inputs>
                    <input
                      hasSideEffects="true"
                      name="Row Count Input 1"
                      id="52">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Row Count Output 1"
                      synchronousInputId="52"
                      id="53">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="SSISOps : DON'T CHANGE PREFIX. "
                  name="DEST OLE DB Destination"
                  id="54">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName"
                      id="55">User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2</property>
                  </properties>
                  <inputs>
                    <input
                      hasSideEffects="true"
                      name="Row Count Input 1"
                      id="56">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Row Count Output 1"
                      synchronousInputId="56"
                      id="57">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSAdapter.OLEDBDestination.3"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Redirected row to ExceptionData Table"
                  usesDispositions="true"
                  version="4"
                  id="58">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout"
                      id="59">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"
                      id="60">[Audit].[ExceptionData]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"
                      id="61"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      id="62"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage"
                      id="63">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage"
                      id="64">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode"
                      id="65">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity"
                      id="66">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls"
                      id="67">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"
                      id="68">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize"
                      id="69">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      connectionManagerID="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
                      connectionManagerRefId="Project.ConnectionManagers[OLEDB_ETLAudit]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection"
                      id="70" />
                  </connections>
                  <inputs>
                    <input
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input"
                      id="71">
                      <inputColumns>
                        <inputColumn
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="RawDataTEXT"
                          externalMetadataColumnId="78"
                          lineageId="49"
                          id="72" />
                        <inputColumn
                          cachedDataType="i8"
                          cachedName="JobInstanceID"
                          externalMetadataColumnId="76"
                          lineageId="23"
                          id="73" />
                        <inputColumn
                          cachedDataType="i4"
                          cachedName="RowNumber"
                          externalMetadataColumnId="77"
                          lineageId="26"
                          id="74" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          dataType="i8"
                          name="ExceptionDataID"
                          id="75" />
                        <externalMetadataColumn
                          dataType="i8"
                          name="JobInstanceID"
                          id="76" />
                        <externalMetadataColumn
                          dataType="i4"
                          name="RowNumber"
                          id="77" />
                        <externalMetadataColumn
                          codePage="1252"
                          dataType="text"
                          name="RawDataTEXT"
                          id="78" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="71"
                      id="79">
                      <outputColumns>
                        <outputColumn
                          dataType="i4"
                          lineageId="80"
                          name="ErrorCode"
                          specialFlags="1"
                          id="80" />
                        <outputColumn
                          dataType="i4"
                          lineageId="81"
                          name="ErrorColumn"
                          specialFlags="2"
                          id="81" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSAdapter.OLEDBDestination.3"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4"
                  id="82">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout"
                      id="83">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"
                      id="84">[Xifin].[TestXRefs]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"
                      id="85">User::vSchemaTableName</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      id="86"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage"
                      id="87">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage"
                      id="88">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode"
                      id="89">4</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity"
                      id="90">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls"
                      id="91">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"
                      id="92">CHECK_CONSTRAINTS,ROWS_PER_BATCH = 10000</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize"
                      id="93">100000</property>
                  </properties>
                  <connections>
                    <connection
                      connectionManagerID="{CA874F74-21A5-433F-BA21-98A8EF6F4CF5}"
                      connectionManagerRefId="Project.ConnectionManagers[OLEDB_Target]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection"
                      id="94" />
                  </connections>
                  <inputs>
                    <input
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input"
                      id="95">
                      <inputColumns>
                        <inputColumn
                          cachedDataType="i8"
                          cachedName="AuditJobInstanceSourceIDInit"
                          externalMetadataColumnId="111"
                          lineageId="5"
                          id="96" />
                        <inputColumn
                          cachedDataType="i8"
                          cachedName="AuditJobInstanceSourceIDIncr"
                          externalMetadataColumnId="112"
                          lineageId="8"
                          id="97" />
                        <inputColumn
                          cachedDataType="bytes"
                          cachedLength="32"
                          cachedName="HashByte"
                          externalMetadataColumnId="115"
                          lineageId="152"
                          id="98" />
                        <inputColumn
                          cachedDataType="dbTimeStamp2"
                          cachedName="AuditCreatedDTS"
                          cachedScale="3"
                          externalMetadataColumnId="113"
                          lineageId="11"
                          id="99" />
                        <inputColumn
                          cachedDataType="dbTimeStamp2"
                          cachedName="AuditModifiedDTS"
                          cachedScale="3"
                          externalMetadataColumnId="114"
                          lineageId="14"
                          id="100" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="18"
                          cachedName="Id"
                          externalMetadataColumnId="116"
                          lineageId="142"
                          id="101" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="18"
                          cachedName="MLISAccountC"
                          externalMetadataColumnId="117"
                          lineageId="143"
                          id="102" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="18"
                          cachedName="ContactC"
                          externalMetadataColumnId="118"
                          lineageId="144"
                          id="103" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="80"
                          cachedName="Name"
                          externalMetadataColumnId="119"
                          lineageId="145"
                          id="104" />
                        <inputColumn
                          cachedDataType="dbDate"
                          cachedName="PracticeStartDateC"
                          externalMetadataColumnId="120"
                          lineageId="146"
                          id="105" />
                        <inputColumn
                          cachedDataType="dbDate"
                          cachedName="PracticeTerminationDateC"
                          externalMetadataColumnId="121"
                          lineageId="147"
                          id="106" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LSAStatusC"
                          externalMetadataColumnId="122"
                          lineageId="148"
                          id="107" />
                        <inputColumn
                          cachedDataType="bool"
                          cachedName="IsDeleted"
                          externalMetadataColumnId="123"
                          lineageId="149"
                          id="108" />
                        <inputColumn
                          cachedDataType="dbTimeStamp"
                          cachedName="CreatedDate"
                          externalMetadataColumnId="124"
                          lineageId="150"
                          id="109" />
                        <inputColumn
                          cachedDataType="dbTimeStamp"
                          cachedName="SystemModStamp"
                          externalMetadataColumnId="125"
                          lineageId="151"
                          id="110" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          dataType="i8"
                          name="AuditJobInstanceSourceIDInit"
                          id="111" />
                        <externalMetadataColumn
                          dataType="i8"
                          name="AuditJobInstanceSourceIDIncr"
                          id="112" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="AuditCreatedDTS"
                          id="113" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="AuditModifiedDTS"
                          id="114" />
                        <externalMetadataColumn
                          dataType="bytes"
                          length="32"
                          name="HashByte"
                          id="115" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="Id"
                          id="116" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="MLISAccountC"
                          id="117" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="ContactC"
                          id="118" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="80"
                          name="Name"
                          id="119" />
                        <externalMetadataColumn
                          dataType="dbDate"
                          name="PracticeStartDateC"
                          id="120" />
                        <externalMetadataColumn
                          dataType="dbDate"
                          name="PracticeTerminationDateC"
                          id="121" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="255"
                          name="LSAStatusC"
                          id="122" />
                        <externalMetadataColumn
                          dataType="bool"
                          name="IsDeleted"
                          id="123" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="CreatedDate"
                          id="124" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="SystemModStamp"
                          id="125" />
                        <externalMetadataColumn
                          dataType="i4"
                          name="LSAAssignmentId"
                          id="126" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="95"
                      id="127">
                      <outputColumns>
                        <outputColumn
                          dataType="i4"
                          lineageId="128"
                          name="ErrorCode"
                          specialFlags="1"
                          id="128" />
                        <outputColumn
                          dataType="i4"
                          lineageId="129"
                          name="ErrorColumn"
                          specialFlags="2"
                          id="129" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSAdapter.OLEDBSource.3"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="7"
                  id="130">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout"
                      id="131">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"
                      id="132"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"
                      id="133"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      id="134"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"
                      id="135">User::vSQLLSAAssignmentCStatement</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage"
                      id="136">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage"
                      id="137">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode"
                      id="138">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"
                      id="139"></property>
                  </properties>
                  <connections>
                    <connection
                      connectionManagerID="{EB73B2D6-B547-4F3A-B1CF-4FFD77458068}"
                      connectionManagerRefId="Project.ConnectionManagers[OLEDB_Source]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection"
                      id="140" />
                  </connections>
                  <outputs>
                    <output
                      name="OLE DB Source Output"
                      id="141">
                      <outputColumns>
                        <outputColumn
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="154"
                          length="18"
                          lineageId="142"
                          name="Id"
                          truncationRowDisposition="FailComponent"
                          id="142" />
                        <outputColumn
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="155"
                          length="18"
                          lineageId="143"
                          name="MLISAccountC"
                          truncationRowDisposition="FailComponent"
                          id="143" />
                        <outputColumn
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="156"
                          length="18"
                          lineageId="144"
                          name="ContactC"
                          truncationRowDisposition="FailComponent"
                          id="144" />
                        <outputColumn
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="157"
                          length="80"
                          lineageId="145"
                          name="Name"
                          truncationRowDisposition="FailComponent"
                          id="145" />
                        <outputColumn
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="158"
                          lineageId="146"
                          name="PracticeStartDateC"
                          truncationRowDisposition="FailComponent"
                          id="146" />
                        <outputColumn
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="159"
                          lineageId="147"
                          name="PracticeTerminationDateC"
                          truncationRowDisposition="FailComponent"
                          id="147" />
                        <outputColumn
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="160"
                          length="255"
                          lineageId="148"
                          name="LSAStatusC"
                          truncationRowDisposition="FailComponent"
                          id="148" />
                        <outputColumn
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="161"
                          lineageId="149"
                          name="IsDeleted"
                          truncationRowDisposition="FailComponent"
                          id="149" />
                        <outputColumn
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="162"
                          lineageId="150"
                          name="CreatedDate"
                          truncationRowDisposition="FailComponent"
                          id="150" />
                        <outputColumn
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="163"
                          lineageId="151"
                          name="SystemModStamp"
                          truncationRowDisposition="FailComponent"
                          id="151" />
                        <outputColumn
                          dataType="bytes"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="164"
                          length="32"
                          lineageId="152"
                          name="HashByte"
                          truncationRowDisposition="FailComponent"
                          id="152" />
                        <outputColumn
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="165"
                          lineageId="153"
                          name="JobInstanceSourceID"
                          truncationRowDisposition="FailComponent"
                          id="153" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="Id"
                          id="154" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="MLISAccountC"
                          id="155" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="ContactC"
                          id="156" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="80"
                          name="Name"
                          id="157" />
                        <externalMetadataColumn
                          dataType="dbDate"
                          name="PracticeStartDateC"
                          id="158" />
                        <externalMetadataColumn
                          dataType="dbDate"
                          name="PracticeTerminationDateC"
                          id="159" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="255"
                          name="LSAStatusC"
                          id="160" />
                        <externalMetadataColumn
                          dataType="bool"
                          name="IsDeleted"
                          id="161" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="CreatedDate"
                          id="162" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="SystemModStamp"
                          id="163" />
                        <externalMetadataColumn
                          dataType="bytes"
                          length="32"
                          name="HashByte"
                          id="164" />
                        <externalMetadataColumn
                          dataType="i8"
                          name="JobInstanceSourceID"
                          id="165" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      isErrorOut="true"
                      name="OLE DB Source Error Output"
                      id="166">
                      <outputColumns>
                        <outputColumn
                          dataType="wstr"
                          length="18"
                          lineageId="167"
                          name="Id"
                          id="167" />
                        <outputColumn
                          dataType="wstr"
                          length="18"
                          lineageId="168"
                          name="MLISAccountC"
                          id="168" />
                        <outputColumn
                          dataType="wstr"
                          length="18"
                          lineageId="169"
                          name="ContactC"
                          id="169" />
                        <outputColumn
                          dataType="wstr"
                          length="80"
                          lineageId="170"
                          name="Name"
                          id="170" />
                        <outputColumn
                          dataType="dbDate"
                          lineageId="171"
                          name="PracticeStartDateC"
                          id="171" />
                        <outputColumn
                          dataType="dbDate"
                          lineageId="172"
                          name="PracticeTerminationDateC"
                          id="172" />
                        <outputColumn
                          dataType="wstr"
                          length="255"
                          lineageId="173"
                          name="LSAStatusC"
                          id="173" />
                        <outputColumn
                          dataType="bool"
                          lineageId="174"
                          name="IsDeleted"
                          id="174" />
                        <outputColumn
                          dataType="dbTimeStamp"
                          lineageId="175"
                          name="CreatedDate"
                          id="175" />
                        <outputColumn
                          dataType="dbTimeStamp"
                          lineageId="176"
                          name="SystemModStamp"
                          id="176" />
                        <outputColumn
                          dataType="bytes"
                          length="32"
                          lineageId="177"
                          name="HashByte"
                          id="177" />
                        <outputColumn
                          dataType="i8"
                          lineageId="178"
                          name="JobInstanceSourceID"
                          id="178" />
                        <outputColumn
                          dataType="i4"
                          lineageId="179"
                          name="ErrorCode"
                          specialFlags="1"
                          id="179" />
                        <outputColumn
                          dataType="i4"
                          lineageId="180"
                          name="ErrorColumn"
                          specialFlags="2"
                          id="180" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count"
                  id="181">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName"
                      id="182">User::vInsertedTotalRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      hasSideEffects="true"
                      name="Row Count Input 1"
                      id="183">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Row Count Output 1"
                      synchronousInputId="183"
                      id="184">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count vRejectedTotalRowCount"
                  id="185">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName"
                      id="186">User::vRejectedTotalRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      hasSideEffects="true"
                      name="Row Count Input 1"
                      id="187">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Row Count Output 1"
                      synchronousInputId="187"
                      id="188">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="SSISOps : DON'T CHANGE PREFIX. "
                  name="SRC OLE DB Source"
                  id="189">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName"
                      id="190">User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3</property>
                  </properties>
                  <inputs>
                    <input
                      hasSideEffects="true"
                      name="Row Count Input 1"
                      id="191">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Row Count Output 1"
                      synchronousInputId="191"
                      id="192">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  name="TF Error Output Description"
                  version="1"
                  id="193">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      name="Input Lineage ID"
                      id="194">#5:AuditJobInstanceSourceIDInit:DT_I8:0;#8:AuditJobInstanceSourceIDIncr:DT_I8:0;#11:AuditCreatedDTS:DT_DBTIMESTAMP2:0;#14:AuditModifiedDTS:DT_DBTIMESTAMP2:0;#18:ErrorCode:DT_I4:0;#19:ErrorColumn:DT_I4:0;#23:JobInstanceID:DT_I8:0;#26:RowNumber:DT_I4:0;#30:ErrorCode:DT_I4:0;#31:ErrorColumn:DT_I4:0;#43:EOD_ErrorCode:DT_I4:0;#44:EOD_ErrorColumn:DT_I4:0;#45:EOD_ErrorDescription:DT_STR:500;#46:EOD_ComponentName:DT_STR:100;#47:EOD_ColumnName:DT_STR:100;#49:RawDataTEXT:DT_TEXT:0;#72:RawDataTEXT:DT_TEXT:0;#73:JobInstanceID:DT_I8:0;#74:RowNumber:DT_I4:0;#80:ErrorCode:DT_I4:0;#81:ErrorColumn:DT_I4:0;#96:AuditJobInstanceSourceIDInit:DT_I8:0;#97:AuditJobInstanceSourceIDIncr:DT_I8:0;#98:HashByte:DT_BYTES:32;#99:AuditCreatedDTS:DT_DBTIMESTAMP2:0;#100:AuditModifiedDTS:DT_DBTIMESTAMP2:0;#101:Id:DT_WSTR:18;#102:MLISAccountC:DT_WSTR:18;#103:ContactC:DT_WSTR:18;#104:Name:DT_WSTR:80;#105:PracticeStartDateC:DT_DBDATE:0;#106:PracticeTerminationDateC:DT_DBDATE:0;#107:LSAStatusC:DT_WSTR:255;#108:IsDeleted:DT_BOOL:0;#109:CreatedDate:DT_DBTIMESTAMP:0;#110:SystemModStamp:DT_DBTIMESTAMP:0;#128:ErrorCode:DT_I4:0;#129:ErrorColumn:DT_I4:0;#142:Id:DT_WSTR:18;#143:MLISAccountC:DT_WSTR:18;#144:ContactC:DT_WSTR:18;#145:Name:DT_WSTR:80;#146:PracticeStartDateC:DT_DBDATE:0;#147:PracticeTerminationDateC:DT_DBDATE:0;#148:LSAStatusC:DT_WSTR:255;#149:IsDeleted:DT_BOOL:0;#150:CreatedDate:DT_DBTIMESTAMP:0;#151:SystemModStamp:DT_DBTIMESTAMP:0;#152:HashByte:DT_BYTES:32;#153:JobInstanceSourceID:DT_I8:0;#167:Id:DT_WSTR:18;#168:MLISAccountC:DT_WSTR:18;#169:ContactC:DT_WSTR:18;#170:Name:DT_WSTR:80;#171:PracticeStartDateC:DT_DBDATE:0;#172:PracticeTerminationDateC:DT_DBDATE:0;#173:LSAStatusC:DT_WSTR:255;#174:IsDeleted:DT_BOOL:0;#175:CreatedDate:DT_DBTIMESTAMP:0;#176:SystemModStamp:DT_DBTIMESTAMP:0;#177:HashByte:DT_BYTES:32;#178:JobInstanceSourceID:DT_I8:0;#179:ErrorCode:DT_I4:0;#180:ErrorColumn:DT_I4:0;#226:EOD_ErrorCode:DT_I4:0;#227:EOD_ErrorColumn:DT_I4:0;#228:EOD_ErrorDescription:DT_STR:500;#229:EOD_ComponentName:DT_STR:100;#230:EOD_ColumnName:DT_STR:100;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      name="Virtual Input Columns"
                      id="195">-2147482142:#5:AuditJobInstanceSourceIDInit:Add Audit Column 2:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:AuditJobInstanceSourceIDInit:20:0:0:0:0;-2147482121:#8:AuditJobInstanceSourceIDIncr:Add Audit Column 2:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:AuditJobInstanceSourceIDIncr:20:0:0:0:0;-2147482098:#128:ErrorCode:OLE DB Destination:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:ErrorCode:3:0:0:0:0;-2147482077:#129:ErrorColumn:OLE DB Destination:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:ErrorColumn:3:0:0:0:0;-2147482040:#11:AuditCreatedDTS:Add Audit Column 2:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:AuditCreatedDTS:304:0:0:3:0;-2147482019:#14:AuditModifiedDTS:Add Audit Column 2:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:AuditModifiedDTS:304:0:0:3:0;-2147481794:#142:Id:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:Id:130:18:0:0:0;-2147481793:#143:MLISAccountC:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:MLISAccountC:130:18:0:0:0;-2147481792:#144:ContactC:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:ContactC:130:18:0:0:0;-2147481791:#145:Name:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:Name:130:80:0:0:0;-2147481790:#146:PracticeStartDateC:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:PracticeStartDateC:133:0:0:0:0;-2147481789:#147:PracticeTerminationDateC:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:PracticeTerminationDateC:133:0:0:0:0;-2147481788:#148:LSAStatusC:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:LSAStatusC:130:255:0:0:0;-2147481787:#149:IsDeleted:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:IsDeleted:11:0:0:0:0;-2147481786:#150:CreatedDate:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:CreatedDate:135:0:0:0:0;-2147481785:#151:SystemModStamp:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:SystemModStamp:135:0:0:0:0;-2147481784:#152:HashByte:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:HashByte:128:32:0:0:0;-2147481783:#153:JobInstanceSourceID:OLE DB Source:#205:Error Input 421 - 'Error Input 0':False:#-1:#-1:JobInstanceSourceID:20:0:0:0:0;</property>
                    <property
                      dataType="System.Boolean"
                      name="Show warning"
                      id="196">false</property>
                    <property
                      dataType="System.Boolean"
                      name="Add Error Code"
                      id="197">true</property>
                    <property
                      dataType="System.Boolean"
                      name="Add Error Column"
                      id="198">true</property>
                    <property
                      dataType="System.Boolean"
                      name="Add Error Description"
                      id="199">true</property>
                    <property
                      dataType="System.Boolean"
                      name="Add Component Name"
                      id="200">true</property>
                    <property
                      dataType="System.Boolean"
                      name="Add Column Name"
                      id="201">true</property>
                    <property
                      dataType="System.Boolean"
                      name="Add Column Type"
                      id="202">false</property>
                    <property
                      dataType="System.Boolean"
                      name="Add Column Length"
                      id="203">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName"
                      id="204">PW.TaskFactory.ErrorOutputDescription.ErrorOutputDescription, PW.TaskFactory120, Version=1.0.0.0, Culture=neutral, PublicKeyToken=47acf905d0337c39</property>
                  </properties>
                  <inputs>
                    <input
                      name="Error Input 421 - 'Error Input 0'"
                      id="205">
                      <inputColumns>
                        <inputColumn
                          cachedDataType="i8"
                          cachedName="JobInstanceSourceID"
                          lineageId="153"
                          id="206" />
                        <inputColumn
                          cachedDataType="bytes"
                          cachedLength="32"
                          cachedName="HashByte"
                          lineageId="152"
                          id="207" />
                        <inputColumn
                          cachedDataType="i8"
                          cachedName="AuditJobInstanceSourceIDInit"
                          lineageId="5"
                          id="208" />
                        <inputColumn
                          cachedDataType="i8"
                          cachedName="AuditJobInstanceSourceIDIncr"
                          lineageId="8"
                          id="209" />
                        <inputColumn
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="128"
                          id="210" />
                        <inputColumn
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="129"
                          id="211" />
                        <inputColumn
                          cachedDataType="dbTimeStamp2"
                          cachedName="AuditCreatedDTS"
                          cachedScale="3"
                          lineageId="11"
                          id="212" />
                        <inputColumn
                          cachedDataType="dbTimeStamp2"
                          cachedName="AuditModifiedDTS"
                          cachedScale="3"
                          lineageId="14"
                          id="213" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="18"
                          cachedName="Id"
                          lineageId="142"
                          id="214" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="18"
                          cachedName="MLISAccountC"
                          lineageId="143"
                          id="215" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="18"
                          cachedName="ContactC"
                          lineageId="144"
                          id="216" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="80"
                          cachedName="Name"
                          lineageId="145"
                          id="217" />
                        <inputColumn
                          cachedDataType="dbDate"
                          cachedName="PracticeStartDateC"
                          lineageId="146"
                          id="218" />
                        <inputColumn
                          cachedDataType="dbDate"
                          cachedName="PracticeTerminationDateC"
                          lineageId="147"
                          id="219" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LSAStatusC"
                          lineageId="148"
                          id="220" />
                        <inputColumn
                          cachedDataType="bool"
                          cachedName="IsDeleted"
                          lineageId="149"
                          id="221" />
                        <inputColumn
                          cachedDataType="dbTimeStamp"
                          cachedName="CreatedDate"
                          lineageId="150"
                          id="222" />
                        <inputColumn
                          cachedDataType="dbTimeStamp"
                          cachedName="SystemModStamp"
                          lineageId="151"
                          id="223" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      dangling="true"
                      name="Error Input"
                      id="224">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Error Description Output"
                      id="225">
                      <outputColumns>
                        <outputColumn
                          dataType="i4"
                          lineageId="226"
                          name="EOD_ErrorCode"
                          id="226" />
                        <outputColumn
                          dataType="i4"
                          lineageId="227"
                          name="EOD_ErrorColumn"
                          id="227" />
                        <outputColumn
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="228"
                          name="EOD_ErrorDescription"
                          id="228" />
                        <outputColumn
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="229"
                          name="EOD_ComponentName"
                          id="229" />
                        <outputColumn
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="230"
                          name="EOD_ColumnName"
                          id="230" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  endId="187"
                  name="Derived Column Output"
                  startId="22"
                  id="231" />
                <path
                  endId="183"
                  name="Derived Column Output"
                  startId="4"
                  id="232" />
                <path
                  endId="42"
                  name="Error Description Output"
                  startId="225"
                  id="233" />
                <path
                  endId="205"
                  name="OLE DB Destination Error Output"
                  startId="127"
                  id="234" />
                <path
                  endId="191"
                  name="OLE DB Source Output"
                  startId="141"
                  id="235" />
                <path
                  endId="21"
                  name="Output 0"
                  startId="48"
                  id="236" />
                <path
                  endId="56"
                  name="Row Count Output 1"
                  startId="184"
                  id="237" />
                <path
                  endId="52"
                  name="Row Count Output 2"
                  startId="188"
                  id="238" />
                <path
                  endId="71"
                  name="Row Count Output 2"
                  startId="53"
                  id="239" />
                <path
                  endId="95"
                  name="Row Count Output 3"
                  startId="57"
                  id="240" />
                <path
                  endId="3"
                  name="Row Count Output 3"
                  startId="192"
                  id="241" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Init load MLISAssignmentC  into Prestaging"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Init load MLISAssignmentC  into Prestaging">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Init load MLISAssignmentC  into Prestaging\Create Index"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{AEB0CA8D-395B-4846-8C7A-8FA782D2185E}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Index"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{CA874F74-21A5-433F-BA21-98A8EF6F4CF5}" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Init load MLISAssignmentC  into Prestaging\Detect index and prepare drop and create index script"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{88468C27-9598-42E7-8B43-1EFC833F9183}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Detect index and prepare drop and create index script"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="DECLARE&#xA; @IncludeFileGroup bit = 1,&#xA; @IncludeDrop bit = 1,&#xA; @IncludeFillFactor bit = 0&#xA;&#xA;DECLARE @sTableName VARCHAR(150) = ?&#xA;DECLARE @sIndexDesc varchar(MAX)&#xA;DECLARE @sCreateSql varchar(MAX)&#xA;DECLARE @sDropSql varchar(MAX)&#xA;DECLARE @sCreateAllSql varchar(MAX) = ''&#xA;DECLARE @sDropAllSql varchar(MAX) = ''&#xA; &#xA;--- Get all existing indexes, but NOT the primary keys&#xA; DECLARE Indexes_cursor CURSOR&#xA; FOR SELECT&#xA; SC.Name AS SchemaName&#xA; , SO.Name AS TableName&#xA; , SI.Object_Id AS TableId&#xA; , SI.[Name] AS IndexName&#xA; , SI.Index_ID AS IndexId&#xA; , SI.type_desc AS IndexType&#xA; , FG.[Name] AS FileGroupName&#xA; , CASE WHEN SI.Fill_Factor = 0 THEN 100 ELSE SI.Fill_Factor END Fill_Factor&#xA; ,SI.is_primary_key&#xA; FROM sys.indexes SI&#xA; LEFT JOIN sys.filegroups FG&#xA; ON SI.data_space_id = FG.data_space_id&#xA; INNER JOIN sys.objects SO&#xA; ON SI.object_id = SO.object_id&#xA; INNER JOIN sys.schemas SC&#xA; ON SC.schema_id = SO.schema_id&#xA; WHERE ObjectProperty(SI.Object_Id, 'IsUserTable') = 1&#xA; AND SI.[Name] IS NOT NULL&#xA; --AND SI.is_primary_key = 0&#xA; AND SI.is_unique_constraint = 0&#xA; AND IndexProperty(SI.Object_Id, SI.[Name], 'IsStatistics') = 0&#xA; AND SC.name + '.' + SO.name = @sTableName&#xA; ORDER BY Object_name(SI.Object_Id), SI.Index_ID&#xA; &#xA;DECLARE @SchemaName sysname&#xA; DECLARE @TableName sysname&#xA; DECLARE @TableId int&#xA; DECLARE @IndexType SYSNAME&#xA; DECLARE @IndexName sysname&#xA; DECLARE @FileGroupName sysname&#xA; DECLARE @IndexId int&#xA; DECLARE @FillFactor int&#xA; DECLARE @IsPrimaryKey BIT&#xA; &#xA;DECLARE @NewLine varchar(4000) SET @NewLine = CHAR(13) + CHAR(10)&#xA; DECLARE @Tab varchar(4000) SET @Tab = Space(4)&#xA; &#xA;-- Loop through all indexes&#xA; OPEN Indexes_cursor&#xA; &#xA;FETCH NEXT&#xA; FROM Indexes_cursor&#xA; INTO @SchemaName, @TableName, @TableId, @IndexName,&#xA; @IndexId, @IndexType, @FileGroupName, @FillFactor, @IsPrimaryKey&#xA; &#xA;WHILE (@@Fetch_Status = 0)&#xA; BEGIN&#xA; &#xA; IF (@IsPrimaryKey = 0)&#xA; BEGIN&#xA;  SET @sIndexDesc = '-- Index ' + @IndexName + ' on table ' + @TableName&#xA;  SET @sDropSql = 'IF EXISTS (SELECT 1' + @NewLine&#xA;  + ' FROM sysindexes si' + @NewLine&#xA;  + ' INNER JOIN sysobjects so' + @NewLine&#xA;  + ' ON so.id = si.id' + @NewLine&#xA;  + ' WHERE si.[Name] = ''' + @IndexName + ''' -- Index Name' + @NewLine&#xA;  + ' AND so.[Name] = ''' + @TableName + ''') -- Table Name' + @NewLine&#xA;  + 'BEGIN' + @NewLine&#xA;  + ' DROP INDEX [' + @IndexName + '] ON'&#xA;  + '[' + @SchemaName + '].[' + @TableName + ']' + @NewLine&#xA;  + 'END' + @NewLine&#xA; &#xA;  SET @sCreateSql = 'CREATE'&#xA; &#xA;  -- Check if the index is unique&#xA;  IF (IndexProperty(@TableId, @IndexName, ' IsUnique') = 1)&#xA;  BEGIN&#xA;  SET @sCreateSql = @sCreateSql + ' UNIQUE'&#xA;  END&#xA;&#xA;  -- Check if the index is clustered&#xA;  IF (IndexProperty(@TableId, @IndexName, ' IsClustered') = 1)&#xA;  BEGIN&#xA;  SET @sCreateSql = @sCreateSql + ' CLUSTERED'&#xA;  END&#xA;&#xA; &#xA;  SET @sCreateSql = @sCreateSql + ' INDEX [' + @IndexName + ']&#xA;  ON [' + @SchemaName + '].[' + @TableName + ']' + @NewLine + '(' + @NewLine&#xA; END&#xA;&#xA; ELSE&#xA; BEGIN&#xA;  SET @sDropSql = 'ALTER TABLE ' + @SchemaName + '.'+ @TableName + ' DROP CONSTRAINT ' + @IndexName&#xA;&#xA;  SET @sCreateSql = ''&#xA;  SET @sCreateSql = @sCreateSql + 'ALTER TABLE ' + @SchemaName + '.' + @TableName +  + ' ADD CONSTRAINT ' + @IndexName + ' PRIMARY KEY '&#xA;&#xA;  IF (@IndexType = 'NONCLUSTERED')&#xA;  BEGIN&#xA;   SET @sCreateSql = @sCreateSql + ' NONCLUSTERED'&#xA;  END&#xA;&#xA;  SET @sCreateSql = @sCreateSql + '(' &#xA; END&#xA;&#xA;  -- Get all columns of the index&#xA;  DECLARE IndexColumns_cursor CURSOR&#xA;  FOR SELECT SC.[Name],&#xA;  IC.[is_included_column],&#xA;  IC.is_descending_key&#xA;  FROM sys.index_columns IC&#xA;  INNER JOIN sys.columns SC&#xA;  ON IC.Object_Id = SC.Object_Id&#xA;  AND IC.Column_ID = SC.Column_ID&#xA;  WHERE IC.Object_Id = @TableId&#xA;  AND Index_ID = @IndexId&#xA;  ORDER BY IC.key_ordinal&#xA; &#xA;  DECLARE @IxColumn sysname&#xA;  DECLARE @IxIncl bit&#xA;  DECLARE @Desc bit&#xA;  DECLARE @IxIsIncl bit SET @IxIsIncl = 0&#xA;  DECLARE @IxFirstColumn bit SET @IxFirstColumn = 1&#xA; &#xA;  -- Loop through all columns of the index and append them to the CREATE statement&#xA;  OPEN IndexColumns_cursor&#xA;   FETCH NEXT&#xA;   FROM IndexColumns_cursor&#xA;   INTO @IxColumn, @IxIncl, @Desc&#xA; &#xA;  WHILE (@@Fetch_Status = 0)&#xA;  BEGIN&#xA;   IF (@IxFirstColumn = 1)&#xA;   BEGIN&#xA;    SET @IxFirstColumn = 0&#xA;   END&#xA;   ELSE&#xA;   BEGIN&#xA;    --check to see if it's an included column&#xA;    IF (@IxIsIncl = 0) AND (@IxIncl = 1)&#xA;    BEGIN&#xA;     SET @IxIsIncl = 1&#xA;     SET @sCreateSql = @sCreateSql + @NewLine + ')' +&#xA;      @NewLine + 'INCLUDE' + @NewLine + '(' + @NewLine&#xA;    END&#xA;    ELSE&#xA;    BEGIN&#xA;     SET @sCreateSql = @sCreateSql + ',' + @NewLine&#xA;    END&#xA;    --END IF&#xA;   END&#xA;  --END IF&#xA; &#xA;   SET @sCreateSql = @sCreateSql + @Tab + '[' + @IxColumn + ']'&#xA;   -- check if ASC or DESC&#xA;   IF @IxIsIncl = 0&#xA;   BEGIN&#xA;    IF @Desc = 1&#xA;    BEGIN&#xA;     SET @sCreateSql = @sCreateSql + ' DESC'&#xA;    END&#xA;    ELSE&#xA;    BEGIN&#xA;     SET @sCreateSql = @sCreateSql + ' ASC'&#xA;    END&#xA;    --END IF&#xA;   END&#xA;   --END IF&#xA;   FETCH NEXT&#xA;   FROM IndexColumns_cursor&#xA;   INTO @IxColumn, @IxIncl, @Desc&#xA;  END&#xA;  --END WHILE&#xA;&#xA;  CLOSE IndexColumns_cursor&#xA;  DEALLOCATE IndexColumns_cursor&#xA; &#xA;  SET @sCreateSql = @sCreateSql + @NewLine + ') '&#xA; &#xA;  IF @IncludeFillFactor = 1&#xA;  BEGIN&#xA;   SET @sCreateSql = @sCreateSql + @NewLine +&#xA;   'WITH (FillFactor = ' + Cast(@FillFactor as varchar(13)) + ')' + @NewLine&#xA;  END&#xA;  --END IF&#xA; &#xA;  IF @IncludeFileGroup = 1&#xA;  BEGIN&#xA;   SET @sCreateSql = @sCreateSql + 'ON ['+ @FileGroupName + ']' + @NewLine&#xA;  END&#xA;  ELSE&#xA;  BEGIN&#xA;   SET @sCreateSql = @sCreateSql + @NewLine&#xA;  END&#xA;  --END IF&#xA; &#xA;  SET @sCreateAllSql = @sCreateAllSql + '&#xA;'&#xA;&#xA;  SET @sDropAllSql = @sDropAllSql + '&#xA;'&#xA;&#xA;  IF @IncludeDrop = 1&#xA;  BEGIN&#xA;   SET @sDropAllSql = @sDropAllSql + @sDropSql + '&#xA;'&#xA;  END&#xA; &#xA;  SET @sCreateAllSql = @sCreateAllSql + @sCreateSql + '&#xA;'&#xA;&#xA;  FETCH NEXT&#xA;   FROM Indexes_cursor&#xA;   INTO @SchemaName, @TableName, @TableId, @IndexName,&#xA;   @IndexId, @IndexType, @FileGroupName, @FillFactor, @IsPrimaryKey&#xA; END&#xA; --END WHILE&#xA; CLOSE Indexes_cursor&#xA; DEALLOCATE Indexes_cursor&#xA;&#xA;SELECT ? = @sDropAllSql&#xA;SELECT ? = @sCreateAllSql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vDropAllIndexSQL"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="8000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCreateAllIndexSQL"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="8000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::pTargetTableName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="150" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Init load MLISAssignmentC  into Prestaging\Drop Index"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{D91253B7-DA15-4FA7-9F1C-173BF905DDA7}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Drop Index"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{CA874F74-21A5-433F-BA21-98A8EF6F4CF5}" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Init load MLISAssignmentC  into Prestaging\ESQL Delete Duplicated Rows"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{AA58FD1A-9890-4C40-9859-256AE76944DB}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="ESQL Delete Duplicated Rows"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{CA874F74-21A5-433F-BA21-98A8EF6F4CF5}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::vSQLDeleteDuplicates"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="DeletedRows"
                SQLTask:DtsVariableName="User::vDeletedTotalRowCount" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Init load MLISAssignmentC  into Prestaging\Initial Load"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DelayValidation="True"
          DTS:Description="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:ISOLevel="256"
          DTS:LocaleID="-1"
          DTS:ObjectName="Initial Load"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              defaultBufferMaxRows="47800"
              defaultBufferSize="104857600"
              engineThreads="4"
              version="1">
              <components>
                <component
                  componentClassID="DTSTransform.DerivedColumn.3"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add Audit Columns"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  id="2">
                  <inputs>
                    <input
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input"
                      id="3">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="3"
                      id="4">
                      <outputColumns>
                        <outputColumn
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="5"
                          name="AuditJobInstanceSourceIDInit"
                          truncationRowDisposition="FailComponent"
                          id="5">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression"
                              id="6">@[User::vJobInstanceSourceID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression"
                              id="7">@[User::vJobInstanceSourceID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="8"
                          name="AuditJobInstanceSourceIDIncr"
                          truncationRowDisposition="FailComponent"
                          id="8">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression"
                              id="9">@[User::vJobInstanceSourceID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression"
                              id="10">@[User::vJobInstanceSourceID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          dataType="dbTimeStamp2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="11"
                          name="AuditCreatedDTS"
                          scale="3"
                          truncationRowDisposition="FailComponent"
                          id="11">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression"
                              id="12">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression"
                              id="13">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          dataType="dbTimeStamp2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="14"
                          name="AuditModifiedDTS"
                          scale="3"
                          truncationRowDisposition="FailComponent"
                          id="14">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression"
                              id="15">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression"
                              id="16">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="3"
                      id="17">
                      <outputColumns>
                        <outputColumn
                          dataType="i4"
                          lineageId="18"
                          name="ErrorCode"
                          specialFlags="1"
                          id="18" />
                        <outputColumn
                          dataType="i4"
                          lineageId="19"
                          name="ErrorColumn"
                          specialFlags="2"
                          id="19" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="SSISOps : DON'T CHANGE PREFIX. "
                  name="DEST OLE DB Destination"
                  id="20">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName"
                      id="21">User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1</property>
                  </properties>
                  <inputs>
                    <input
                      hasSideEffects="true"
                      name="Row Count Input 1"
                      id="22">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Row Count Output 1"
                      synchronousInputId="22"
                      id="23">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSAdapter.OLEDBDestination.3"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4"
                  id="24">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout"
                      id="25">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"
                      id="26">[SalesForce].[LSAAssignmentC]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"
                      id="27">User::vSchemaTableName</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      id="28"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage"
                      id="29">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage"
                      id="30">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode"
                      id="31">4</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity"
                      id="32">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls"
                      id="33">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"
                      id="34">CHECK_CONSTRAINTS,ROWS_PER_BATCH = 5000</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize"
                      id="35">100000</property>
                  </properties>
                  <connections>
                    <connection
                      connectionManagerID="{362D517C-1DFA-4117-A69E-C7596DA73AF7}"
                      connectionManagerRefId="{362D517C-1DFA-4117-A69E-C7596DA73AF7}:invalid"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection"
                      id="36" />
                  </connections>
                  <inputs>
                    <input
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input"
                      id="37">
                      <inputColumns>
                        <inputColumn
                          cachedDataType="i8"
                          cachedName="AuditJobInstanceSourceIDInit"
                          externalMetadataColumnId="53"
                          lineageId="5"
                          id="38" />
                        <inputColumn
                          cachedDataType="i8"
                          cachedName="AuditJobInstanceSourceIDIncr"
                          externalMetadataColumnId="54"
                          lineageId="8"
                          id="39" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="18"
                          cachedName="Id"
                          externalMetadataColumnId="57"
                          lineageId="84"
                          id="40" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="80"
                          cachedName="Name"
                          externalMetadataColumnId="60"
                          lineageId="87"
                          id="41" />
                        <inputColumn
                          cachedDataType="bool"
                          cachedName="IsDeleted"
                          externalMetadataColumnId="64"
                          lineageId="91"
                          id="42" />
                        <inputColumn
                          cachedDataType="dbTimeStamp"
                          cachedName="CreatedDate"
                          externalMetadataColumnId="65"
                          lineageId="92"
                          id="43" />
                        <inputColumn
                          cachedDataType="dbTimeStamp2"
                          cachedName="AuditCreatedDTS"
                          cachedScale="3"
                          externalMetadataColumnId="55"
                          lineageId="11"
                          id="44" />
                        <inputColumn
                          cachedDataType="dbTimeStamp2"
                          cachedName="AuditModifiedDTS"
                          cachedScale="3"
                          externalMetadataColumnId="56"
                          lineageId="14"
                          id="45" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="18"
                          cachedName="MLISAccountC"
                          externalMetadataColumnId="58"
                          lineageId="85"
                          id="46" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="18"
                          cachedName="ContactC"
                          externalMetadataColumnId="59"
                          lineageId="86"
                          id="47" />
                        <inputColumn
                          cachedDataType="dbDate"
                          cachedName="PracticeStartDateC"
                          externalMetadataColumnId="61"
                          lineageId="88"
                          id="48" />
                        <inputColumn
                          cachedDataType="dbDate"
                          cachedName="PracticeTerminationDateC"
                          externalMetadataColumnId="62"
                          lineageId="89"
                          id="49" />
                        <inputColumn
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LSAStatusC"
                          externalMetadataColumnId="63"
                          lineageId="90"
                          id="50" />
                        <inputColumn
                          cachedDataType="dbTimeStamp"
                          cachedName="SystemModStamp"
                          externalMetadataColumnId="67"
                          lineageId="93"
                          id="51" />
                        <inputColumn
                          cachedDataType="bytes"
                          cachedLength="32"
                          cachedName="HashByte"
                          externalMetadataColumnId="66"
                          lineageId="94"
                          id="52" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          dataType="i8"
                          name="AuditJobInstanceSourceIDInit"
                          id="53" />
                        <externalMetadataColumn
                          dataType="i8"
                          name="AuditJobInstanceSourceIDIncr"
                          id="54" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="AuditCreatedDTS"
                          id="55" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="AuditModifiedDTS"
                          id="56" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="Id"
                          id="57" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="MLISAccountC"
                          id="58" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="ContactC"
                          id="59" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="80"
                          name="Name"
                          id="60" />
                        <externalMetadataColumn
                          dataType="dbDate"
                          name="PracticeStartDateC"
                          id="61" />
                        <externalMetadataColumn
                          dataType="dbDate"
                          name="PracticeTerminationDateC"
                          id="62" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="255"
                          name="LSAStatusC"
                          id="63" />
                        <externalMetadataColumn
                          dataType="bool"
                          name="IsDeleted"
                          id="64" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="CreatedDate"
                          id="65" />
                        <externalMetadataColumn
                          dataType="bytes"
                          length="32"
                          name="HashByte"
                          id="66" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="SystemModStamp"
                          id="67" />
                        <externalMetadataColumn
                          dataType="i4"
                          name="LSAAssignmentId"
                          id="68" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="37"
                      id="69">
                      <outputColumns>
                        <outputColumn
                          dataType="i4"
                          lineageId="70"
                          name="ErrorCode"
                          specialFlags="1"
                          id="70" />
                        <outputColumn
                          dataType="i4"
                          lineageId="71"
                          name="ErrorColumn"
                          specialFlags="2"
                          id="71" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSAdapter.OLEDBSource.3"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="7"
                  id="72">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout"
                      id="73">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"
                      id="74"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"
                      id="75"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      id="76"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"
                      id="77">User::vSQLSelectPreStagingRecords</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage"
                      id="78">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage"
                      id="79">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode"
                      id="80">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"
                      id="81"></property>
                  </properties>
                  <connections>
                    <connection
                      connectionManagerID="{362D517C-1DFA-4117-A69E-C7596DA73AF7}"
                      connectionManagerRefId="{362D517C-1DFA-4117-A69E-C7596DA73AF7}:invalid"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection"
                      id="82" />
                  </connections>
                  <outputs>
                    <output
                      name="OLE DB Source Output"
                      id="83">
                      <outputColumns>
                        <outputColumn
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="95"
                          length="18"
                          lineageId="84"
                          name="Id"
                          truncationRowDisposition="FailComponent"
                          id="84" />
                        <outputColumn
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="96"
                          length="18"
                          lineageId="85"
                          name="MLISAccountC"
                          truncationRowDisposition="FailComponent"
                          id="85" />
                        <outputColumn
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="97"
                          length="18"
                          lineageId="86"
                          name="ContactC"
                          truncationRowDisposition="FailComponent"
                          id="86" />
                        <outputColumn
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="98"
                          length="80"
                          lineageId="87"
                          name="Name"
                          truncationRowDisposition="FailComponent"
                          id="87" />
                        <outputColumn
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="99"
                          lineageId="88"
                          name="PracticeStartDateC"
                          truncationRowDisposition="FailComponent"
                          id="88" />
                        <outputColumn
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="100"
                          lineageId="89"
                          name="PracticeTerminationDateC"
                          truncationRowDisposition="FailComponent"
                          id="89" />
                        <outputColumn
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="101"
                          length="255"
                          lineageId="90"
                          name="LSAStatusC"
                          truncationRowDisposition="FailComponent"
                          id="90" />
                        <outputColumn
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="102"
                          lineageId="91"
                          name="IsDeleted"
                          truncationRowDisposition="FailComponent"
                          id="91" />
                        <outputColumn
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="103"
                          lineageId="92"
                          name="CreatedDate"
                          truncationRowDisposition="FailComponent"
                          id="92" />
                        <outputColumn
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="104"
                          lineageId="93"
                          name="SystemModStamp"
                          truncationRowDisposition="FailComponent"
                          id="93" />
                        <outputColumn
                          dataType="bytes"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="105"
                          length="32"
                          lineageId="94"
                          name="HashByte"
                          truncationRowDisposition="FailComponent"
                          id="94" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="Id"
                          id="95" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="MLISAccountC"
                          id="96" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="18"
                          name="ContactC"
                          id="97" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="80"
                          name="Name"
                          id="98" />
                        <externalMetadataColumn
                          dataType="dbDate"
                          name="PracticeStartDateC"
                          id="99" />
                        <externalMetadataColumn
                          dataType="dbDate"
                          name="PracticeTerminationDateC"
                          id="100" />
                        <externalMetadataColumn
                          dataType="wstr"
                          length="255"
                          name="LSAStatusC"
                          id="101" />
                        <externalMetadataColumn
                          dataType="bool"
                          name="IsDeleted"
                          id="102" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="CreatedDate"
                          id="103" />
                        <externalMetadataColumn
                          dataType="dbTimeStamp"
                          name="SystemModStamp"
                          id="104" />
                        <externalMetadataColumn
                          dataType="bytes"
                          length="32"
                          name="HashByte"
                          id="105" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      isErrorOut="true"
                      name="OLE DB Source Error Output"
                      id="106">
                      <outputColumns>
                        <outputColumn
                          dataType="wstr"
                          length="18"
                          lineageId="107"
                          name="Id"
                          id="107" />
                        <outputColumn
                          dataType="wstr"
                          length="18"
                          lineageId="108"
                          name="MLISAccountC"
                          id="108" />
                        <outputColumn
                          dataType="wstr"
                          length="18"
                          lineageId="109"
                          name="ContactC"
                          id="109" />
                        <outputColumn
                          dataType="wstr"
                          length="80"
                          lineageId="110"
                          name="Name"
                          id="110" />
                        <outputColumn
                          dataType="dbDate"
                          lineageId="111"
                          name="PracticeStartDateC"
                          id="111" />
                        <outputColumn
                          dataType="dbDate"
                          lineageId="112"
                          name="PracticeTerminationDateC"
                          id="112" />
                        <outputColumn
                          dataType="wstr"
                          length="255"
                          lineageId="113"
                          name="LSAStatusC"
                          id="113" />
                        <outputColumn
                          dataType="bool"
                          lineageId="114"
                          name="IsDeleted"
                          id="114" />
                        <outputColumn
                          dataType="dbTimeStamp"
                          lineageId="115"
                          name="CreatedDate"
                          id="115" />
                        <outputColumn
                          dataType="dbTimeStamp"
                          lineageId="116"
                          name="SystemModStamp"
                          id="116" />
                        <outputColumn
                          dataType="bytes"
                          length="32"
                          lineageId="117"
                          name="HashByte"
                          id="117" />
                        <outputColumn
                          dataType="i4"
                          lineageId="118"
                          name="ErrorCode"
                          specialFlags="1"
                          id="118" />
                        <outputColumn
                          dataType="i4"
                          lineageId="119"
                          name="ErrorColumn"
                          specialFlags="2"
                          id="119" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count"
                  id="120">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName"
                      id="121">User::vInsertedTotalRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      hasSideEffects="true"
                      name="Row Count Input 1"
                      id="122">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Row Count Output 1"
                      synchronousInputId="122"
                      id="123">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="SSISOps : DON'T CHANGE PREFIX. "
                  name="SRC OLE DB Source"
                  id="124">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName"
                      id="125">User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2</property>
                  </properties>
                  <inputs>
                    <input
                      hasSideEffects="true"
                      name="Row Count Input 1"
                      id="126">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Row Count Output 1"
                      synchronousInputId="126"
                      id="127">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="TF Hash Transform; Pragmatic Works, Inc; Task Factory (c) 2009 - 2014 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
                  description="The Hash Transform combines input data into a hash using a hashing algorithm."
                  name="TF Hash Transform"
                  version="1"
                  id="128">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="DebugMode"
                      id="129">false</property>
                    <property
                      dataType="System.String"
                      description="Will replace null values with a value so the concatenation of values with a null doesn't result in a null value."
                      expressionType="Notify"
                      name="Null Value Character"
                      id="130">NA</property>
                    <property
                      dataType="System.String"
                      description="Defines what character will be used to concatenate values together."
                      expressionType="Notify"
                      name="Separator Character"
                      id="131">|</property>
                    <property
                      dataType="System.Boolean"
                      description="Will add space padding to DT_STR and DT_WSTR."
                      expressionType="Notify"
                      name="Enable Padding"
                      id="132">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName"
                      id="133">PragmaticWorks.TaskFactory.Components.Transforms.Hash.HashTransform, PragmaticWorks.TaskFactory.Components120, Version=1.0.0.0, Culture=neutral, PublicKeyToken=47acf905d0337c39</property>
                  </properties>
                  <inputs>
                    <input
                      name="Input"
                      id="134">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      name="Output"
                      synchronousInputId="134"
                      id="135">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  endId="122"
                  name="Derived Column Output"
                  startId="4"
                  id="136" />
                <path
                  endId="126"
                  name="OLE DB Source Output"
                  startId="83"
                  id="137" />
                <path
                  endId="3"
                  name="Output"
                  startId="135"
                  id="138" />
                <path
                  endId="22"
                  name="Row Count Output 1"
                  startId="123"
                  id="139" />
                <path
                  endId="37"
                  name="Row Count Output 2"
                  startId="23"
                  id="140" />
                <path
                  endId="134"
                  name="Row Count Output 2"
                  startId="127"
                  id="141" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{1419D2FA-F25E-485B-8853-C3197C04B7C3}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::vDropAllIndexSQL] != &quot;&quot;"
          DTS:From="Package\Init load MLISAssignmentC  into Prestaging\Detect index and prepare drop and create index script"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Init load MLISAssignmentC  into Prestaging\Drop Index" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{D02E5563-E25A-4F73-9E0B-0D2AC4DB884C}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::vDropAllIndexSQL] == &quot;&quot;"
          DTS:From="Package\Init load MLISAssignmentC  into Prestaging\Detect index and prepare drop and create index script"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Init load MLISAssignmentC  into Prestaging\Initial Load" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{E2994DFC-442D-4B18-B1C3-B944D8EAFA16}"
          DTS:From="Package\Init load MLISAssignmentC  into Prestaging\Initial Load"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Init load MLISAssignmentC  into Prestaging\ESQL Delete Duplicated Rows" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{21EC38A9-A1B7-4EB8-9449-12B5FBCF109D}"
          DTS:From="Package\Init load MLISAssignmentC  into Prestaging\Drop Index"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Init load MLISAssignmentC  into Prestaging\Initial Load" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{B1038DAC-413F-4762-A0A4-B14AE05A338E}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::vCreateAllIndexSQL] != &quot;&quot;"
          DTS:From="Package\Init load MLISAssignmentC  into Prestaging\ESQL Delete Duplicated Rows"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Init load MLISAssignmentC  into Prestaging\Create Index" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialization"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{0FEF5DF8-5868-4282-A8D9-F0499868F4A7}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialization">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialization\Validate Connection Managers"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DTSID="{304CD2A2-89FC-4FA9-A592-D06DBE0FB4B6}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Validate Connection Managers">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_30b9dbc65e64438285f787b863c2cc47"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5f75e8d5680c42008e7aef4dbb5bbfbb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_5f75e8d5680c42008e7aef4dbb5bbfbb")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_30b9dbc65e64438285f787b863c2cc47.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{a3b17534-d312-4940-b1f8-2c381809ed5c}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_5f75e8d5680c42008e7aef4dbb5bbfbb</RootNamespace><AssemblyName>ST_30b9dbc65e64438285f787b863c2cc47</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_5f75e8d5680c42008e7aef4dbb5bbfbb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here

           bool failure = false;            
           bool fireAgain = true;         
           foreach (var ConnMgr in Dts.Connections)            
           {                
               Dts.Events.FireInformation(1, "", String.Format("ConnectionManager='{0}', ConnectionString='{1}'", ConnMgr.Name, ConnMgr.ConnectionString), "", 0, ref fireAgain);                
               
               try                
               {                    
                   ConnMgr.AcquireConnection(null);                    
                   Dts.Events.FireInformation(1, "", String.Format("Connection acquired successfully on '{0}'", ConnMgr.Name), "", 0, ref fireAgain);                
               }                
               catch (Exception ex)                
               {                    
                   Dts.Events.FireError(-1, "", String.Format("Failed to acquire connection to '{0}'. Error Message='{1}'", ConnMgr.Name, ex.Message), "", 0);                    
                   failure = true;                
               }            
           }            
            
           if (failure)                
                Dts.TaskResult = (int)ScriptResults.Failure;            
           else                
                Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_5f75e8d5680c42008e7aef4dbb5bbfbb</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_5f75e8d5680c42008e7aef4dbb5bbfbb</msb:DisplayName>
		<msb:ProjectId>{1E6E65BB-FED8-4733-8F1E-BE47F2A79C0F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_30b9dbc65e64438285f787b863c2cc47.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f75e8d5680c42008e7aef4dbb5bbfbb.Properties.Settings.get_Default():ST_5f75e8d5680c42008e7aef4dbb5bbfbb.Properties.Sett" +
    "ings")]

namespace ST_5f75e8d5680c42008e7aef4dbb5bbfbb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f75e8d5680c42008e7aef4dbb5bbfbb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f75e8d5680c42008e7aef4dbb5bbfbb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f75e8d5680c42008e7aef4dbb5bbfbb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5f75e8d5680c42008e7aef4dbb5bbfbb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5f75e8d5680c42008e7aef4dbb5bbfbb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_ef14b80c2d9c46ac8f134049978d8262.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAB+kvlQAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAPjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOQwAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
MQAAAAAAAEgAAAACAAUAiCIAAFwOAAABAAAAAAAAANAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBwDwAAAAAgAAERYKFwsCKBYAAApvFwAACm8YAAAKEwQ4rAAAABEE
bxkAAAoMAigWAAAKbxoAAAoXcnMAAHBydQAAcAhvGwAACghvHAAACigdAAAKcnMAAHAWEgFvHgAA
CggUbx8AAAomAigWAAAKbxoAAAoXcnMAAHBy1QAAcAhvGwAACiggAAAKcnMAAHAWEgFvHgAACt44
DQIoFgAACm8aAAAKFXJzAABwcikBAHAIbxsAAAoJbyEAAAooHQAACnJzAABwFm8iAAAKJhcK3gAR
BG8jAAAKOkj///8GLA0CKBYAAAoXbyQAAAoqAigWAAAKFm8kAAAKKgEQAAAAAFcAOI8AOCEAAAEe
AiglAAAKKrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAU
BAAAI34AAIAEAACUBgAAI1N0cmluZ3MAAAAAFAsAAKABAAAjVVMAtAwAABAAAAAjR1VJRAAAAMQM
AACYAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAIgAAAAUAAAAGAAAACQAA
AAEAAAAlAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAA
AAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIG
ALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAAQE
8QMGACEEugAGACYEugAGAEoEcAIKAHYEYAQKAI8EYAQGAKQEbwMOAMYEFAEOAOgEFAESAEEFIQUS
AF0FIQUSAIAFIQUOAJ4FFAEGANsFugAGAAsGugASACsGIQUAAAAAAQAAAAAAAQABAAAAEAAyADwA
BQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCs
ARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEg
AAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAA
AAAAkRi/BIkAAgC8IAAAAACGABoCGwACAMghAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgA
SQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8
ARsAmQC8ARsACQC8ARsAoQA4BGIAoQBTBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsA
GQD6BI0A2QBNBZIA4QByBZcA6QCSBZwA2QCyBaEA8QC9BaYA8QDGBaYAAQHiBaoA+QDpBbEA8QD5
BbwAAQHiBcEACQEVBqYA+QAhBscAEQE5BtAA2QBCBl0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAA
LgAbAFEBLgAjAFEBLgBjAHcBLgALAOAALgATACgBLgAzACgBLgArAFEBLgA7AFcBLgBDAFEBLgBb
AG4BQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQDUAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIA
AgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAB6FY9MAAAAAAAAzQMAAAQAAAAAAAAAAAAA
AAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAAMAAAAAAAAAAAAAAAKAPUAAAAAAAwAAAAAAAAA
AAAAAAoAAgUAAAAAAAAAAAEAAABRBgAABQAEAAAAAAAAPE1vZHVsZT4AU1RfZWYxNGI4MGMyZDlj
NDZhYzhmMTM0MDQ5OTc4ZDgyNjIuZGxsAFJlc291cmNlcwBTVF81Zjc1ZThkNTY4MGM0MjAwOGU3
YWVmNGRiYjViYmZiYi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfNWY3NWU4ZDU2
ODBjNDIwMDhlN2FlZjRkYmI1YmJmYmIAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMA
UmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJ
bmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQA
TWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU1RfZWYxNGI4MGMyZDljNDZhYzhm
MTM0MDQ5OTc4ZDgyNjIAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBn
ZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9E
dHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAQ29ubmVjdGlvbnMAZ2V0X0Nvbm5lY3Rpb25zAENvbm5lY3Rpb25FbnVtZXJhdG9y
AEdldEVudW1lcmF0b3IAQ29ubmVjdGlvbk1hbmFnZXIAZ2V0X0N1cnJlbnQARXZlbnRzT2JqZWN0
V3JhcHBlcgBnZXRfRXZlbnRzAGdldF9OYW1lAGdldF9Db25uZWN0aW9uU3RyaW5nAFN0cmluZwBG
b3JtYXQARmlyZUluZm9ybWF0aW9uAEFjcXVpcmVDb25uZWN0aW9uAEV4Y2VwdGlvbgBnZXRfTWVz
c2FnZQBGaXJlRXJyb3IARHRzRW51bWVyYXRvcgBNb3ZlTmV4dABzZXRfVGFza1Jlc3VsdABTVF81
Zjc1ZThkNTY4MGM0MjAwOGU3YWVmNGRiYjViYmZiYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMAAHFTAFQAXwA1AGYANwA1AGUAOABkADUANgA4ADAAYwA0ADIAMAAwADgAZQA3AGEAZQBm
ADQAZABiAGIANQBiAGIAZgBiAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAAEAX0MAbwBuAG4AZQBjAHQAaQBvAG4ATQBhAG4AYQBnAGUAcgA9ACcAewAwAH0AJwAs
ACAAQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwA9ACcAewAxAH0AJwABU0MAbwBuAG4A
ZQBjAHQAaQBvAG4AIABhAGMAcQB1AGkAcgBlAGQAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAg
AG8AbgAgACcAewAwAH0AJwABdUYAYQBpAGwAZQBkACAAdABvACAAYQBjAHEAdQBpAHIAZQAgAGMA
bwBuAG4AZQBjAHQAaQBvAG4AIAB0AG8AIAAnAHsAMAB9ACcALgAgAEUAcgByAG8AcgAgAE0AZQBz
AHMAYQBnAGUAPQAnAHsAMQB9ACcAAQCmVFtmJnwPQalxE/gWwYeCAAi3elxWGTTgiQiJhF3NgIDM
kQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggD
BhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQAC
AAAAAAADAAABBCAAEm0EIAAScQQgABJ1BCAAEnkEIAASfQMgAA4GAAMODhwcCiAGAQgODg4IEAIE
IAEcHAUAAg4OHAggBQIIDg4OCAMgAAILBwUCAhJ5EoCFEnVHAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1Rf
NWY3NWU4ZDU2ODBjNDIwMDhlN2FlZjRkYmI1YmJmYmIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAxNQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAADDEAAAAAAAAA
AAAALjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAxAAAAAAAAAAAAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAI9MehUAAAEAj0x6FT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA1AGYANwA1AGUAOABkADUANgA4ADAAYwA0ADIAMAAwADgAZQA3AGEAZQBmADQAZABiAGIANQBi
AGIAZgBiAGIAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA0ADkA
OAAuADEAOQA1ADkAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBl
AGYAMQA0AGIAOAAwAGMAMgBkADkAYwA0ADYAYQBjADgAZgAxADMANAAwADQAOQA5ADcAOABkADgA
MgA2ADIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANQAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwBlAGYAMQA0AGIAOAAwAGMAMgBkADkAYwA0ADYAYQBjADgAZgAx
ADMANAAwADQAOQA5ADcAOABkADgAMgA2ADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8ANQBmADcANQBlADgAZAA1ADYAOAAwAGMANAAyADAAMAA4AGUANwBh
AGUAZgA0AGQAYgBiADUAYgBiAGYAYgBiAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA1ADQAOQA4AC4AMQA5ADUAOQA5AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADQAOQA4AC4AMQA5ADUAOQA5AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAEAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialization (Audit)"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialization (Audit)">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DTSID="{82C4DEF7-2FE7-4983-9D7D-7611307F6DE8}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute cmd shell and retrieve environment variable information">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_56d8a7f8c9f942d8a4bc03276d62d34d"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp"
              ReadWriteVariables="User::vEnvironmentTEXT">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Settings.get_Default():ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Sett" +
    "ings")]

namespace ST_1ac71edf38774ce3aaaabd70002d56d2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Diagnostics;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_1ac71edf38774ce3aaaabd70002d56d2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            string sCmdOutput = "";

            System.Diagnostics.Process process = new System.Diagnostics.Process();
            System.Diagnostics.ProcessStartInfo startInfo = new System.Diagnostics.ProcessStartInfo();

            startInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;
            startInfo.RedirectStandardInput = true;
            startInfo.RedirectStandardOutput = true;
            startInfo.RedirectStandardError = true;
            startInfo.UseShellExecute = false;

            startInfo.FileName = "cmd.exe";
            startInfo.Arguments = @"/c set";
            process.StartInfo = startInfo;

            process.Start();

            StreamReader reader = process.StandardOutput;

            string line;
            while((line = reader.ReadLine()) != null) {
                sCmdOutput = sCmdOutput + line + "|";
            }

            sCmdOutput = sCmdOutput.Substring(0, sCmdOutput.Length - 1);

            Dts.Variables["User::vEnvironmentTEXT"].Value = sCmdOutput;
            //MessageBox.Show(sCmdOutput);

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_56d8a7f8c9f942d8a4bc03276d62d34d.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{2e145202-cc60-402b-bc78-44fb3093a536}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1ac71edf38774ce3aaaabd70002d56d2</RootNamespace><AssemblyName>ST_56d8a7f8c9f942d8a4bc03276d62d34d</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1ac71edf38774ce3aaaabd70002d56d2</msb:CodeName>
		<msb:DisplayName>ST_1ac71edf38774ce3aaaabd70002d56d2</msb:DisplayName>
		<msb:ProjectId>{BB0B653C-B149-4E56-9FC4-855F60B3DB18}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_56d8a7f8c9f942d8a4bc03276d62d34d.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1ac71edf38774ce3aaaabd70002d56d2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1ac71edf38774ce3aaaabd70002d56d2")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1ac71edf38774ce3aaaabd70002d56d2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1ac71edf38774ce3aaaabd70002d56d2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_56d8a7f8c9f942d8a4bc03276d62d34d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPa0l1cAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAnjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFAwAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
MAAAAAAAAEgAAAACAAUAQCIAABAOAAABAAAAAAAAAIghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBACzAAAAAgAAEXJzAABwCnMWAAAKC3MXAAAKDAgXbxgAAAoIF28Z
AAAKCBdvGgAACggXbxsAAAoIFm8cAAAKCHJ1AABwbx0AAAoIcoUAAHBvHgAACgcIbx8AAAoHbyAA
AAomB28hAAAKDSsOBhEEcpMAAHAoIgAACgoJbyMAAAolEwQt5wYWBm8kAAAKF1lvJQAACgoCKCYA
AApvJwAACnKXAABwbygAAAoGbykAAAoCKCYAAAoWbyoAAAoqHgIoKwAACioAAAAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAA8BAAAI34AAKgEAAD4BgAA
I1N0cmluZ3MAAAAAoAsAAMgAAAAjVVMAaAwAABAAAAAjR1VJRAAAAHgMAACYAQAAI0Jsb2IAAAAA
AAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAIwAAAAUAAAAGAAAACQAAAAEAAAArAAAAAgAAAA8A
AAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAO
AD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4C
cAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAAQE8QMGACEEugAGACYEugAG
AEoEcAIKAHYEYAQKAI8EYAQGAKQEbwMOAMYEFAEKAOgE8QMKAPAE8QMKAAEF8QMGAMAFtgUGAOAF
ugAGAO4FtgUOABcGFAESAHAGUAYSAIgGUAYAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQ
AGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkA
BgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEk
AAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRi/BIkA
AgC8IAAAAACGABoCGwACAHshAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8
AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsA
CQC8ARsAoQA4BGIAoQBTBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsA2QC8ARsA4QC8
ARsA4QAUBY0A4QAkBZMA4QA+BZMA4QBZBZMA4QBzBZMA4QCHBVgA4QCUBVgA2QCiBZgA2QCwBZ4A
2QDNBaIA+QDnBacAAQH5Ba4A+QACBrIA+QANBrYAGQApBrwACQF6BsIAEQGRBsgAGQGaBs8ACQGk
Bl0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAFABLgAjAFABLgBjAHYBLgALAN8ALgATACcB
LgAzACcBLgArAFABLgA7AFYBLgBDAFABLgBbAG0BQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQDU
AAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEA
AACjFztOAAAAAAAAzQMAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAAM
AAAAAAAAAAAAAAAKAPUAAAAAAAwAAAAAAAAAAAAAAAoAMQYAAAAAAAAAAAEAAACzBgAABQAEAAAA
ADxNb2R1bGU+AFNUXzU2ZDhhN2Y4YzlmOTQyZDhhNGJjMDMyNzZkNjJkMzRkLmRsbABSZXNvdXJj
ZXMAU1RfMWFjNzFlZGYzODc3NGNlM2FhYWFiZDcwMDAyZDU2ZDIuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAFNUXzFhYzcxZWRmMzg3NzRjZTNhYWFhYmQ3MDAwMmQ1NmQyAFNjcmlwdFJl
c3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0
YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lz
dGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBB
c3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFNUXzU2ZDhhN2Y4YzlmOTQyZDhhNGJjMDMyNzZkNjJkMzRkAFN5c3RlbS5EaWFnbm9zdGlj
cwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2Rl
bABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0
ZQBQcm9jZXNzAFByb2Nlc3NTdGFydEluZm8AUHJvY2Vzc1dpbmRvd1N0eWxlAHNldF9XaW5kb3dT
dHlsZQBzZXRfUmVkaXJlY3RTdGFuZGFyZElucHV0AHNldF9SZWRpcmVjdFN0YW5kYXJkT3V0cHV0
AHNldF9SZWRpcmVjdFN0YW5kYXJkRXJyb3IAc2V0X1VzZVNoZWxsRXhlY3V0ZQBzZXRfRmlsZU5h
bWUAc2V0X0FyZ3VtZW50cwBzZXRfU3RhcnRJbmZvAFN0YXJ0AFN5c3RlbS5JTwBTdHJlYW1SZWFk
ZXIAZ2V0X1N0YW5kYXJkT3V0cHV0AFN0cmluZwBDb25jYXQAVGV4dFJlYWRlcgBSZWFkTGluZQBn
ZXRfTGVuZ3RoAFN1YnN0cmluZwBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlh
YmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAHNldF9WYWx1ZQBzZXRfVGFza1Jl
c3VsdABTVF8xYWM3MWVkZjM4Nzc0Y2UzYWFhYWJkNzAwMDJkNTZkMi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAAAAcVMAVABfADEAYQBjADcAMQBlAGQAZgAzADgANwA3ADQAYwBlADMA
YQBhAGEAYQBiAGQANwAwADAAMAAyAGQANQA2AGQAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAQAPYwBtAGQALgBlAHgAZQAADS8AYwAgAHMAZQB0AAADfAAALVUA
cwBlAHIAOgA6AHYARQBuAHYAaQByAG8AbgBtAGUAbgB0AFQARQBYAFQAAAAAAEprekgF1hdMn+kO
QbfZRyIACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIV
BAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAAS
WQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEFIAEBEXUEIAEBAgUgAQEScQMgAAIEIAAS
eQYAAw4ODg4DIAAOAyAACAUgAg4ICAUgABKAhQUgABKAiQYgARKAjRwEIAEBHAoHBQ4SbRJxEnkO
RwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAu
TkVUIEZyYW1ld29yayA0KAEAI1NUXzFhYzcxZWRmMzg3NzRjZTNhYWFhYmQ3MDAwMmQ1NmQyAAAF
AQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEAAAB4MAAAAAAAAAAAAACOMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgDAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABADtOoxcAAAEAO06jFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAxAGEAYwA3ADEAZQBkAGYAMwA4ADcANwA0AGMAZQAzAGEAYQBhAGEAYgBkADcAMAAwADAAMgBk
ADUANgBkADIAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADUA
MQAuADIAMAAwADIANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA1
ADYAZAA4AGEANwBmADgAYwA5AGYAOQA0ADIAZAA4AGEANABiAGMAMAAzADIANwA2AGQANgAyAGQA
MwA0AGQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwA1ADYAZAA4AGEANwBmADgAYwA5AGYAOQA0ADIAZAA4AGEANABi
AGMAMAAzADIANwA2AGQANgAyAGQAMwA0AGQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AMQBhAGMANwAxAGUAZABmADMAOAA3ADcANABjAGUAMwBhAGEAYQBh
AGIAZAA3ADAAMAAwADIAZAA1ADYAZAAyAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADAANQAxAC4AMgAwADAAMgA3AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAANQAxAC4AMgAwADAAMgA3AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Log Environment"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{051F8EEA-5D1E-4099-9BAE-87C6305FC0FC}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Environment"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="Insert into Audit.Environment (RunningJobsText, EnvironmentText, JobInstanceID) Values (?, ?, ?) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vEnvironmentTEXT"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="8000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Log Processed  Table JobInstanceSource"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{CD8BC145-995D-4851-ABDF-F8DC5D81E9D7}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Processed  Table JobInstanceSource"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="EXEC Audit.Log_JobInstanceSource &#xA; @JobInstanceID = ?, &#xA;@SourceNAME = ?,  &#xA;@SourceLocationNAME = ?, &#xA;@JobInstanceSourceID=? output, &#xA;@SourceTypeIND = 'T' " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::pSourceTableName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="500" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vSourceServerDatabase"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="1000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::vJobInstanceSourceID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Populate ETLUser"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{4C6CFE84-FB26-477B-B098-23BE4874C52F}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate ETLUser"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="Exec [Audit].[Log_ETLUser] @UserNAME = ?, @UserEMAIL = ?, @UserID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::UserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="256" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::pNotificationEmail"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="256" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurUserID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Populate Joblog"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{54F20F4D-4582-4AAD-B2C9-5F2FCA26AEBC}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate Joblog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="EXEC [Audit].[Log_Job_OnBegin] &#xA;@JobName = ?,&#xA;@PackageID = ?,&#xA;@JobID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Populate new Job Instance"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{2455ABD0-CD1F-4C58-8F98-C45FC82A09FA}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate new Job Instance"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="EXEC [Audit].[log_JobInstance] &#xA;@JobID = ?, &#xA;@UserID = ?,&#xA;@JobInstanceParentID = ?,&#xA;@packageVersionID = ?,&#xA;@ExecutionID = ?,&#xA;@JobStartDTS = ?, &#xA;@currentJobInstanceID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vCurUserID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="$Package::pJobInstanceParentID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::VersionGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CF4B4B7E-D4E1-41B2-8C87-59F212BFAFA8}"
          DTS:Expression="@[$Project::pDebugMode] == True"
          DTS:From="Package\Initialization (Audit)\Populate new Job Instance"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initialization (Audit)\Log Processed  Table JobInstanceSource" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{85C05518-FB11-427A-8F85-EAF4F538B377}"
          DTS:From="Package\Initialization (Audit)\Populate Joblog"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initialization (Audit)\Populate new Job Instance" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{5B9CB8CC-0AB4-4BDC-A83E-C91BA67B8E88}"
          DTS:From="Package\Initialization (Audit)\Populate ETLUser"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Initialization (Audit)\Populate Joblog" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{0DE91852-2FC9-48C1-8BDF-2C835711A63E}"
          DTS:Expression="@[$Project::pDebugMode] == True"
          DTS:From="Package\Initialization (Audit)\Log Processed  Table JobInstanceSource"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{3768DDC3-C935-4B2F-BB1E-59CB30251CED}"
          DTS:From="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Initialization (Audit)\Log Environment" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{AF3D37CC-CDA6-4E33-B5DB-22DC4D08E318}"
      DTS:From="Package\Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Initialization (Audit)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B9FEDC61-9F06-4E92-BC93-2049B021FA6D}"
      DTS:From="Package\Initialization (Audit)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get LastRecordsProcessedDate for Package" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{09B2BF73-E6CC-4700-842A-A6C5E8DE2224}"
      DTS:From="Package\Init load MLISAssignmentC  into Prestaging"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Completion Initial Load(Audit)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{3417EB3B-A406-4A81-80DE-64B4024CD0FE}"
      DTS:From="Package\Get LastRecordsProcessedDate for Package"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Determine if Init vs Incr load" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{0E3C1EA3-D4B8-49F7-B791-2D34CA9E320B}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::vTargetTableCount] == (DT_I8)0"
      DTS:From="Package\Determine if Init vs Incr load"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Init load MLISAssignmentC  into Prestaging" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{AAA17A3E-2794-4E51-9702-313D7A9D6985}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::vTargetTableCount] &gt; (DT_I8)0"
      DTS:From="Package\Determine if Init vs Incr load"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Incremental load MLISAssignmentC into StagingHistory" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{41E526E9-27C1-445B-BC08-903F7D3D147B}"
      DTS:From="Package\Incremental load MLISAssignmentC into StagingHistory"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Completion Initial Load(Audit)" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{404DA96F-1E00-4710-B7F2-57C461FD308E}"
      DTS:EventID="228645364"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{EA096952-E0DD-46A7-AC64-DD51CA54A731}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{0E02DBB0-A06B-43D7-BB3B-CF3F14D03E30}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{6907DE8A-B1AE-4622-9F75-208E5E7C4949}</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Mark Job as a failure"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{1041215F-AAC4-4F4B-929E-B44E546AB24A}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Job as a failure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="UPDATE [Audit].[Job] &#xA;SET JobLastStatus = 'Fail' &#xA;WHERE JobID= ?&#xA;&#xA;UPDATE [Audit].[JobInstance]&#xA;SET JobSuccessIND = 'F'&#xA;WHERE JobInstanceID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{73E7D055-7904-4DE7-89D8-C3C04CC0E551}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnError_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_cc23962f48794457af68bd819565b2ff"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_cc23962f48794457af68bd819565b2ff")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_cc23962f48794457af68bd819565b2ff")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_cc23962f48794457af68bd819565b2ff
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_cc23962f48794457af68bd819565b2ff</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_cc23962f48794457af68bd819565b2ff</msb:DisplayName>
		<msb:ProjectId>{43C230BA-912F-46A9-904E-F104D38B5AC2}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_cc23962f48794457af68bd819565b2ff.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cc23962f48794457af68bd819565b2ff.Properties.Settings.get_Default():st_cc23962f48794457af68bd819565b2ff.Properties.Sett" +
    "ings")]

namespace st_cc23962f48794457af68bd819565b2ff.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_cc23962f48794457af68bd819565b2ff.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7446fd02-dbf7-4f50-a0fa-ecdeb0c28ce2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_cc23962f48794457af68bd819565b2ff</RootNamespace>
    <AssemblyName>st_cc23962f48794457af68bd819565b2ff</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cc23962f48794457af68bd819565b2ff.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cc23962f48794457af68bd819565b2ff.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cc23962f48794457af68bd819565b2ff.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_cc23962f48794457af68bd819565b2ff.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_cc23962f48794457af68bd819565b2ff.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_cc23962f48794457af68bd819565b2ff.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIPZpFcAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA3i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIgvAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
LwAAAAAAAEgAAAACAAUAyCIAAMAMAAABAAAAAAAAABAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqNgIoFgAAChZvFwAACioAAAAbMAIAZwAAAAIAABEUChYLAigWAAAKbxgA
AAoDbxkAAAoCKBYAAApvGAAAChIAbxoAAAoGA28bAAAKBG8cAAAK3gwGLAgGbx0AAAoXC9zeEyYC
KBYAAApvGAAACm8eAAAK/hreDQYsCQctBgZvHQAACtwqAAEoAAACACcADzYADAAAAAAAAAQAQEQA
Ex8AAAECAAQAVVkADQAAAAAbMAIAaAAAAAMAABEUChYLAigWAAAKbxgAAAoDbx8AAAoCKBYAAApv
GAAAChIAbxoAAAoGA28bAAAKbyAAAAoM3gwGLAgGbx0AAAoXC9zeEyYCKBYAAApvGAAACm8eAAAK
/hreDQYsCQctBgZvHQAACtwIKgEoAAACACcADzYADAAAAAAAAAQAQEQAEx8AAAECAAQAVVkADQAA
AAAeAighAAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAAGAQAACN+AACEBAAAPAYAACNTdHJpbmdzAAAAAMAKAAB0AAAAI1VTADQLAAAQAAAAI0dV
SUQAAABECwAAfAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAAB8AAAAFAAAA
BgAAAAsAAAAEAAAAIQAAAAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAA
AAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCNAnMCBgC4AqYC
BgDPAqYCBgDsAqYCBgALA6YCBgAkA6YCBgA9A6YCBgBYA6YCBgBzA6YCBgCMA6YCBgDFA6UDBgDl
A6UDBgAWBAMEBgAzBLoABgA4BLoABgBcBKYCCgCIBHIECgChBHIEBgC2BKUDDgDYBBQBDgD6BBQB
EgBiBUIFEgCXBUIFEgCuBUIFBgDXBboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABr
ADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAMABEAfwETABEArAEXABEA9gE5AAYG
OgJSAFaAQgJVAFaASgJVAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY0QSUAAIA
uyAAAAAAhgAaAhsAAgDMIAAAAACBAB8CRwACAGghAAAAAIEALQJNAAQABCIAAAAAhhi8ARsABQAA
AAEAUgIAAAEAWAIAAAIAZQIAAAEAWAI5ALwBYwBBALwBYwBJALwBYwBRALwBYwBZALwBYwBhALwB
YwBpALwBYwBxALwBYwB5ALwBYwCBALwBYwCJALwBaACRALwBGwCZALwBGwAJALwBGwChAEoEbQCh
AGUEdAApALwBeQC5ALwBhQDJALwBGwARALwBGwDRALwBGwAZAAwFmADZABQFaADZAHQFnQDhAIoF
YwDhAKEFogDpALcFqQDxAMAFrwDpAMoFGwDhANEFGwDhAOEFYwDxAO0FugAZALwBGwAIABQAWQAI
ABgAXgApAJMAiwAuABsANgEuACMANgEuAGMAXAEuAAsAxQAuABMADQEuADMADQEuACsANgEuADsA
PAEuAEMANgEuAFsAUwFDAGsAXgBJAJMAiwBhAJsAXgCDAKsAXgCAALQAvgACAAEAAwADAAAAbwEv
AAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAArRcBSQAAAAAAAH8A
AAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1
AAAAAAAMAAAAAAAAAAAAAAAKACMFAAAAAAAAAAABAAAA9wUAAAUABAAAAAA8TW9kdWxlPgBzdF9j
YzIzOTYyZjQ4Nzk0NDU3YWY2OGJkODE5NTY1YjJmZi5kbGwAUmVzb3VyY2VzAHN0X2NjMjM5NjJm
NDg3OTQ0NTdhZjY4YmQ4MTk1NjViMmZmLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBz
dF9jYzIzOTYyZjQ4Nzk0NDU3YWY2OGJkODE5NTY1YjJmZgBTY3JpcHRSZXN1bHRzAG1zY29ybGli
AFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVt
LlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRp
b24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1
bHQARGVmYXVsdABNYWluAFdyaXRlVmFyaWFibGUAUmVhZFZhcmlhYmxlAHZhbHVlX18AU3VjY2Vz
cwBGYWlsdXJlAHZhbHVlAHZhcmlhYmxlTmFtZQB2YXJpYWJsZVZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25v
c3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBzZXRfVGFza1Jlc3VsdABNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJp
YWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIATG9ja0ZvcldyaXRlAFZhcmlhYmxl
cwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0Ac2V0X1ZhbHVlAFVubG9jawBSZXNldABF
eGNlcHRpb24ATG9ja0ZvclJlYWQAZ2V0X1ZhbHVlAHN0X2NjMjM5NjJmNDg3OTQ0NTdhZjY4YmQ4
MTk1NjViMmZmLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxcwB0AF8AYwBjADIA
MwA5ADYAMgBmADQAOAA3ADkANAA0ADUANwBhAGYANgA4AGIAZAA4ADEAOQA1ADYANQBiADIAZgBm
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAZfIG0iNqCEGtx0MZ
gtJBuAAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUE
CAASGQMGEgwEAAASDAQIABIMBSACAQ4cBCABHA4CBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgG
AAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQYgAQEQ
EnUFIAESeRwEIAEBHAUHAhJ1AgMgABwGBwMSdQIcRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0X2NjMjM5
NjJmNDg3OTQ0NTdhZjY4YmQ4MTk1NjViMmZmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAsC8AAAAAAAAAAAAAzi8A
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAvAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQABSa0XAAABAAFJrRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcwB0
AF8AYwBjADIAMwA5ADYAMgBmADQAOAA3ADkANAA0ADUANwBhAGYANgA4AGIAZAA4ADEAOQA1ADYA
NQBiADIAZgBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAA2
ADEALgAxADgANgA4ADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8A
YwBjADIAMwA5ADYAMgBmADQAOAA3ADkANAA0ADUANwBhAGYANgA4AGIAZAA4ADEAOQA1ADYANQBi
ADIAZgBmAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAcwB0AF8AYwBjADIAMwA5ADYAMgBmADQAOAA3ADkANAA0ADUANwBhAGYA
NgA4AGIAZAA4ADEAOQA1ADYANQBiADIAZgBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAHMAdABfAGMAYwAyADMAOQA2ADIAZgA0ADgANwA5ADQANAA1ADcAYQBmADYA
OABiAGQAOAAxADkANQA2ADUAYgAyAGYAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA2ADgAOQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA2ADgAOQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{9A1A3A50-4FE3-49CA-993F-070BF449D274}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnError"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnAlert @Scope='Package',@EventType='E',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{31D538F7-8A15-4327-8F9B-FF80864FFD34}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnError"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnAlert @Scope='Task',@EventType='E',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsNFObj_UpdateAlertList"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{7F8660B0-22EA-4CF5-90C0-C5F94B69B3ED}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_UpdateAlertList">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::paramSSISOpsNF_OnError_Disable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_5c07dcb308244373ac228437edfa7dc7"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_5c07dcb308244373ac228437edfa7dc7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_5c07dcb308244373ac228437edfa7dc7")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
Copyright © 2014 Pragmatic Works Inc.
#####################################################################################################################
LEGAL NOTICE
#####################################################################################################################
THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
##################################################################################################################### 
*/
#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

using System.Net;
using System.Net.Mail;
using System.Collections;


#endregion

namespace st_5c07dcb308244373ac228437edfa7dc7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            UpdateAlertList();
            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion

        private const string NotificationFrameworkAlertListVariableName = "User::varSSISOpsNF_AlertList";
        private const string NotificationFrameworkAlertListAllVariableName = "User::varSSISOpsNF_AlertList_All";
        private const string NotificationFrameworkCounter = "User::varSSISOpsNF_Notification_Counter";
        private const string NotificationFrameworkSubComponentName = "BI xPress Notification Framework Send Alert";

        private void UpdateAlertList()
        {
            System.Collections.Hashtable oRuntimeSettings = GetRuntimeSettings();

            string sFilteredAlerts = "|" + oRuntimeSettings["FILTERED_ALERTS"].ToString() + "|";

            string errorCodeValue = ReadVariable("System::ErrorCode").ToString();

            if (sFilteredAlerts.IndexOf("|" + errorCodeValue.ToString() + "|") >= 0)
                return; // Filter This

            string errorDescription = ReadVariable("System::ErrorDescription").ToString();
            string sourceName = ReadVariable("System::SourceName").ToString();
            string sourceId = ReadVariable("System::SourceID").ToString();

            bool isErrorScope = false;

            try
            {
                if (Dts.VariableDispenser.Contains("System::Cancel"))
                    isErrorScope = true;
                else
                    isErrorScope = false;
            }
            catch (Exception)
            {
                isErrorScope = false;
            }

            AlertType alertType = isErrorScope ? AlertType.ErrorAlert : AlertType.WarningAlert;

            int errorCode;

            if (string.IsNullOrEmpty(errorCodeValue) || !int.TryParse(errorCodeValue, out errorCode))
                errorCode = 0;

            AddAlertInfo(errorDescription, errorCode, sourceName, sourceId, alertType);
        }

        private void AddAlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
        {
            if (string.IsNullOrEmpty(alertDescription))
                alertDescription = "<NO ALERT DESCRIPTION GIVEN>";

            if (string.IsNullOrEmpty(sourceName))
                sourceName = "<NO ALERT SOURCE NAME GIVEN>";

            System.Text.StringBuilder alertListBuilder = new System.Text.StringBuilder();
            System.Text.StringBuilder alertListAllBuilder = new System.Text.StringBuilder();

            AlertInfo alertInfo = new AlertInfo(alertDescription, alertCode, sourceName, sourceId, alertType);

            System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(AlertInfo), new Type[] { typeof(AlertType) });

            // Build a flat list of XML AlertInfo elements that don't have to be validated each time we add new node(s).  This will save on processing time but will increase code complexity in the OnPostExecute event handler.
            using (System.IO.StringWriter stringWriter = new System.IO.StringWriter())
            {
                xmlSerializer.Serialize(stringWriter, alertInfo);

                System.Xml.XmlDocument alertInfoDocument = new System.Xml.XmlDocument();

                alertInfoDocument.LoadXml(stringWriter.GetStringBuilder().ToString());

                foreach (System.Xml.XmlNode documentNode in alertInfoDocument.ChildNodes)
                {
                    if (documentNode is System.Xml.XmlDeclaration || documentNode is System.Xml.XmlComment || documentNode is System.Xml.XmlAttribute || string.IsNullOrEmpty(documentNode.OuterXml))
                        continue;

                    string outerXml = documentNode.OuterXml;

                    outerXml = outerXml.Replace("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"", string.Empty).Replace("xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", string.Empty);

                    alertListBuilder.Append(outerXml);
                    alertListAllBuilder.Append(outerXml);
                }
            }

            string updatedAlertList = ReadVariable(NotificationFrameworkAlertListVariableName) as string;
            string existingAlertList;

            if (!string.IsNullOrEmpty(updatedAlertList))
                existingAlertList = updatedAlertList + alertListBuilder.ToString();
            else
                existingAlertList = alertListBuilder.ToString();

            WriteVariable(NotificationFrameworkAlertListVariableName, existingAlertList);

            string updatedAlertListAll = ReadVariable(NotificationFrameworkAlertListAllVariableName) as string;
            string existingAlertListAll;

            if (!string.IsNullOrEmpty(updatedAlertListAll))
                existingAlertListAll = updatedAlertListAll + alertListAllBuilder.ToString();
            else
                existingAlertListAll = alertListAllBuilder.ToString();
            
            WriteVariable(NotificationFrameworkAlertListAllVariableName, existingAlertListAll);
        }
        private void SetSetting(string SettingName, object Value, System.Collections.Hashtable runtimeSettings)
        {
            SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (!runtimeSettings.ContainsKey(SettingName))
                throw new Exception(SettingName + " setting doesn't exist in runtime setting list.");

            runtimeSettings[SettingName] = Value;
        }

        private object GetSetting(string settingName, System.Collections.Hashtable runtimeSettings)
        {
            settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (runtimeSettings.ContainsKey(settingName))
                return runtimeSettings[settingName];

            // If key not found then set default 
            switch (settingName)
            {
                case "MAX_NOTIFICATIONS":
                    return 1;
                case "ENABLE_ROWCOUNT_THRESHOLD":
                    return false;
                case "ENABLE_TIME_THRESHOLD":
                    return false;
                case "PRIORITY_MODE":
                    //// DELAYED (After Package) or URGENT (After Task) 
                    return "URGENT";
                case "EMAIL_FORMAT":
                    //// TEXT or HTML 
                    return "TEXT";
                case "SMTP_PORT":
                    //// Default 25 
                    return 25;
                case "SMTP_USESSL":
                    //// Default False
                    return false;
                case "SMTP_UID":
                    return "";
                case "SMTP_PWD":
                    return "";
                case "SMS_EMAILLIST":
                    ////Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                    return "";
                case "FILTERED_ALERTS":
                    ////Must be pipe seperated e.g. -2344556|-11223445 .... 
                    return "";
                case "NOTIFY_ONERROR":
                    return true;
                case "NOTIFY_ONWARNING":
                    return false;
                case "NOTIFY_ONSUCCESS":
                    return false;
                case "NOTIFY_ONCOMPLETE":
                    return false;
                case "SMS_MAXLENGTH":
                    return 160;
                case "NF_CHECK":
                    return "";
                case "CC_EMAILLIST":
                    return "";
                case "BCC_EMAILLIST":
                    return "";
                case "NOTIFY_USING_EMAIL":
                    return true;
                case "NOTIFY_USING_SMS":
                    return true;
                case "NOTIFY_USING_EVENTLOG":
                    return false;
                case "NOTIFY_USING_LOGFILE":
                    return false;
                case "LOG_FOLDER_PATH":
                    return "C:\\SSIS\\Log";
                case "DELETE_LOG_OLDER_THAN_DAYS":
                    return 5;
                case "USE_CUSTOM_EMAIL_TEMPLATE":
                    return false;
                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                    return "C:\\SSIS\\Config\\NF_EmailTemplate.htm";
                default:
                    return null;
            }
        }

        [Serializable]
        public enum AlertType
        {
            ErrorAlert = 1,
            WarningAlert = 2,
            TimeThresholdAlert = 3,
            RowCountThresholdAlert = 4
        }

        // NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
        // In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
        public System.Collections.Hashtable GetRuntimeSettings()
        {
            object otherConfigSettingsVariableValue = ReadVariable("User::varSSISOpsNF_OtherConfigSettings");
            string otherConfigSettings = otherConfigSettingsVariableValue != null ? otherConfigSettingsVariableValue.ToString() : null;

            System.Collections.Hashtable runtimeSettings = new System.Collections.Hashtable();

            // Set Default values
            runtimeSettings.Add("MAX_NOTIFICATIONS", 1);
            runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", false);
            runtimeSettings.Add("ENABLE_TIME_THRESHOLD", false);
            runtimeSettings.Add("PRIORITY_MODE", "DELAYED");
            runtimeSettings.Add("EMAIL_FORMAT", "HTML");
            runtimeSettings.Add("SMTP_PORT", 25);
            runtimeSettings.Add("SMTP_USESSL", false);
            runtimeSettings.Add("SMTP_UID", string.Empty);
            runtimeSettings.Add("SMTP_PWD", string.Empty);
            runtimeSettings.Add("SMS_EMAILLIST", string.Empty);
            runtimeSettings.Add("FILTERED_ALERTS", string.Empty);
            runtimeSettings.Add("NOTIFY_ONERROR", true);
            runtimeSettings.Add("NOTIFY_ONWARNING", false);
            runtimeSettings.Add("NOTIFY_ONSUCCESS", false);
            runtimeSettings.Add("NOTIFY_ONCOMPLETE", false);
            runtimeSettings.Add("SMS_MAXLENGTH", 160);
            runtimeSettings.Add("CC_EMAILLIST", string.Empty);
            runtimeSettings.Add("BCC_EMAILLIST", string.Empty);
            runtimeSettings.Add("NOTIFY_USING_EMAIL", true);
            runtimeSettings.Add("NOTIFY_USING_SMS", true);
            runtimeSettings.Add("NOTIFY_USING_EVENTLOG", false);
            runtimeSettings.Add("NOTIFY_USING_LOGFILE", false);
            runtimeSettings.Add("LOG_FOLDER_PATH", "C:\\SSIS\\Log");
            runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5);
            runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", false);
            runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\\SSIS\\Config\\NF_EmailTemplate.htm");

            if (!string.IsNullOrEmpty(otherConfigSettings))
            {
                // Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

                const string PAIR_SEP = ";";
                const string NAMEVAL_SEP = "=";

                string[] arrNameValue = otherConfigSettings.Split(PAIR_SEP.ToCharArray());

                foreach (string sPair in arrNameValue)
                {
                    string[] arrTemp = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries);

                    try
                    {
                        if (arrTemp.Length >= 2)
                        {
                            string settingName = arrTemp[0];
                            string settingValue = arrTemp[1];

                            switch (settingName.ToUpper().Trim())
                            {
                                case "MAX_NOTIFICATIONS":
                                    runtimeSettings["MAX_NOTIFICATIONS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "ENABLE_ROWCOUNT_THRESHOLD":
                                    runtimeSettings["ENABLE_ROWCOUNT_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "ENABLE_TIME_THRESHOLD":
                                    runtimeSettings["ENABLE_TIME_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "PRIORITY_MODE":
                                    // DELAYED (After Package) or URGENT (After Task) 
                                    runtimeSettings["PRIORITY_MODE"] = (string)settingValue;
                                    break;
                                case "EMAIL_FORMAT":
                                    // TEXT or HTML 
                                    runtimeSettings["EMAIL_FORMAT"] = (string)settingValue;
                                    break;
                                case "SMTP_PORT":
                                    // Default 25 
                                    runtimeSettings["SMTP_PORT"] = Convert.ToInt32(settingValue);
                                    break;
                                case "SMTP_USESSL":
                                    // Default false
                                    runtimeSettings["SMTP_USESSL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMTP_UID":
                                    runtimeSettings["SMTP_UID"] = (string)settingValue;
                                    break;
                                case "SMTP_PWD":
                                    runtimeSettings["SMTP_PWD"] = (string)settingValue;
                                    break;
                                case "SMS_EMAILLIST":
                                    // Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                    runtimeSettings["SMS_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "FILTERED_ALERTS":
                                    ////Must be pipe seperated e.g. -111|-222 .... 
                                    runtimeSettings["FILTERED_ALERTS"] = (string)settingValue;
                                    break;
                                case "NOTIFY_ONERROR":
                                    runtimeSettings["NOTIFY_ONERROR"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONWARNING":
                                    runtimeSettings["NOTIFY_ONWARNING"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONSUCCESS":
                                    runtimeSettings["NOTIFY_ONSUCCESS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONCOMPLETE":
                                    runtimeSettings["NOTIFY_ONCOMPLETE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMS_MAXLENGTH":
                                    runtimeSettings["SMS_MAXLENGTH"] = Convert.ToInt32(settingValue);
                                    break;
                                case "CC_EMAILLIST":
                                    runtimeSettings["CC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "BCC_EMAILLIST":
                                    runtimeSettings["BCC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "NOTIFY_USING_EMAIL":
                                    runtimeSettings["NOTIFY_USING_EMAIL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_SMS":
                                    runtimeSettings["NOTIFY_USING_SMS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_EVENTLOG":
                                    runtimeSettings["NOTIFY_USING_EVENTLOG"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_LOGFILE":
                                    runtimeSettings["NOTIFY_USING_LOGFILE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "LOG_FOLDER_PATH":
                                    runtimeSettings["LOG_FOLDER_PATH"] = (string)settingValue;
                                    break;
                                case "DELETE_LOG_OLDER_THAN_DAYS":
                                    runtimeSettings["DELETE_LOG_OLDER_THAN_DAYS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "USE_CUSTOM_EMAIL_TEMPLATE":
                                    runtimeSettings["USE_CUSTOM_EMAIL_TEMPLATE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                                    runtimeSettings["CUSTOM_EMAIL_TEMPLATE_FILEPATH"] = (string)settingValue;
                                    break;
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, string.Empty, 0);
                    }
                }
            }

            SetNF(runtimeSettings);

            WriteVariable(NotificationFrameworkCounter, 0);

            return runtimeSettings;
        }

        public void SetNF(Hashtable runtimeSettings)
        {
            runtimeSettings.Add(((Char)78).ToString() + ((Char)70).ToString() + ((Char)95).ToString() + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString(), ReadVariable("User::varSSISOpsNF_" + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString()));
        }

        [Serializable]
        public class AlertInfo
        {
            /// <summary>
            /// Retained for serialization purposes.
            /// </summary>
            public AlertInfo()
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
                : this(alertDescription, alertCode, sourceName, sourceId, alertType, DateTime.Now)
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType, DateTime timeStamp)
            {
                AlertCode = alertCode;
                AlertDescription = alertDescription;
                AlertType = alertType;
                SourceName = sourceName;
                SourceId = sourceId;
                AlertTimeStamp = timeStamp;
            }

            public int AlertCode { get; set; }
            public string AlertDescription { get; set; }
            public DateTime AlertTimeStamp { get; set; }
            public AlertType AlertType { get; set; }
            public string SourceId { get; set; }
            public string SourceName { get; set; }
        }

        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_5c07dcb308244373ac228437edfa7dc7.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8d54688c-3512-4a1e-a2db-b4f1cfb824e7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_5c07dcb308244373ac228437edfa7dc7</RootNamespace>
    <AssemblyName>st_5c07dcb308244373ac228437edfa7dc7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_5c07dcb308244373ac228437edfa7dc7</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_5c07dcb308244373ac228437edfa7dc7</msb:DisplayName>
		<msb:ProjectId>{8127482A-DBD0-4C97-B01A-B281EA7BF31D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_5c07dcb308244373ac228437edfa7dc7.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_5c07dcb308244373ac228437edfa7dc7.Properties.Settings.get_Default():st_5c07dcb308244373ac228437edfa7dc7.Properties.Sett" +
    "ings")]

namespace st_5c07dcb308244373ac228437edfa7dc7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_5c07dcb308244373ac228437edfa7dc7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_5c07dcb308244373ac228437edfa7dc7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_5c07dcb308244373ac228437edfa7dc7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_5c07dcb308244373ac228437edfa7dc7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_5c07dcb308244373ac228437edfa7dc7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_5c07dcb308244373ac228437edfa7dc7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOleolcAAAAAAAAAAOAAAiELAQsAADYAAAAIAAAAAAAAblUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABxVAABPAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdDUAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
VQAAAAAAAEgAAAACAAUAmDEAAIQjAAABAAAAAAAAAOAwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqTgIoCQAABgIoFgAAChZvFwAACioAGzAGAOUAAAACAAARAigNAAAGCnJz
AABwBnJ3AABwbxgAAApvGQAACnJzAABwKBoAAAoLAnKXAABwKBAAAAZvGQAACgwHcnMAAHAIbxkA
AApycwAAcCgaAAAKbxsAAAoWMgEqAnK7AABwKBAAAAZvGQAACg0Ccu0AAHAoEAAABm8ZAAAKEwQC
chMBAHAoEAAABm8ZAAAKEwUWEwYCKBYAAApvHAAACnI1AQBwbx0AAAosBRcTBisDFhMG3gYmFhMG
3gARBi0DGCsBFxMHCCgeAAAKLQoIEggoHwAACi0DFhMIAgkRCBEEEQURBygKAAAGKgAAAAEQAAAA
AI8AIbAABiEAAAEbMAUAvgEAAAMAABEDKB4AAAosB3JTAQBwEAEFKB4AAAosB3KNAQBwEANzIAAA
CgpzIAAACgsDBAUOBA4FcxMAAAYM0AcAAAIoDwAACheNFgAAARMMEQwW0AYAAAIoDwAACqIRDHMh
AAAKDXMiAAAKEwQJEQQIbyMAAApzJAAAChMFEQURBG8lAAAKbxkAAApvJgAAChEFbycAAApvKAAA
ChMNK3QRDW8pAAAKdCcAAAETBhEGdSoAAAEtXREGdSsAAAEtVBEGdSwAAAEtSxEGbyoAAAooHgAA
Ci09EQZvKgAAChMHEQdyxwEAcH4rAAAKbywAAApyIQIAcH4rAAAKbywAAAoTBwYRB28tAAAKJgcR
B28tAAAKJhENby4AAAotg94VEQ11LQAAARMOEQ4sBxEOby8AAArc3gwRBCwHEQRvLwAACtwCco0C
AHAoEAAABnUeAAABEwgRCCgeAAAKLRERCAZvGQAACigwAAAKEwkrCAZvGQAAChMJAnKNAgBwEQko
DwAABgJyxwIAcCgQAAAGdR4AAAETChEKKB4AAAotEREKB28ZAAAKKDAAAAoTCysIB28ZAAAKEwsC
cscCAHARCygPAAAGKgAAARwAAAIAlwCBGAEVAAAAAAIAZgDJLwEMAAAAANYDKDEAAApvMgAACm8z
AAAKEAEFA280AAAKLREDcgkDAHAoMAAACnM1AAAKegUDBG82AAAKKgAAEzAEAN8CAAAEAAARAygx
AAAKbzIAAApvMwAAChABBANvNAAACiwIBANvGAAACioDJQo5sgIAAP4TfhYAAAQ6ZAEAAB8bczcA
AAolcmkDAHAWKDgAAAolco0DAHAXKDgAAAolcsEDAHAYKDgAAAolcu0DAHAZKDgAAAolcgkEAHAa
KDgAAAolciMEAHAbKDgAAAolcjcEAHAcKDgAAAolck8EAHAdKDgAAAolcmEEAHAeKDgAAAolcnME
AHAfCSg4AAAKJXJ3AABwHwooOAAACiVyjwQAcB8LKDgAAAolcq0EAHAfDCg4AAAKJXLPBABwHw0o
OAAACiVy8QQAcB8OKDgAAAolchUFAHAfDyg4AAAKJXIxBQBwHxAoOAAACiVyQwUAcB8RKDgAAAol
cl0FAHAfEig4AAAKJXJ5BQBwHxMoOAAACiVynwUAcB8UKDgAAAolcsEFAHAfFSg4AAAKJXLtBQBw
HxYoOAAACiVyFwYAcB8XKDgAAAolcjcGAHAfGCg4AAAKJXJtBgBwHxkoOAAACiVyoQYAcB8aKDgA
AAr+E4AWAAAE/hN+FgAABAYSASg5AAAKOS4BAAAHRRsAAAAFAAAADAAAABMAAAAaAAAAIAAAACYA
AAAuAAAANQAAADsAAABBAAAARwAAAE0AAABUAAAAWwAAAGIAAABpAAAAdAAAAHoAAACAAAAAhgAA
AI0AAACUAAAAmwAAAKIAAACoAAAArwAAALYAAAA4twAAABeMIAAAASoWjC8AAAEqFowvAAABKnLf
BgBwKnLtBgBwKh8ZjCAAAAEqFowvAAABKnL3BgBwKnL3BgBwKnL3BgBwKnL3BgBwKheMLwAAASoW
jC8AAAEqFowvAAABKhaMLwAAASogoAAAAIwgAAABKnL3BgBwKnL3BgBwKnL3BgBwKheMLwAAASoX
jC8AAAEqFowvAAABKhaMLwAAASpy+QYAcCobjCAAAAEqFowvAAABKnIRBwBwKhQqABswBgDiBgAA
BQAAEQJyWQcAcCgQAAAGCgYtAxQrBgZvGQAACgtzOgAACgwIcmkDAHAXjCAAAAFvOwAACghyjQMA
cBaMLwAAAW87AAAKCHLBAwBwFowvAAABbzsAAAoIcu0DAHBypwcAcG87AAAKCHIJBABwcrcHAHBv
OwAACghyIwQAcB8ZjCAAAAFvOwAACghyNwQAcBaMLwAAAW87AAAKCHJPBABwfisAAApvOwAACghy
YQQAcH4rAAAKbzsAAAoIcnMEAHB+KwAACm87AAAKCHJ3AABwfisAAApvOwAACghyjwQAcBeMLwAA
AW87AAAKCHKtBABwFowvAAABbzsAAAoIcs8EAHAWjC8AAAFvOwAACghy8QQAcBaMLwAAAW87AAAK
CHIVBQBwIKAAAACMIAAAAW87AAAKCHJDBQBwfisAAApvOwAACghyXQUAcH4rAAAKbzsAAAoIcnkF
AHAXjC8AAAFvOwAACghynwUAcBeMLwAAAW87AAAKCHLBBQBwFowvAAABbzsAAAoIcu0FAHAWjC8A
AAFvOwAACghyFwYAcHL5BgBwbzsAAAoIcjcGAHAbjCAAAAFvOwAACghybQYAcBaMLwAAAW87AAAK
CHKhBgBwchEHAHBvOwAACgcoHgAACjrpBAAAB3LBBwBwbzwAAApvPQAACg0JEwkWEwo4wgQAABEJ
EQqaEwQRBHLFBwBwbzwAAAoYF28+AAAKEwURBY5pGD9sBAAAEQUWmhMGEQUXmhMHEQZvPwAACm8z
AAAKJRMLOUwEAAD+E34XAAAEOlcBAAAfGnM3AAAKJXJpAwBwFig4AAAKJXKNAwBwFyg4AAAKJXLB
AwBwGCg4AAAKJXLtAwBwGSg4AAAKJXIJBABwGig4AAAKJXIjBABwGyg4AAAKJXI3BABwHCg4AAAK
JXJPBABwHSg4AAAKJXJhBABwHig4AAAKJXJzBABwHwkoOAAACiVydwAAcB8KKDgAAAolco8EAHAf
Cyg4AAAKJXKtBABwHwwoOAAACiVyzwQAcB8NKDgAAAolcvEEAHAfDig4AAAKJXIVBQBwHw8oOAAA
CiVyQwUAcB8QKDgAAAolcl0FAHAfESg4AAAKJXJ5BQBwHxIoOAAACiVynwUAcB8TKDgAAAolcsEF
AHAfFCg4AAAKJXLtBQBwHxUoOAAACiVyFwYAcB8WKDgAAAolcjcGAHAfFyg4AAAKJXJtBgBwHxgo
OAAACiVyoQYAcB8ZKDgAAAr+E4AXAAAE/hN+FwAABBELEgwoOQAACjnUAgAAEQxFGgAAAAUAAAAh
AAAAPQAAAFkAAABrAAAAfQAAAJkAAAC1AAAAxwAAANkAAADrAAAA/QAAABkBAAA1AQAAUQEAAG0B
AACJAQAAmwEAAK0BAADJAQAA5QEAAP4BAAAXAgAAJgIAAD8CAABYAgAAOGACAAAIcmkDAHARByhA
AAAKjCAAAAFvNgAACjhEAgAACHKNAwBwEQcoQQAACowvAAABbzYAAAo4KAIAAAhywQMAcBEHKEEA
AAqMLwAAAW82AAAKOAwCAAAIcu0DAHARB282AAAKOPoBAAAIcgkEAHARB282AAAKOOgBAAAIciME
AHARByhAAAAKjCAAAAFvNgAACjjMAQAACHI3BABwEQcoQQAACowvAAABbzYAAAo4sAEAAAhyTwQA
cBEHbzYAAAo4ngEAAAhyYQQAcBEHbzYAAAo4jAEAAAhycwQAcBEHbzYAAAo4egEAAAhydwAAcBEH
bzYAAAo4aAEAAAhyjwQAcBEHKEEAAAqMLwAAAW82AAAKOEwBAAAIcq0EAHARByhBAAAKjC8AAAFv
NgAACjgwAQAACHLPBABwEQcoQQAACowvAAABbzYAAAo4FAEAAAhy8QQAcBEHKEEAAAqMLwAAAW82
AAAKOPgAAAAIchUFAHARByhAAAAKjCAAAAFvNgAACjjcAAAACHJDBQBwEQdvNgAACjjKAAAACHJd
BQBwEQdvNgAACji4AAAACHJ5BQBwEQcoQQAACowvAAABbzYAAAo4nAAAAAhynwUAcBEHKEEAAAqM
LwAAAW82AAAKOIAAAAAIcsEFAHARByhBAAAKjC8AAAFvNgAACitnCHLtBQBwEQcoQQAACowvAAAB
bzYAAAorTghyFwYAcBEHbzYAAAorPwhyNwYAcBEHKEAAAAqMIAAAAW82AAAKKyYIcm0GAHARByhB
AAAKjC8AAAFvNgAACisNCHKhBgBwEQdvNgAACt4oEwgCKBYAAApvQgAAChZyyQcAcBEIb0MAAAp+
KwAAChZvRAAACibeABEKF1gTChEKEQmOaT8z+///AggoDgAABgJyJwgAcBaMIAAAASgPAAAGCCoA
AEEcAAAAAAAAFwIAAHgEAACPBgAAKAAAACEAAAETMAYA6gAAAAYAABEDHo0eAAABCgYWH04LEgEo
RQAACqIGFx9GDBICKEUAAAqiBhgfXw0SAyhFAAAKogYZH0MTBBIEKEUAAAqiBhofSBMFEgUoRQAA
CqIGGx9FEwYSBihFAAAKogYcH0MTBxIHKEUAAAqiBh0fSxMIEggoRQAACqIGKEYAAAoCHI0eAAAB
EwkRCRZydwgAcKIRCRcfQxMKEgooRQAACqIRCRgfSBMLEgsoRQAACqIRCRkfRRMMEgwoRQAACqIR
CRofQxMNEg0oRQAACqIRCRsfSxMOEg4oRQAACqIRCShGAAAKKBAAAAZvOwAACioAABswAgBnAAAA
BwAAERQKFgsCKBYAAApvHAAACgNvRwAACgIoFgAACm8cAAAKEgBvSAAACgYDb0kAAAoEb0oAAAre
DAYsCAZvSwAAChcL3N4TJgIoFgAACm8cAAAKb0wAAAr+Gt4NBiwJBy0GBm9LAAAK3CoAASgAAAIA
JwAPNgAMAAAAAAAABABARAATIQAAAQIABABVWQANAAAAABswAgBoAAAACAAAERQKFgsCKBYAAApv
HAAACgNvTQAACgIoFgAACm8cAAAKEgBvSAAACgYDb0kAAApvTgAACgzeDAYsCAZvSwAAChcL3N4T
JgIoFgAACm8cAAAKb0wAAAr+Gt4NBiwJBy0GBm9LAAAK3AgqASgAAAIAJwAPNgAMAAAAAAAABABA
RAATIQAAAQIABABVWQANAAAAAB4CKE8AAAoqHgIoDgAACipOAgMEBQ4EDgUoUQAACigUAAAGKtIC
KA4AAAoCBCgWAAAGAgMoGAAABgIOBSgcAAAGAgUoIAAABgIOBCgeAAAGAg4GKBoAAAYqHgJ7EAAA
BCoiAgN9EAAABCoeAnsRAAAEKiICA30RAAAEKh4CexIAAAQqIgIDfRIAAAQqHgJ7EwAABCoiAgN9
EwAABCoeAnsUAAAEKiICA30UAAAEKh4CexUAAAQqIgIDfRUAAAQqAAAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAYAkAACN+AADMCQAAyAwAACNTdHJp
bmdzAAAAAJQWAACgCAAAI1VTADQfAAAQAAAAI0dVSUQAAABEHwAAQAQAACNCbG9iAAAAAAAAAAIA
AAFXHaIJCQMAAAD6JTMAFgAAAQAAADYAAAAIAAAAFwAAACAAAAAgAAAAUQAAAAoAAAAiAAAACAAA
AAMAAAAJAAAAEAAAAAEAAAABAAAABQAAAAEAAAADAAAAAAAKAAEAAAAAAAYA1QDOAAoA8QDcAA4A
UQEoAQYAbQHOAAYAgwFyAQYAtAGfAQYA/wLsAgYArQPOAAYADgb0BQYAOQYnBgYAUAYnBgYAbQYn
BgYAjAYnBgYApQYnBgYAvgYnBgYA2QYnBgYA9AYnBgYADQcnBgYARgcmBwYAZgcmBwYAlweEBwYA
tAfOAAYAuQfOAAYA3QcnBgoACQjzBwoAIgjzBwYANwgmBw4AWQgoAQ4AewgoAQYAtgjOABIACwnr
CAYASgnOAAYAWQnOAAYAbwljCRYAoQmICQYAuQmvCQYAxgmvCRYA2wl9CRYAAAp9CRYACAp9CQYA
IwrsAhYASQp9CRYAWAp9CRYAYwp9CQYAmwrOAAYARgsrCwYAdwvOAAYAkQvOAAYAuAvOAA4A0gso
AQYABwzOABIAGQzrCBIAMAzrCAYAZgzOAAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAA
awA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAgAEgACIQAAsQAAABEACwASAAIgEAC7
AAAABQAQABIAAAAAAOYKAAAFABYAIQARAJMBEwARAMABFwARAAoCOQBRgC4CRwBRgFkCRwBRgIcC
RwBRgKQCRwAGBlMDmQFWgFsDnAFWgGMDnAEGBlMDmQFWgGsDqgFWgHYDqgFWgIMDqgFWgJYDqgEB
AHYEmQEBAJEERwABALME8QEBANMEqgEBAO4ERwABAAgFRwATAFML4AITAKQL4AJQIAAAAACDGNAB
GwABAFggAAAAAJMI1gEfAAEAkSAAAAAAkwjqASQAAQCYIAAAAACTCPYBKQABAKAgAAAAAJYIGgI9
AAIAsyAAAAAAhhjQARsAAgCnIAAAAACRGFIILgICALsgAAAAAIYAygIbAAIA0CAAAAAAgQDPAhsA
AgDUIQAAAACBAN8CagECALwjAAAAAIEACQN0AQcA9CMAAAAAgQAUA3wBCgDgJgAAAACGAB8DgwEM
AOwtAAAAAIYAMgOIAQwA5C4AAAAAgQA4A44BDQCALwAAAACBAEYDlAEPABwwAAAAAIYY0AEbABAA
JDAAAAAAhhjQARsAEAAsMAAAAACGGNABagEQAEAwAAAAAIYY0AG9ARUAdTAAAAAAhgi2A8kBGwB9
MAAAAACGCMQDzQEbAIYwAAAAAIYI0gPSARwAjjAAAAAAhgjnA9YBHACXMAAAAACGCPwD2wEdAJ8w
AAAAAIYIDwTgAR0AqDAAAAAAhggiBOYBHgCwMAAAAACGCDAE6wEeALkwAAAAAIYIPgTSAR8AwTAA
AAAAhghLBNYBHwDKMAAAAACGCFgE0gEgANIwAAAAAIYIZwTWASAAAAABAGIFAAABAGgFAAACAHkF
AAADAIMFAAAEAI4FAAAFAJcFAAABAKEFAAACAK0FAAADALMFAAABAMMFAAACALMFAAABALMFAAAB
AM8FAAACANwFAAABAM8FAAABAGgFAAACAHkFAAADAIMFAAAEAI4FAAAFAJcFAAABAGgFAAACAHkF
AAADAIMFAAAEAI4FAAAFAJcFAAAGAOoFAAABAGIFAAABAGIFAAABAGIFAAABAGIFAAABAGIFAAAB
AGIFSQDQAdYBUQDQAdYBWQDQAdYBYQDQAdYBaQDQAdYBcQDQAdYBeQDQAdYBgQDQAdYBiQDQAdYB
kQDQAdYBmQDQAc0BoQDQARsAqQDQARsACQDQARsAsQDLBwcCsQDmBw4CKQDQARMCyQDQAR8C2QDQ
ARsAEQDQARsA4QDQARsAGQCNCDIC6QCVCM0BOQCkCDcCCQCtCNIB8QC9CDwC8QDECEMC6QAdCUgC
+QAzCU0C8QA8CVICAQFQCVcCEQHQARsAGQHQAWwCIQHQARsAGQHRCXUCMQHQARsAIQHnCX0CMQH4
CdYBOQEUCoMCQQEvCokCSQE9Co8COQFwCtIB8QB9CkcA8QCDCpMCEQGLCpkCSQGSCqACaQGnChsA
8QC9CKQCMQCvCiQA8QDECs8C8QDMCtIBOQDRCtUCCQHQAdYBOQDdCtoCDADQAc0BDABnC/ECDABr
C/kCOQDQARsAOQBnC9oC8QB/CwcD8QCLCwwD8QCLCxMD8QDECtIBiQHACx4DiQHIC1IC6QDmCyMD
CQHxC9IBkQH9CykDmQGtCNIB8QC9CEgD+QAMDNYB+QAjDGIDoQGkCGoDqQE5DHEDoQFDDBsA+QBK
DBsA+QBQDNYBqQFcDI8CGQDQARsAsQHQARsAQQB8DIUDDgAQAEoADgAUAIMADgAYAMQADgAcABMB
CAAkAKABCAAoAKUBCAAwAKUBCAA0AK4BCAA4ALMBCAA8ALgBKQCTACUCLgBbABgELgBDAPsDLgBj
ACEELgALAIoDLgATANIDLgAbAPsDLgAjAPsDLgArAPsDLgAzANIDLgA7AAEEQwBrAKUBSQCTACUC
YQCbAKUBgwCrAKUBAwGbAKUBAQKbAKUBIQKbAKUBQQKbAKUBYQKbAKUBgQKbAKUBoAKbAKUBoQKb
AKUBwAKbAKUB4AKbAKUBAAObAKUBIAObAKUBQAObAKUBYAObAKUBgAObAKUBoAObAKUBwAObAKUB
4AObAKUBAASbAKUBGgJeAqoCAgMyA04DdgN9AwIAAQADAAMABwAEAAAAgwEvAAAAAgI0AAAAJgJC
AAAAJAX1AQAALgX5AQAAPwX9AQAAsQACAgAATgX5AQAAVwX5AQIAAgADAAEABAAFAAIAAwAFAAIA
BQAHAAIAFQAJAAEAFgAJAAEAGAALAAIAFwALAAIAGQANAAEAGgANAAEAHAAPAAIAGwAPAAEAHgAR
AAIAHQARAAIAHwATAAEAIAATAOkCBIAAAAEAAACrFzRdAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEA
xQAAAAAABAAAAAAAAAAAAAAAAQDOAAAAAAAMAAAAAAAAAAAAAAAKAAkBAAAAAAwAAAAAAAAAAAAA
AAoAzAgAAAAABAAAAAAAAAAAAAAAAQB9CQAAAAAAAAAAAQAAAIQMAAAFAAQABgAEAAcABAAAAAAA
ADxNb2R1bGU+AHN0XzVjMDdkY2IzMDgyNDQzNzNhYzIyODQzN2VkZmE3ZGM3LmRsbABSZXNvdXJj
ZXMAc3RfNWMwN2RjYjMwODI0NDM3M2FjMjI4NDM3ZWRmYTdkYzcuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAHN0XzVjMDdkY2IzMDgyNDQzNzNhYzIyODQzN2VkZmE3ZGM3AFNjcmlwdFJl
c3VsdHMAQWxlcnRUeXBlAEFsZXJ0SW5mbwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5D
b25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5h
Z2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNl
Q3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATm90aWZpY2F0aW9u
RnJhbWV3b3JrQWxlcnRMaXN0VmFyaWFibGVOYW1lAE5vdGlmaWNhdGlvbkZyYW1ld29ya0FsZXJ0
TGlzdEFsbFZhcmlhYmxlTmFtZQBOb3RpZmljYXRpb25GcmFtZXdvcmtDb3VudGVyAE5vdGlmaWNh
dGlvbkZyYW1ld29ya1N1YkNvbXBvbmVudE5hbWUATWFpbgBVcGRhdGVBbGVydExpc3QAQWRkQWxl
cnRJbmZvAFN5c3RlbS5Db2xsZWN0aW9ucwBIYXNodGFibGUAU2V0U2V0dGluZwBHZXRTZXR0aW5n
AEdldFJ1bnRpbWVTZXR0aW5ncwBTZXRORgBXcml0ZVZhcmlhYmxlAFJlYWRWYXJpYWJsZQB2YWx1
ZV9fAFN1Y2Nlc3MARmFpbHVyZQBFcnJvckFsZXJ0AFdhcm5pbmdBbGVydABUaW1lVGhyZXNob2xk
QWxlcnQAUm93Q291bnRUaHJlc2hvbGRBbGVydABEYXRlVGltZQBnZXRfQWxlcnRDb2RlAHNldF9B
bGVydENvZGUAZ2V0X0FsZXJ0RGVzY3JpcHRpb24Ac2V0X0FsZXJ0RGVzY3JpcHRpb24AZ2V0X0Fs
ZXJ0VGltZVN0YW1wAHNldF9BbGVydFRpbWVTdGFtcABnZXRfQWxlcnRUeXBlAHNldF9BbGVydFR5
cGUAZ2V0X1NvdXJjZUlkAHNldF9Tb3VyY2VJZABnZXRfU291cmNlTmFtZQBzZXRfU291cmNlTmFt
ZQA8QWxlcnRDb2RlPmtfX0JhY2tpbmdGaWVsZAA8QWxlcnREZXNjcmlwdGlvbj5rX19CYWNraW5n
RmllbGQAPEFsZXJ0VGltZVN0YW1wPmtfX0JhY2tpbmdGaWVsZAA8QWxlcnRUeXBlPmtfX0JhY2tp
bmdGaWVsZAA8U291cmNlSWQ+a19fQmFja2luZ0ZpZWxkADxTb3VyY2VOYW1lPmtfX0JhY2tpbmdG
aWVsZABBbGVydENvZGUAQWxlcnREZXNjcmlwdGlvbgBBbGVydFRpbWVTdGFtcABTb3VyY2VJZABT
b3VyY2VOYW1lAHZhbHVlAGFsZXJ0RGVzY3JpcHRpb24AYWxlcnRDb2RlAHNvdXJjZU5hbWUAc291
cmNlSWQAYWxlcnRUeXBlAFNldHRpbmdOYW1lAFZhbHVlAHJ1bnRpbWVTZXR0aW5ncwBzZXR0aW5n
TmFtZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQB0aW1lU3RhbXAAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRN
b2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAHNldF9UYXNrUmVzdWx0AGdldF9JdGVtAFRv
U3RyaW5nAFN0cmluZwBDb25jYXQASW5kZXhPZgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZURpc3BlbnNlcgBnZXRf
VmFyaWFibGVEaXNwZW5zZXIAQ29udGFpbnMASXNOdWxsT3JFbXB0eQBJbnQzMgBUcnlQYXJzZQBF
eGNlcHRpb24AU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBTeXN0ZW0uWG1sAFN5c3RlbS5YbWwu
U2VyaWFsaXphdGlvbgBYbWxTZXJpYWxpemVyAFN5c3RlbS5JTwBTdHJpbmdXcml0ZXIAVGV4dFdy
aXRlcgBTZXJpYWxpemUAWG1sRG9jdW1lbnQAR2V0U3RyaW5nQnVpbGRlcgBMb2FkWG1sAFhtbE5v
ZGUAWG1sTm9kZUxpc3QAZ2V0X0NoaWxkTm9kZXMASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBn
ZXRfQ3VycmVudABYbWxEZWNsYXJhdGlvbgBYbWxDb21tZW50AFhtbEF0dHJpYnV0ZQBnZXRfT3V0
ZXJYbWwARW1wdHkAUmVwbGFjZQBBcHBlbmQATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBn
ZXRfSW52YXJpYW50Q3VsdHVyZQBUb1VwcGVyAFRyaW0AQ29udGFpbnNLZXkAc2V0X0l0ZW0APFBy
aXZhdGVJbXBsZW1lbnRhdGlvbkRldGFpbHM+e0ZCOURFQTEyLUU2MkEtNDVGQS04NDg0LTM1MDI2
NDU4NzEyMH0AU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMARGljdGlvbmFyeWAyACQkbWV0aG9k
MHg2MDAwMDBiLTEAQWRkAFRyeUdldFZhbHVlAEJvb2xlYW4AVG9DaGFyQXJyYXkAU3BsaXQAU3Ry
aW5nU3BsaXRPcHRpb25zACQkbWV0aG9kMHg2MDAwMDBjLTEAQ29udmVydABUb0ludDMyAFRvQm9v
bGVhbgBFdmVudHNPYmplY3RXcmFwcGVyAGdldF9FdmVudHMAZ2V0X01lc3NhZ2UARmlyZUVycm9y
AENoYXIATG9ja0ZvcldyaXRlAFZhcmlhYmxlcwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAc2V0X1Zh
bHVlAFVubG9jawBSZXNldABMb2NrRm9yUmVhZABnZXRfVmFsdWUAU2VyaWFsaXphYmxlQXR0cmli
dXRlAGdldF9Ob3cAc3RfNWMwN2RjYjMwODI0NDM3M2FjMjI4NDM3ZWRmYTdkYzcuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAcXMAdABfADUAYwAwADcAZABjAGIAMwAwADgAMgA0ADQA
MwA3ADMAYQBjADIAMgA4ADQAMwA3AGUAZABmAGEANwBkAGMANwAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAA3wAAB9GAEkATABUAEUAUgBFAEQAXwBBAEwARQBSAFQA
UwAAI1MAeQBzAHQAZQBtADoAOgBFAHIAcgBvAHIAQwBvAGQAZQAAMVMAeQBzAHQAZQBtADoAOgBF
AHIAcgBvAHIARABlAHMAYwByAGkAcAB0AGkAbwBuAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIA
YwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoAUwBvAHUAcgBjAGUASQBEAAAdUwB5AHMAdABl
AG0AOgA6AEMAYQBuAGMAZQBsAAA5PABOAE8AIABBAEwARQBSAFQAIABEAEUAUwBDAFIASQBQAFQA
SQBPAE4AIABHAEkAVgBFAE4APgAAOTwATgBPACAAQQBMAEUAUgBUACAAUwBPAFUAUgBDAEUAIABO
AEEATQBFACAARwBJAFYARQBOAD4AAFl4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8A
LwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAAGt4
AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8A
MgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAATlVAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAEEAbABlAHIAdABMAGkAcwB0AABBVQBzAGUA
cgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABs
AABfIABzAGUAdAB0AGkAbgBnACAAZABvAGUAcwBuACcAdAAgAGUAeABpAHMAdAAgAGkAbgAgAHIA
dQBuAHQAaQBtAGUAIABzAGUAdAB0AGkAbgBnACAAbABpAHMAdAAuAAEjTQBBAFgAXwBOAE8AVABJ
AEYASQBDAEEAVABJAE8ATgBTAAAzRQBOAEEAQgBMAEUAXwBSAE8AVwBDAE8AVQBOAFQAXwBUAEgA
UgBFAFMASABPAEwARAAAK0UATgBBAEIATABFAF8AVABJAE0ARQBfAFQASABSAEUAUwBIAE8ATABE
AAAbUABSAEkATwBSAEkAVABZAF8ATQBPAEQARQAAGUUATQBBAEkATABfAEYATwBSAE0AQQBUAAAT
UwBNAFQAUABfAFAATwBSAFQAABdTAE0AVABQAF8AVQBTAEUAUwBTAEwAABFTAE0AVABQAF8AVQBJ
AEQAABFTAE0AVABQAF8AUABXAEQAABtTAE0AUwBfAEUATQBBAEkATABMAEkAUwBUAAAdTgBPAFQA
SQBGAFkAXwBPAE4ARQBSAFIATwBSAAAhTgBPAFQASQBGAFkAXwBPAE4AVwBBAFIATgBJAE4ARwAA
IU4ATwBUAEkARgBZAF8ATwBOAFMAVQBDAEMARQBTAFMAACNOAE8AVABJAEYAWQBfAE8ATgBDAE8A
TQBQAEwARQBUAEUAABtTAE0AUwBfAE0AQQBYAEwARQBOAEcAVABIAAARTgBGAF8AQwBIAEUAQwBL
AAAZQwBDAF8ARQBNAEEASQBMAEwASQBTAFQAABtCAEMAQwBfAEUATQBBAEkATABMAEkAUwBUAAAl
TgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBFAE0AQQBJAEwAACFOAE8AVABJAEYAWQBfAFUAUwBJ
AE4ARwBfAFMATQBTAAArTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBFAFYARQBOAFQATABPAEcA
AClOAE8AVABJAEYAWQBfAFUAUwBJAE4ARwBfAEwATwBHAEYASQBMAEUAAB9MAE8ARwBfAEYATwBM
AEQARQBSAF8AUABBAFQASAAANUQARQBMAEUAVABFAF8ATABPAEcAXwBPAEwARABFAFIAXwBUAEgA
QQBOAF8ARABBAFkAUwAAM1UAUwBFAF8AQwBVAFMAVABPAE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQ
AEwAQQBUAEUAAD1DAFUAUwBUAE8ATQBfAEUATQBBAEkATABfAFQARQBNAFAATABBAFQARQBfAEYA
SQBMAEUAUABBAFQASAAADVUAUgBHAEUATgBUAAAJVABFAFgAVAAAAQAXQwA6AFwAUwBTAEkAUwBc
AEwAbwBnAABHQwA6AFwAUwBTAEkAUwBcAEMAbwBuAGYAaQBnAFwATgBGAF8ARQBtAGEAaQBsAFQA
ZQBtAHAAbABhAHQAZQAuAGgAdABtAABNVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBO
AEYAXwBPAHQAaABlAHIAQwBvAG4AZgBpAGcAUwBlAHQAdABpAG4AZwBzAAAPRABFAEwAQQBZAEUA
RAAACUgAVABNAEwAAAM7AAADPQAAXUIASQAgAHgAUAByAGUAcwBzACAATgBvAHQAaQBmAGkAYwBh
AHQAaQBvAG4AIABGAHIAYQBtAGUAdwBvAHIAawAgAEUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIA
AE9VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMAYQB0
AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgAAJ1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMA
TgBGAF8AAAAS6p37Kub6RYSENQJkWHEgAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQA
ABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBg44VQBzAGUAcgA6ADoAdgBh
AHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABAVQBzAGUAcgA6ADoAdgBh
AHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABsAE5VAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuAF8A
QwBvAHUAbgB0AGUAcgBWQgBJACAAeABQAHIAZQBzAHMAIABOAG8AdABpAGYAaQBjAGEAdABpAG8A
bgAgAEYAcgBhAG0AZQB3AG8AcgBrACAAUwBlAG4AZAAgAEEAbABlAHIAdAAJIAUBDggODhEYByAD
AQ4cEh0GIAIcDhIdBCAAEh0FIAEBEh0FIAIBDhwEIAEcDgIGCAMGERQEAAAAAAQBAAAAAwYRGAQC
AAAABAMAAAAEBAAAAAsgBgEOCA4OERgRIQMgAAgEIAEBCAMgAA4EIAEBDgQgABEhBSABAREhBCAA
ERgFIAEBERgDBhEhAygACAMoAA4EKAARIQQoABEYBgABElkRXQQgABJhBiACAQ4SYQQHARIVBSAB
ARFpCAEAAgAAAAAAAwAAAQQgABJ1BCABHBwGAAMODg4OBCABCA4EIAASfQQgAQIOBAABAg4GAAIC
DhAIDQcJEh0ODg4ODgIRGAgIIAIBElkdElkHIAIBEoCVHAUgABKAiQUgABKAoQUgABKApQMgABwF
IAIODg4GIAESgIkOAyAAAgUAAg4ODiQHDxKAiRKAiRIcEoCNEoCREoCZEoCdDg4ODg4dElkSgKUS
gLUFIAEOEhkEIAECHAUgAgEcHAgGFRKAuQIOCAcVEoC5Ag4IByACARMAEwEIIAICEwAQEwEEBwIO
CAQgAB0DBiABHQ4dAwogAx0OHQMIEYDBBAABCA4FIAASgMkIIAUCCA4ODggVBw0cDhIdHQ4OHQ4O
DhKAhR0OCA4IBQABDh0OEwcPHQ4DAwMDAwMDAx0OAwMDAwMHIAEBEBKA0QYgARKA1RwEIAEBHAYH
AhKA0QIHBwMSgNECHAQAABEhRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0XzVjMDdkY2IzMDgyNDQzNzNh
YzIyODQzN2VkZmE3ZGM3AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFEVQAAAAAAAAAAAABeVQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAUFUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAAAAAA
AAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABADRd
qxcAAAEANF2rFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABzAHQAXwA1AGMAMAA3AGQAYwBiADMA
MAA4ADIANAA0ADMANwAzAGEAYwAyADIAOAA0ADMANwBlAGQAZgBhADcAZABjADcAAABAAA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADUAOQAuADIAMwA4ADYAMAAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwA1AGMAMAA3AGQAYwBiADMAMAA4
ADIANAA0ADMANwAzAGEAYwAyADIAOAA0ADMANwBlAGQAZgBhADcAZABjADcALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHQA
XwA1AGMAMAA3AGQAYwBiADMAMAA4ADIANAA0ADMANwAzAGEAYwAyADIAOAA0ADMANwBlAGQAZgBh
ADcAZABjADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAcwB0AF8A
NQBjADAANwBkAGMAYgAzADAAOAAyADQANAAzADcAMwBhAGMAMgAyADgANAAzADcAZQBkAGYAYQA3
AGQAYwA3AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAA
NQA5AC4AMgAzADgANgAwAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA2ADAANQA5AC4AMgAzADgANgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAHA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[{00F27F3B-8B0B-4F27-93B9-79F60E93CAF0\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{00F27F3B-8B0B-4F27-93B9-79F60E93CAF0}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{00F27F3B-8B0B-4F27-93B9-79F60E93CAF0}"
          DTS:To="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[{8D446F25-5A01-4950-B911-02EF0EF7B753\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{8D446F25-5A01-4950-B911-02EF0EF7B753}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{8D446F25-5A01-4950-B911-02EF0EF7B753}"
          DTS:To="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{474449F4-84E2-4441-BA4A-795809230566}"
      DTS:EventID="6815859"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{30607178-2662-459E-8E46-77722EDA4D96}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{E5041747-3298-4E5C-BB09-AC54AC278118}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{6907DE8A-B1AE-4622-9F75-208E5E7C4949}</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{EB373E6A-555B-4425-8060-5AF931FB9993}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1_DataObjectCatalog">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{157145F7-F1B0-4B9D-9155-7410F6130032}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1_DataObjectConnectionName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{E082266E-9A4A-4963-8F42-3BF892ABBE8D}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1_DataObjectConnectionString">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{2F8A48D8-FEBF-4AF7-A8D0-3C860EBD4C8B}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1_DataObjectDataSource">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{354C749A-B0C9-4723-8ADF-C2424EEF0473}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1_DataObjectUserName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{A65FEAC9-8F09-4FB8-B701-AF4EB898974E}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2_DataObjectCatalog">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{50CABCB9-85F8-4F00-963A-E3B5EE3F1578}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2_DataObjectConnectionName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{C7D1BBEC-2C32-4596-8D82-A5E3556BB869}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2_DataObjectConnectionString">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{EB1A7B58-7AE8-468F-81B9-7A6BF430E490}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2_DataObjectDataSource">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{55110F3E-C7F8-453D-83A2-A2E20311037E}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2_DataObjectUserName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{A107FB20-E928-45E2-8440-CBC3CAF99E35}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1_DataObjectCatalog">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{9205C45C-64F4-4FF6-AF22-9CA885FBE9BF}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1_DataObjectConnectionName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{EA8B02A1-F03C-43CA-B856-CD1BF42130E3}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1_DataObjectConnectionString">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{7AB48C6F-CE6B-46D6-B100-529F56951C98}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1_DataObjectDataSource">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{761EEDF1-E3F3-4422-806E-5F4F375B887C}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1_DataObjectUserName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{6BBBBEEF-0897-42D4-8677-C3F8E7D97439}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2_DataObjectCatalog">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{C7110967-7705-48E9-9D3F-FE146B10D810}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2_DataObjectConnectionName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{9FA5EC0F-724A-418A-A17D-3495A220F9B6}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2_DataObjectConnectionString">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{6CAE5BD7-D777-40C1-94F5-2C5A4A57DCDF}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2_DataObjectDataSource">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{541D1B42-68C8-4230-8FEA-6BC10F9A24B6}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2_DataObjectUserName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{7934777F-5FE2-429A-BF09-7523FCB1579D}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3_DataObjectCatalog">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{F4E81B67-B11C-4D00-A4A0-C9977130ABA3}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3_DataObjectConnectionName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{A8E679BD-AD11-4D34-BEE2-30A71AB66542}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3_DataObjectConnectionString">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{E929A607-F154-4F54-A9D3-25D79065933B}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3_DataObjectDataSource">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{7EBF578B-24D0-4BB2-84A1-EF65973C2A79}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3_DataObjectUserName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{3421138E-C919-438A-BBBB-DFCA44883541}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ConnectionValues">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of connection strings (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable connectionstring logging."
          DTS:DTSID="{6EF6F55A-5CC9-4057-B26D-B7895817425E}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableConnLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of datasource information (e.g. SqlCommand, ConnectionName, TableName etc.)"
          DTS:DTSID="{6F290F58-80D5-45E3-ACBC-BB20EC0958E8}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableDataSrcInfoLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of row count for each attached with source and target information (e.g. SqlCommand, ConnectionName, TableName etc.)"
          DTS:DTSID="{F353063E-15E9-44AB-8AA6-08332987E34C}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableDFTRowCountLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{B5EFFEEF-68BE-42C7-9CCD-178257B99E1D}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableParameterInitialValueLogging"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of variable values (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{2685C352-FF4D-429B-A5FA-06FB2133927C}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableVarLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of ConnectionManagers you want to mask ConnectionStrings during logging process inside OnPreExecute Eventhandler. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case in-sensitive. This option is helpful when you want to hide certain connection strings or file paths from users who are using BIxPress Monitoring Console or Reports. When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual connectionstring of specified connection managers. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredConns&quot;. There are 2 places where you have to set this value (OnPreExecute, OnPostExecute)."
          DTS:DTSID="{BFBFA9F1-1345-4E83-B650-13F69524B660}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredConns">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{0A7D00D1-5231-41FE-9EC9-885C5076DDFA}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredParams"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="8">paramSSISOpsNF_From,paramSSISOpsNF_OnError_Disable,paramSSISOpsNF_OnPostExecute_Disable,paramSSISOpsNF_OnWarning_Disable,paramSSISOpsNF_OtherConfigSettings,paramSSISOpsNF_SMTPServerName,paramSSISOpsNF_To,pDefaultBufferMaxRows,pDefaultBufferSize,pEngineThreads,pJobInstanceParentID,pSourceTableName,pTargetTableName</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{67CD3CDB-06CC-4C68-B9F1-5C792BBC867F}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to configure how many characters will be logged for each variable. Default variable length for logging is 4000 anything after that will be truncated. -1 = Log full variable value . There are 3 places where you have to set this value (OnPreExecute, OnPostExecute OnVariableValueChanged)."
          DTS:DTSID="{A898F001-5F00-43C0-9CCA-E5B12F00B4C1}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_MaxVarCharsToLog">
          <DTS:VariableValue
            DTS:DataType="3">4000</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{8CF6042B-17BC-435F-991D-BBBA432547AE}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_VariableValues">
          <DTS:VariableValue
            DTS:DataType="8">User::vAuditDateTime,User::vCreateAllIndexSQL,User::vCurJobID,User::vCurJobInstanceID,User::vCurUserID,User::vDeletedRowCount,User::vDeletedTotalRowCount,User::vDropAllIndexSQL,User::vEnvironmentTEXT,User::vFileCreatedDate,User::vFileLastModifiedDate,User::vFileList,User::vFileTypeExtension,User::vInsertedRowCount,User::vInsertedTotalRowCount,User::vJobInstanceSourceID,User::vLastExecutionDate,User::vLastRecordsProcessedDate,User::vPackageStartDate,User::vProcessedRowCount,User::vProcessingFileCount,User::vProcessingFileFullPathName,User::vProcessingFileName,User::vRejectedRowCount,User::vRejectedTotalRowCount,User::vSchemaTableName,User::vSourceServerDatabase,User::vSQLDeleteDuplicates,User::vSQLLSAAssignmentCStatement,User::vSQLSelectPreStagingRecords,User::vSQLTruncateTargetTable,User::vTargetTableCount,User::vUpdatedTotalRowCount</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_98560B88826644138D9C0CDFBBA3FE8F_1"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{3EDBB3D4-D9BE-4F7E-894B-9D1E466ED005}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_98560B88826644138D9C0CDFBBA3FE8F_1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="usp_SSISOps_Audit_Insert_RowCount @ComponentUniqueID='{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}_24',@ComponentTypeCode='DEST',@ComponentTypeName='UNKNOWN',@ComponentName='OLE DB Destination',@DataObjectType='UNKNOWN',@DataObjectName='',@DataObjectQuery='',@DataObjectConnectionString=?,@DataObjectConnectionName='',@DataObjectDataSource=?,@DataObjectUserName=?,@DataObjectCatalog=?,@ExecutionID=?,@SourceName=?,@SourceID=?,@RecordCount=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1_DataObjectConnectionString"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1_DataObjectDataSource"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1_DataObjectUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1_DataObjectCatalog"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_1"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_98560B88826644138D9C0CDFBBA3FE8F_2"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{43D0B5C4-7EFF-4D86-AB78-C09E6905F9B6}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_98560B88826644138D9C0CDFBBA3FE8F_2"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="usp_SSISOps_Audit_Insert_RowCount @ComponentUniqueID='{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}_72',@ComponentTypeCode='SRC',@ComponentTypeName='UNKNOWN',@ComponentName='OLE DB Source',@DataObjectType='UNKNOWN',@DataObjectName='',@DataObjectQuery='',@DataObjectConnectionString=?,@DataObjectConnectionName='',@DataObjectDataSource=?,@DataObjectUserName=?,@DataObjectCatalog=?,@ExecutionID=?,@SourceName=?,@SourceID=?,@RecordCount=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2_DataObjectConnectionString"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2_DataObjectDataSource"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2_DataObjectUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2_DataObjectCatalog"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varSSISOps_98560B88826644138D9C0CDFBBA3FE8F_RowCount_2"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_1"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{9EF95782-8036-4E43-8822-381812485802}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="usp_SSISOps_Audit_Insert_RowCount @ComponentUniqueID='{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_58',@ComponentTypeCode='DEST',@ComponentTypeName='UNKNOWN',@ComponentName='Insert Redirected row to ExceptionData Table',@DataObjectType='UNKNOWN',@DataObjectName='',@DataObjectQuery='',@DataObjectConnectionString=?,@DataObjectConnectionName='',@DataObjectDataSource=?,@DataObjectUserName=?,@DataObjectCatalog=?,@ExecutionID=?,@SourceName=?,@SourceID=?,@RecordCount=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1_DataObjectConnectionString"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1_DataObjectDataSource"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1_DataObjectUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1_DataObjectCatalog"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_1"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_2"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{4F34E4ED-A237-4D98-8AA8-C42939025603}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_2"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="usp_SSISOps_Audit_Insert_RowCount @ComponentUniqueID='{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_82',@ComponentTypeCode='DEST',@ComponentTypeName='UNKNOWN',@ComponentName='OLE DB Destination',@DataObjectType='UNKNOWN',@DataObjectName='',@DataObjectQuery='',@DataObjectConnectionString=?,@DataObjectConnectionName='',@DataObjectDataSource=?,@DataObjectUserName=?,@DataObjectCatalog=?,@ExecutionID=?,@SourceName=?,@SourceID=?,@RecordCount=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2_DataObjectConnectionString"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2_DataObjectDataSource"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2_DataObjectUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2_DataObjectCatalog"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_2"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_3"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DTSID="{3A0FD695-93D7-4DA7-BFB2-4AAC6C2358C0}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_3"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="usp_SSISOps_Audit_Insert_RowCount @ComponentUniqueID='{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_130',@ComponentTypeCode='SRC',@ComponentTypeName='UNKNOWN',@ComponentName='OLE DB Source',@DataObjectType='UNKNOWN',@DataObjectName='',@DataObjectQuery='',@DataObjectConnectionString=?,@DataObjectConnectionName='',@DataObjectDataSource=?,@DataObjectUserName=?,@DataObjectCatalog=?,@ExecutionID=?,@SourceName=?,@SourceID=?,@RecordCount=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3_DataObjectConnectionString"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3_DataObjectDataSource"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3_DataObjectUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3_DataObjectCatalog"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varSSISOps_B6A1792F01474E6E9CE86CD367A7F66A_RowCount_3"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{123CFD87-813E-442D-B052-26B33A5F10B3}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableVarLogging]==true &amp;&amp; @[User::varSSISOps_DisableConnLogging]==true</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_31701835091c4ed99f350aa399ed746f"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_31701835091c4ed99f350aa399ed746f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_31701835091c4ed99f350aa399ed746f")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_31701835091c4ed99f350aa399ed746f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
                System.Text.StringBuilder sb = new System.Text.StringBuilder(); 
                bool bLogVar = true;
                string sVarList = ReadVariable("User::varSSISOps_VariableValues").ToString();

                if (string.IsNullOrEmpty(sVarList) || Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableConnLogging")))
                    bLogVar = false; 

                if (bLogVar)
                {
                    string filterList = ReadVariable("User::varSSISOps_FilteredVars").ToString();
                    string[] arrFilter = filterList.Split(',');
                    string[] arrVariables = sVarList.Split(','); 
                    object oVal = null; 

                    foreach (string var in arrVariables)
                    {
                        try
                        {

                            bool bSkip = false;
                            string comp = var;
                            string f = string.Empty;

                            foreach (string floop in arrFilter)
                            {
                                comp = comp.ToLower().Trim();
                                f = floop.ToLower().Trim();

                                if (string.IsNullOrEmpty(f))
                                    break;

                                if (comp.IndexOf("::") < 0)
                                    comp = "user::" + comp;

                                if (f.IndexOf("::") < 0)
                                    f = "user::" + f;

                                if (System.Text.RegularExpressions.Regex.IsMatch(comp, f.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                                {
                                    bSkip = true;
                                    break;
                                }
                            }


                            if (bSkip)
                                oVal = "*****";
                            else
                            {
                                oVal = ReadVariable(var); 

                                if (oVal !=null)
                                {
                                    string s = oVal.ToString();
                                    int iMaxCharsToLog = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"));
                                    bool isLogFullValue = iMaxCharsToLog < 1;

                                    if (!isLogFullValue && s.Length > iMaxCharsToLog)
                                        oVal = s.Substring(0, iMaxCharsToLog) + " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 from config file if you want to log full value (Not recommended for performance reasons)>";
                                }
                            }

                            if (oVal != null)
                                sb.AppendLine(var.PadRight(30, '.') + "... " + oVal.ToString()); 
                            else
                                sb.AppendLine(var.PadRight(30, '.') + "... "); 
                        }
                        catch (Exception ex)
                        {
                            sb.AppendLine(var.PadRight(30, '.') + "... {Error reading variable value: " + ex.Message + "}"); 
                        }
                    }

                    WriteVariable("User::varSSISOps_VariableValues", sb.ToString()); 
                }

                bool isDisableLogParameterInitialValues;

                if (bool.TryParse(ReadVariable("User::varSSISOps_DisableParameterInitialValueLogging").ToString(), out isDisableLogParameterInitialValues) && !isDisableLogParameterInitialValues)
                {
                    object filteredParams = ReadVariable("User::varSSISOps_FilteredParams");

                    string parameterList = filteredParams == null ? string.Empty : filteredParams.ToString();

                    string[] parameterNames = parameterList.Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries);

                    System.Text.StringBuilder parameterNameValues = new System.Text.StringBuilder();

                    foreach (string parameterName in parameterNames)
                    {
                        string fullyQualifiedVariableName = parameterName.Contains("::") ? parameterName : "$Package::" + parameterName;

                        if (!Dts.VariableDispenser.Contains(fullyQualifiedVariableName))
                            continue;

                        object parameterValue = ReadVariable(fullyQualifiedVariableName);
                        string parameterDisplayValue = parameterValue == null ? string.Empty : parameterValue.ToString();

                        parameterNameValues.AppendFormat("{0}... {1}{2}", fullyQualifiedVariableName.TrimStart('$').PadRight(30, '.'), parameterDisplayValue, Environment.NewLine);
                    }

                    if (parameterNameValues.Length > 0)
                    {
                        object variableValuesValue = ReadVariable("User::varSSISOps_VariableValues");
                        string variableValuesDisplayValue = variableValuesValue == null ? string.Empty : variableValuesValue.ToString();

                        WriteVariable("User::varSSISOps_VariableValues", variableValuesDisplayValue + parameterNameValues);
                    }
                }

                System.Text.StringBuilder sb1 = new System.Text.StringBuilder(); 
                bool bLogConn = !Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableConnLogging"));

                if (bLogConn)
                {
                    string filterList = ReadVariable("User::varSSISOps_FilteredConns").ToString();
                    string[] arrFilter = filterList.Split(',');
                    string sDataSource = String.Empty;

                    foreach (ConnectionManager conn in Dts.Connections)
                    {
                        try
                        {
                            sDataSource = string.Empty;

                            bool bSkip = false;
                            string comp = conn.Name;
                            string f = string.Empty;

                            foreach (string floop in arrFilter)
                            {
                                comp = comp.ToLower().Trim();
                                f = floop.ToLower().Trim();

                                if (string.IsNullOrEmpty(f))
                                    break;

                                if (System.Text.RegularExpressions.Regex.IsMatch(comp, f.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                                {
                                    bSkip = true;
                                    break;
                                }
                            }


                            string sConnStr = conn.ConnectionString;

                            if (bSkip)
                            {
                                sConnStr = "*****";
                                sDataSource = "*****";
                            }
                            else
                            {
                                try
                                {
                                    if (conn.Properties.Contains("ServerName"))
                                        sDataSource = conn.Properties["ServerName"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("SqlServerName"))
                                        sDataSource = conn.Properties["SqlServerName"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("Host"))
                                        sDataSource = conn.Properties["Host"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("ServerHost"))
                                        sDataSource = conn.Properties["ServerHost"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("Server"))
                                        sDataSource = conn.Properties["Server"].GetValue(conn).ToString();
                                    else if (conn.CreationName == "FLATFILE" || (conn.CreationName == "FILE" && conn.ConnectionString.IndexOf(".", System.StringComparison.InvariantCultureIgnoreCase) > 0))
                                        sDataSource = System.IO.Path.GetFileName(conn.ConnectionString);
                                }
                                catch (Exception) { }
                            }

                            sb1.AppendLine(conn.Name.PadRight(30, '.') + "... " + conn.CreationName.PadRight(10, ' ') + "  \t" + sDataSource.PadRight(15, ' ') + "  \t" + sConnStr);
                        }
                        catch (Exception ex)
                        {
                            sb1.AppendLine(conn.Name.PadRight(30, '.') + "... {Error reading connection: " + ex.Message + "}");
                        }
                    }

                    WriteVariable("User::varSSISOps_ConnectionValues", sb1.ToString());
                }

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_31701835091c4ed99f350aa399ed746f</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_31701835091c4ed99f350aa399ed746f</msb:DisplayName>
		<msb:ProjectId>{B905079A-2550-4E1C-80DD-4475EA31C9DA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_31701835091c4ed99f350aa399ed746f.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_31701835091c4ed99f350aa399ed746f.Properties.Settings.get_Default():st_31701835091c4ed99f350aa399ed746f.Properties.Sett" +
    "ings")]

namespace st_31701835091c4ed99f350aa399ed746f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_31701835091c4ed99f350aa399ed746f.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6ee1b7db-62d8-44e9-a194-1850720ea691}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_31701835091c4ed99f350aa399ed746f</RootNamespace>
    <AssemblyName>st_31701835091c4ed99f350aa399ed746f</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_31701835091c4ed99f350aa399ed746f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_31701835091c4ed99f350aa399ed746f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_31701835091c4ed99f350aa399ed746f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_31701835091c4ed99f350aa399ed746f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_31701835091c4ed99f350aa399ed746f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_31701835091c4ed99f350aa399ed746f.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIrZpFcAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAA3kAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIRAAABXAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5CAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
QAAAAAAAAEgAAAACAAUA0CkAALQWAAABAAAAAAAAABgpAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgDDBgAAAgAAEXMWAAAKChcLAnJzAABwKAoAAAZvFwAACgwIKBgA
AAotEgJyswAAcCgKAAAGKBkAAAosAhYLBzn/AQAAAnL7AABwKAoAAAZvFwAACg0JF40eAAABEycR
JxYfLJ0RJ28aAAAKEwQIF40eAAABEygRKBYfLJ0RKG8aAAAKEwUUEwYRBRMpFhMqOJMBAAARKREq
mhMHFhMIEQcTCX4bAAAKEwoRBBMrFhMsOIwAAAARKxEsmhMLEQlvHAAACm8dAAAKEwkRC28cAAAK
bx0AAAoTChEKKBgAAAotaxEJcjcBAHBvHgAAChYvDnI9AQBwEQkoHwAAChMJEQpyNwEAcG8eAAAK
Fi8Ocj0BAHARCigfAAAKEwoRCREKcksBAHByTwEAcG8gAAAKFyghAAAKLAUXEwgrEREsF1gTLBEs
ESuOaT9p////EQgsCXJXAQBwEwYrVQIRBygKAAAGEwYRBixHEQZvFwAAChMMAnJjAQBwKAoAAAYo
IgAAChMNEQ0X/gQTDhEOLSERDG8jAAAKEQ0xFhEMFhENbyQAAApypwEAcCgfAAAKEwYRBiwlBhEH
Hx4fLm8lAAAKcvICAHARBm8XAAAKKCYAAApvJwAACiYrHAYRBx8eHy5vJQAACnLyAgBwKB8AAApv
JwAACibeLBMPBhEHHx4fLm8lAAAKcvwCAHARD28oAAAKckQDAHAoKQAACm8nAAAKJt4AESoXWBMq
ESoRKY5pP2L+//8CcnMAAHAGbxcAAAooCQAABgJySAMAcCgKAAAGbxcAAAoSECgqAAAKOTIBAAAR
EDorAQAAAnKyAwBwKAoAAAYTERERLAkREW8XAAAKKwV+GwAAChMSERIXjR4AAAETLREtFh8snREt
F28rAAAKExNzFgAAChMUERMTLhYTLziTAAAAES4RL5oTFREVcjcBAHBvLAAACi0OcvIDAHARFSgf
AAAKKwIRFRMWAigtAAAKby4AAAoRFm8vAAAKLFICERYoCgAABhMXERcsCREXbxcAAAorBX4bAAAK
ExgRFHIIBABwERYXjR4AAAETMBEwFh8knREwbzAAAAofHh8ubyUAAAoRGCgxAAAKbzIAAAomES8X
WBMvES8RLo5pP2L///8RFG8zAAAKFjE1AnJzAABwKAoAAAYTGREZLAkRGW8XAAAKKwV+GwAAChMa
AnJzAABwERoRFCg0AAAKKAkAAAZzFgAAChMbAnKzAABwKAoAAAYoGQAAChb+ARMcERw5CwMAAAJy
JAQAcCgKAAAGbxcAAAoTHREdF40eAAABEzERMRYfLJ0RMW8aAAAKEx5+GwAAChMfAigtAAAKbzUA
AApvNgAAChMyOKQCAAARMm83AAAKEyB+GwAAChMfFhMhESBvOAAAChMifhsAAAoTIxEeEzMWEzQr
UhEzETSaEyQRIm8cAAAKbx0AAAoTIhEkbxwAAApvHQAAChMjESMoGAAACi0uESIRI3JLAQBwck8B
AHBvIAAAChcoIQAACiwFFxMhKw4RNBdYEzQRNBEzjmkyphEgbzkAAAoTJREhLBNyVwEAcBMlclcB
AHATHzhbAQAAESBvOgAACnJiBABwbzsAAAosJBEgbzoAAApyYgQAcG88AAAKESBvPQAACm8XAAAK
Ex84HwEAABEgbzoAAApyeAQAcG87AAAKLCQRIG86AAAKcngEAHBvPAAAChEgbz0AAApvFwAAChMf
OOgAAAARIG86AAAKcpQEAHBvOwAACiwkESBvOgAACnKUBABwbzwAAAoRIG89AAAKbxcAAAoTHzix
AAAAESBvOgAACnKeBABwbzsAAAosIREgbzoAAApyngQAcG88AAAKESBvPQAACm8XAAAKEx8rfREg
bzoAAApytAQAcG87AAAKLCERIG86AAAKcrQEAHBvPAAAChEgbz0AAApvFwAAChMfK0kRIG8+AAAK
csIEAHAoPwAACi0oESBvPgAACnLUBABwKD8AAAosIxEgbzkAAApy3gQAcBlvQAAAChYxDhEgbzkA
AAooQQAAChMf3gMm3gARGx2NHAAAARM1ETUWESBvOAAACh8eHy5vJQAACqIRNRdy8gIAcKIRNRgR
IG8+AAAKHwofIG8lAAAKohE1GXLiBABwohE1GhEfHw8fIG8lAAAKohE1G3LiBABwohE1HBElohE1
KEIAAApvJwAACibeMhMmERsRIG84AAAKHx4fLm8lAAAKcuoEAHARJm8oAAAKckQDAHAoKQAACm8n
AAAKJt4AETJvQwAACjpQ/f//AnIqBQBwERtvFwAACigJAAAGAigtAAAKFm9EAAAKKgBBTAAAAAAA
AJIAAABaAQAA7AEAACwAAAAhAAABAAAAAJoEAABYAQAA8gUAAAMAAAAhAAABAAAAAP0DAABpAgAA
ZgYAADIAAAAhAAABGzACAGcAAAADAAARFAoWCwIoLQAACm8uAAAKA29FAAAKAigtAAAKby4AAAoS
AG9GAAAKBgNvRwAACgRvSAAACt4MBiwIBm9JAAAKFwvc3hMmAigtAAAKby4AAApvSgAACv4a3g0G
LAkHLQYGb0kAAArcKgABKAAAAgAnAA82AAwAAAAAAAAEAEBEABMhAAABAgAEAFVZAA0AAAAAGzAC
AGgAAAAEAAARFAoWCwIoLQAACm8uAAAKA29LAAAKAigtAAAKby4AAAoSAG9GAAAKBgNvRwAACm9M
AAAKDN4MBiwIBm9JAAAKFwvc3hMmAigtAAAKby4AAApvSgAACv4a3g0GLAkHLQYGb0kAAArcCCoB
KAAAAgAnAA82AAwAAAAAAAAEAEBEABMhAAABAgAEAFVZAA0AAAAAHgIoTQAACiq0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAiAUAACN+AAD0BQAAnAgAACNT
dHJpbmdzAAAAAJAOAABwBQAAI1VTAAAUAAAQAAAAI0dVSUQAAAAQFAAApAIAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAADAAAAAFAAAABgAAAAsAAAAEAAAATQAAAAIAAAAPAAAA
BAAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9
ARQBBgBZAboABgBvAV4BBgCgAYsBBgCNAnMCBgC4AqYCBgDPAqYCBgDsAqYCBgALA6YCBgAkA6YC
BgA9A6YCBgBYA6YCBgBzA6YCBgCMA6YCBgDFA6UDBgDlA6UDBgAWBAMEBgAzBLoABgA4BLoABgBc
BKYCCgCIBHIECgChBHIEBgC2BKUDDgDYBBQBBgAGBfoEBgAdBboABgAyBboABgBEBboACgCYBXkF
CgCeBXkFBgDkBboABgD6BboABgALBroADgAnBhQBEgCABmAGBgCyBroAEgDXBmAGEgDzBmAGEgAW
B2AGEgBSB2AGEgBvB2AGBgCqB7oABgDFB7sHEgDWB2AGEgAJCGAGEgAgCGAGAAAAAAEAAAAAAAEA
AQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAM
ABEAfwETABEArAEXABEA9gE5AAYGOgJSAFaAQgJVAFaASgJVAFAgAAAAAIMYvAEbAAEAWCAAAAAA
kwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACG
GLwBGwACAKcgAAAAAJEY0QSUAAIAvCAAAAAAhgAaAhsAAgDYJwAAAACBAB8CRwACAHQoAAAAAIEA
LQJNAAQAECkAAAAAhhi8ARsABQAAAAEAUgIAAAEAWAIAAAIAZQIAAAEAWAI5ALwBYwBBALwBYwBJ
ALwBYwBRALwBYwBZALwBYwBhALwBYwBpALwBYwBxALwBYwB5ALwBYwCBALwBYwCJALwBaACRALwB
GwCZALwBGwAJALwBGwChAEoEbQChAGUEdAApALwBeQC5ALwBhQDJALwBGwARALwBGwDRALwBGwDZ
ALwBGwAJABQFmADhACQFnADpADoFoQDhAEkFpgDhAE8FrQDhAFUFmADhAF0FmADhAGIFsADhAGoF
tQDhAHEFuwD5AKsFwQDpALMFygDhALsFzwDhAMYF0wDhANAF2QDhAGoF3wDZANkF5gAJAe4FmADh
AGoF7AARAQIG9ADhAEkF+wDhAB4GBQEZADkGCgEhAZIGEAEpAR4GBQHhAKgGFgExAb4GHAHZAMoG
IAHZALsFzwDhAGoFKQEhAeMGLwE5AQgHNQFBASgHOwFJATQHmABJAT0HmABJAWAHQQFRAR4GRwFR
AXsHTAFZAYQHUwFJAY0HmADhAJ4HWAHhAGIFXgFpAcoHZgHhAGoFawFxAeQHcQEhAe0HaAApAfwH
YwApARMIxwF5AXsHzwGBASkI1gF5ATMIGwApAToIGwApAUAIYwCBAUwI4gEZALwBGwAIABQAWQAI
ABgAXgApAJMAiwAuABsAXwIuACMAXwIuAGMAhQIuAAsA7gEuABMANgIuADMANgIuACsAXwIuADsA
ZQIuAEMAXwIuAFsAfAJDAGsAXgBJAJMAiwBhAJsAXgCDAKsAXgCAAHUB2wHmAQIAAQADAAMAAABv
AS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAACtFwVJAAAAAAAA
fwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAAMAAAAAAAAAAAAAAAK
APUAAAAAAAwAAAAAAAAAAAAAAAoAQQYAAAAAAAAAAAEAAABWCAAABQAEAAAAADxNb2R1bGU+AHN0
XzMxNzAxODM1MDkxYzRlZDk5ZjM1MGFhMzk5ZWQ3NDZmLmRsbABSZXNvdXJjZXMAc3RfMzE3MDE4
MzUwOTFjNGVkOTlmMzUwYWEzOTllZDc0NmYuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWlu
AHN0XzMxNzAxODM1MDkxYzRlZDk5ZjM1MGFhMzk5ZWQ3NDZmAFNjcmlwdFJlc3VsdHMAbXNjb3Js
aWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0
ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdl
cgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVm
YXVsdABEZWZhdWx0AE1haW4AV3JpdGVWYXJpYWJsZQBSZWFkVmFyaWFibGUAdmFsdWVfXwBTdWNj
ZXNzAEZhaWx1cmUAdmFsdWUAdmFyaWFibGVOYW1lAHZhcmlhYmxlVmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24A
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25B
dHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFn
bm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25l
bnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0
dHJpYnV0ZQBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAFRvU3RyaW5nAFN0cmluZwBJc051bGxP
ckVtcHR5AENvbnZlcnQAVG9Cb29sZWFuAENoYXIAU3BsaXQARW1wdHkAVG9Mb3dlcgBUcmltAElu
ZGV4T2YAQ29uY2F0AFJlcGxhY2UAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFJlZ2V4
AFJlZ2V4T3B0aW9ucwBJc01hdGNoAFRvSW50MzIAZ2V0X0xlbmd0aABTdWJzdHJpbmcAUGFkUmln
aHQAQXBwZW5kTGluZQBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAQm9vbGVhbgBUcnlQYXJzZQBTdHJp
bmdTcGxpdE9wdGlvbnMAQ29udGFpbnMAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBW
YXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIAVHJpbVN0YXJ0AEVudmlyb25t
ZW50AGdldF9OZXdMaW5lAEFwcGVuZEZvcm1hdABDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMA
Q29ubmVjdGlvbkVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBDb25uZWN0aW9uTWFuYWdlcgBnZXRf
Q3VycmVudABnZXRfTmFtZQBnZXRfQ29ubmVjdGlvblN0cmluZwBEdHNQcm9wZXJ0aWVzAGdldF9Q
cm9wZXJ0aWVzAER0c1Byb3BlcnR5AGdldF9JdGVtAEdldFZhbHVlAGdldF9DcmVhdGlvbk5hbWUA
b3BfRXF1YWxpdHkAU3RyaW5nQ29tcGFyaXNvbgBTeXN0ZW0uSU8AUGF0aABHZXRGaWxlTmFtZQBE
dHNFbnVtZXJhdG9yAE1vdmVOZXh0AHNldF9UYXNrUmVzdWx0AExvY2tGb3JXcml0ZQBWYXJpYWJs
ZXMAR2V0VmFyaWFibGVzAFZhcmlhYmxlAHNldF9WYWx1ZQBVbmxvY2sAUmVzZXQATG9ja0ZvclJl
YWQAZ2V0X1ZhbHVlAHN0XzMxNzAxODM1MDkxYzRlZDk5ZjM1MGFhMzk5ZWQ3NDZmLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcXMAdABfADMAMQA3ADAAMQA4ADMANQAwADkAMQBj
ADQAZQBkADkAOQBmADMANQAwAGEAYQAzADkAOQBlAGQANwA0ADYAZgAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAP1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBw
AHMAXwBWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAHMAAEdVAHMAZQByADoAOgB2AGEAcgBTAFMA
SQBTAE8AcABzAF8ARABpAHMAYQBiAGwAZQBDAG8AbgBuAEwAbwBnAGcAaQBuAGcAADtVAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ARgBpAGwAdABlAHIAZQBkAFYAYQByAHMAAAU6ADoA
AA11AHMAZQByADoAOgAAAyoAAAdcAHcAKgAACyoAKgAqACoAKgAAQ1UAcwBlAHIAOgA6AHYAYQBy
AFMAUwBJAFMATwBwAHMAXwBNAGEAeABWAGEAcgBDAGgAYQByAHMAVABvAEwAbwBnAACBSSAALgAu
AC4APABWAEEATABVAEUAIABUAFIAVQBOAEMAQQBUAEUARAAgAC0AIABDAGgAYQBuAGcAZQAgAHYA
YQBsAHUAZQAgAG8AZgAgAFsAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAE0AYQB4AFYAYQByAEMAaABh
AHIAcwBUAG8ATABvAGcAXQAgAHQAbwAgAC0AMQAgAGYAcgBvAG0AIABjAG8AbgBmAGkAZwAgAGYA
aQBsAGUAIABpAGYAIAB5AG8AdQAgAHcAYQBuAHQAIAB0AG8AIABsAG8AZwAgAGYAdQBsAGwAIAB2
AGEAbAB1AGUAIAAoAE4AbwB0ACAAcgBlAGMAbwBtAG0AZQBuAGQAZQBkACAAZgBvAHIAIABwAGUA
cgBmAG8AcgBtAGEAbgBjAGUAIAByAGUAYQBzAG8AbgBzACkAPgABCS4ALgAuACAAAEcuAC4ALgAg
AHsARQByAHIAbwByACAAcgBlAGEAZABpAG4AZwAgAHYAYQByAGkAYQBiAGwAZQAgAHYAYQBsAHUA
ZQA6ACAAAAN9AABpVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAEQAaQBzAGEAYgBs
AGUAUABhAHIAYQBtAGUAdABlAHIASQBuAGkAdABpAGEAbABWAGEAbAB1AGUATABvAGcAZwBpAG4A
ZwAAP1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAUABh
AHIAYQBtAHMAABUkAFAAYQBjAGsAYQBnAGUAOgA6AAAbewAwAH0ALgAuAC4AIAB7ADEAfQB7ADIA
fQAAPVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAQwBv
AG4AbgBzAAAVUwBlAHIAdgBlAHIATgBhAG0AZQAAG1MAcQBsAFMAZQByAHYAZQByAE4AYQBtAGUA
AAlIAG8AcwB0AAAVUwBlAHIAdgBlAHIASABvAHMAdAAADVMAZQByAHYAZQByAAARRgBMAEEAVABG
AEkATABFAAAJRgBJAEwARQAAAy4AAAcgACAACQAAPy4ALgAuACAAewBFAHIAcgBvAHIAIAByAGUA
YQBkAGkAbgBnACAAYwBvAG4AbgBlAGMAdABpAG8AbgA6ACAAAENVAHMAZQByADoAOgB2AGEAcgBT
AFMASQBTAE8AcABzAF8AQwBvAG4AbgBlAGMAdABpAG8AbgBWAGEAbAB1AGUAcwAAAABhQC7ZyvKq
S66fnTgW11uWAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkE
CAASFQQIABIZAwYSDAQAABIMBAgAEgwFIAIBDhwEIAEcDgIGCAMGERQEAAAAAAQBAAAABCABAQ4E
IAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEDIAAOBAABAg4E
AAECHAYgAR0OHQMCBg4EIAEIDgUAAg4ODgUgAg4ODggAAwIODhGAgQQAAQgcAyAACAUgAg4ICAUg
Ag4IAwYAAw4ODg4FIAESbQ4HAAQODg4ODgYAAgIOEAIJIAIdDh0DEYCNBCABAg4FIAASgJEFIAAS
gJUFIAEOHQMDAAAOCCAEEm0OHBwcBQACDhwcBSAAEoCdBSAAEoChBSAAEoClBSAAEoCpBCABAhwG
IAESgK0cBCABHBwFAAICDg4HIAIIDhGAsQQAAQ4OBQABDh0OAyAAAlEHNhJtAg4OHQ4dDhwOAg4O
Dg4IAhKAhQIcDh0OEm0ODhwOHA4SbQIOHQ4OEoClAg4ODg4SgIUdAx0DHQ4IHQ4IHQMdDggdAx0D
EoChHQ4IHQ4HIAEBEBKAvQYgARKAwRwEIAEBHAYHAhKAvQIDIAAcBwcDEoC9AhxHAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3
b3JrIDQoAQAjc3RfMzE3MDE4MzUwOTFjNGVkOTlmMzUwYWEzOTllZDc0NmYAAAUBAAAAABYBABFD
b3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AaxAAAAAAAAAAAAAAM5AAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAQAAAAAAAAAAAAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAFSa0XAAABAAVJrRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcwB0AF8AMwAxADcA
MAAxADgAMwA1ADAAOQAxAGMANABlAGQAOQA5AGYAMwA1ADAAYQBhADMAOQA5AGUAZAA3ADQANgBm
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAA2ADEALgAxADgA
NgA5ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8AMwAxADcAMAAx
ADgAMwA1ADAAOQAxAGMANABlAGQAOQA5AGYAMwA1ADAAYQBhADMAOQA5AGUAZAA3ADQANgBmAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAcwB0AF8AMwAxADcAMAAxADgAMwA1ADAAOQAxAGMANABlAGQAOQA5AGYAMwA1ADAAYQBh
ADMAOQA5AGUAZAA3ADQANgBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAHMAdABfADMAMQA3ADAAMQA4ADMANQAwADkAMQBjADQAZQBkADkAOQBmADMANQAwAGEAYQAz
ADkAOQBlAGQANwA0ADYAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAwADYAMQAuADEAOAA2ADkAMwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA2ADkAMwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADgMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DTSID="{E975FE9E-27FF-41BC-BC86-61CF1375598A}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableDataSrcInfoLogging]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_c70d5e54168342018ab7fbefbdbeb08a"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_c70d5e54168342018ab7fbefbdbeb08a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_c70d5e54168342018ab7fbefbdbeb08a")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_c70d5e54168342018ab7fbefbdbeb08a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
string sSourceID = ReadVariable("System::SourceID").ToString().ToUpper();






            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion

        public string ReadTextFile(string filename)
        {
            string functionReturnValue = null;
            System.IO.StreamReader sr = new System.IO.StreamReader(filename);
            functionReturnValue = sr.ReadToEnd();
            sr.Close();
            return functionReturnValue;
        }
        
        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

        //Replace string function.
        //startPos : 1 based index
        public static String Replace(String oText, String oFind, String oReplace, int startPos, int Occurances)
        {
            int iCount = 0;
            int iPos = oText.IndexOf(oFind, startPos - 1);
            String strReturn = "";
            while (iPos != -1)
            {
                strReturn += oText.Substring(0, iPos) + oReplace;
                oText = oText.Substring(iPos + oFind.Length);
                iPos = oText.IndexOf(oFind);
                iCount++;
                if (Occurances > 0 && iCount >= Occurances)
                    break;
            }
            if (oText.Length > 0)
                strReturn += oText;
            return strReturn;
        }
        public static string Left(string param, int length)
        {
            //we start at 0 since we want to get the characters starting from the
            //left and with the specified lenght and assign it to a variable

            if (length > param.Length)
                length = param.Length; 

            string result = param.Substring(0, length);
            //return the result of the operation
            return result;
        }
        public static string Right(string param, int length)
        {
            //start at the index based on the lenght of the sting minus
            //the specified lenght and assign it a variable

            if (length > param.Length)
                length = param.Length; 

            string result = param.Substring(param.Length - length, length);
            //return the result of the operation
            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_c70d5e54168342018ab7fbefbdbeb08a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c79cca14-9dac-4761-8bc3-cfebfcd45383}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_c70d5e54168342018ab7fbefbdbeb08a</RootNamespace>
    <AssemblyName>st_c70d5e54168342018ab7fbefbdbeb08a</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_c70d5e54168342018ab7fbefbdbeb08a</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_c70d5e54168342018ab7fbefbdbeb08a</msb:DisplayName>
		<msb:ProjectId>{7DF54048-D508-454D-8E19-633EB23DCBF5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_c70d5e54168342018ab7fbefbdbeb08a.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c70d5e54168342018ab7fbefbdbeb08a.Properties.Settings.get_Default():st_c70d5e54168342018ab7fbefbdbeb08a.Properties.Sett" +
    "ings")]

namespace st_c70d5e54168342018ab7fbefbdbeb08a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c70d5e54168342018ab7fbefbdbeb08a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c70d5e54168342018ab7fbefbdbeb08a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c70d5e54168342018ab7fbefbdbeb08a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_c70d5e54168342018ab7fbefbdbeb08a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_c70d5e54168342018ab7fbefbdbeb08a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_c70d5e54168342018ab7fbefbdbeb08a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAI3ZpFcAAAAAAAAAAOAAAiELAQsAABQAAAAIAAAAAAAA7jIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKAyAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9BIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
MgAAAAAAAEgAAAACAAUAyCMAANgOAAABAAAAAAAAABAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqjgJycwAAcCgLAAAGbxYAAApvFwAACiYCKBgAAAoWbxkAAAoqABMwAQAY
AAAAAgAAERQKA3MaAAAKCwdvGwAACgoHbxwAAAoGKhswAgBnAAAAAwAAERQKFgsCKBgAAApvHQAA
CgNvHgAACgIoGAAACm8dAAAKEgBvHwAACgYDbyAAAAoEbyEAAAreDAYsCAZvIgAAChcL3N4TJgIo
GAAACm8dAAAKbyMAAAr+Gt4NBiwJBy0GBm8iAAAK3CoAASgAAAIAJwAPNgAMAAAAAAAABABARAAT
IgAAAQIABABVWQANAAAAABswAgBoAAAABAAAERQKFgsCKBgAAApvHQAACgNvJAAACgIoGAAACm8d
AAAKEgBvHwAACgYDbyAAAApvJQAACgzeDAYsCAZvIgAAChcL3N4TJgIoGAAACm8dAAAKbyMAAAr+
Gt4NBiwJBy0GBm8iAAAK3AgqASgAAAIAJwAPNgAMAAAAAAAABABARAATIgAAAQIABABVWQANAAAA
ABMwBABiAAAABQAAERYKAgMFF1lvJgAACgtylQAAcAwrNggCFgdvJwAACgQoKAAACgwCBwNvKQAA
ClhvKgAAChAAAgNvKwAACgsGF1gKDgQWMQUGDgQvBAcVM8YCbykAAAoWMQgIAigsAAAKDAgqAAAT
MAMAHAAAAAYAABEDAm8pAAAKMQgCbykAAAoQAQIWA28nAAAKCgYqEzADACMAAAAGAAARAwJvKQAA
CjEIAm8pAAAKEAECAm8pAAAKA1kDbycAAAoKBioeAigtAAAKKgAAAAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAOwEAAAjfgAAWAUAAAgHAAAjU3RyaW5n
cwAAAABgDAAAmAAAACNVUwD4DAAAEAAAACNHVUlEAAAACA0AANABAAAjQmxvYgAAAAAAAAACAAAB
Vx2iAQkDAAAA+iUzABYAAAEAAAAiAAAABQAAAAYAAAAPAAAADgAAAC0AAAACAAAADwAAAAYAAAAC
AAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYA
WQG6AAYAbwFeAQYAoAGLAQYA7ALSAgYAFwMFAwYALgMFAwYASwMFAwYAagMFAwYAgwMFAwYAnAMF
AwYAtwMFAwYA0gMFAwYA6wMFAwYAJAQEBAYARAQEBAYAdQRiBAYAkgS6AAYAlwS6AAYAuwQFAwoA
5wTRBAoAAAXRBAYAFQUEBA4ANwUUAQYAYgW6AA4AcQUUAQYApAWaBQYAsQWaBRIACwbrBRIAQAbr
BRIAVwbrBQYAgAa6AAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEA
EAB0AH8ADQAEAAgAAwEAAKMAAAARAAQAEAARAH8BEwARAKwBFwARAPYBOQAGBloCZgBWgGICaQBW
gGoCaQBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIB
KQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGDAFqAACALsgAAAAAIYAGgIb
AAIA4CAAAAAAhgAfAkcAAgAEIQAAAACBACwCTAADAKAhAAAAAIEAOgJSAAUAPCIAAAAAlgBHAlcA
BgCsIgAAAACWAE8CYAALANQiAAAAAJYAVAJgAA0AAyMAAAAAhhi8ARsADwAAAAEAcgIAAAEAeAIA
AAEAgQIAAAIAjgIAAAEAgQIAAAEAnAIAAAIAogIAAAMAqAIAAAQAsQIAAAUAugIAAAEAxQIAAAIA
ywIAAAEAxQIAAAIAywI5ALwBdwBBALwBdwBJALwBdwBRALwBdwBZALwBdwBhALwBdwBpALwBdwBx
ALwBdwB5ALwBdwCBALwBdwCJALwBfACRALwBGwCZALwBGwAJALwBGwChAKkEgQChAMQEiAApALwB
jQC5ALwBmQDJALwBGwARALwBGwDRALwBGwAJAFkFrADZAGkFrAAZAIMFsADhAIsFfADpALwBdwDx
ALwFrADxAMYFGwDhAB0GuwD5ADMGdwD5AEoGwAABAWAGyAAJAWkGzwABAXMGGwD5AHoGGwD5AIoG
dwAJAZYG2wDZAKAG5wDZAKgG7QDZALIG8wDZALkG+gDZAKgG/gDZAKAGAwHZALIGCAEZALwBGwAI
ABQAbQAIABgAcgApAJMAnwAuABsAiQEuACMAiQEuAGMArwEuAAsAGAEuABMAYAEuADMAYAEuACsA
iQEuADsAjwEuAEMAiQEuAFsApgFDAGsAcgBJAJMAnwBhAJsAcgCDAKsAcgCUALUA1ADfAA4BFAEC
AAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAA
rRcGSQAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAA
AAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAKAMwFAAAAAAAAAAABAAAAxAYAAAUABAAAAAA8
TW9kdWxlPgBzdF9jNzBkNWU1NDE2ODM0MjAxOGFiN2ZiZWZiZGJlYjA4YS5kbGwAUmVzb3VyY2Vz
AHN0X2M3MGQ1ZTU0MTY4MzQyMDE4YWI3ZmJlZmJkYmViMDhhLlByb3BlcnRpZXMAU2V0dGluZ3MA
U2NyaXB0TWFpbgBzdF9jNzBkNWU1NDE2ODM0MjAxOGFiN2ZiZWZiZGJlYjA4YQBTY3JpcHRSZXN1
bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNl
AEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNv
dXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFu
Y2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAFJlYWRUZXh0RmlsZQBXcml0ZVZhcmlhYmxlAFJl
YWRWYXJpYWJsZQBSZXBsYWNlAExlZnQAUmlnaHQAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAZmlsZW5hbWUAdmFyaWFibGVOYW1lAHZhcmlhYmxlVmFsdWUAb1RleHQAb0ZpbmQAb1JlcGxh
Y2UAc3RhcnRQb3MAT2NjdXJhbmNlcwBwYXJhbQBsZW5ndGgAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBU
b1N0cmluZwBTdHJpbmcAVG9VcHBlcgBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAHNldF9UYXNr
UmVzdWx0AFN5c3RlbS5JTwBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBSZWFkVG9FbmQAQ2xvc2UA
TWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAVmFyaWFibGVEaXNwZW5zZXIAZ2V0X1ZhcmlhYmxlRGlzcGVuc2VyAExvY2tGb3JXcml0
ZQBWYXJpYWJsZXMAR2V0VmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAHNldF9WYWx1ZQBVbmxv
Y2sAUmVzZXQARXhjZXB0aW9uAExvY2tGb3JSZWFkAGdldF9WYWx1ZQBJbmRleE9mAFN1YnN0cmlu
ZwBDb25jYXQAZ2V0X0xlbmd0aABzdF9jNzBkNWU1NDE2ODM0MjAxOGFiN2ZiZWZiZGJlYjA4YS5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAABxcwB0AF8AYwA3ADAAZAA1AGUANQA0ADEA
NgA4ADMANAAyADAAMQA4AGEAYgA3AGYAYgBlAGYAYgBkAGIAZQBiADAAOABhAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAhUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIA
YwBlAEkARAAAAQAAkaZ8sIu+jkCrZjGstLhbCgAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMg
AAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMBCABDg4FIAIBDhwEIAEc
DggABQ4ODg4ICAUAAg4OCAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYg
AgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEDIAAOBCAAEnEFBwIOEnUEIAASfQcgAQEQEoCB
BiABEoCFHAQgAQEcBgcCEoCBAgMgABwHBwMSgIECHAUgAggOCAUgAg4ICAYAAw4ODg4DIAAIBCAB
DggEIAEIDgUAAg4ODgUHAwgIDgMHAQ5HAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjc3RfYzcwZDVlNTQxNjgz
NDIwMThhYjdmYmVmYmRiZWIwOGEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAyDIAAAAAAAAAAAAA3jIAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAANAyAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEABkmtFwAAAQAGSa0XPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAA
MAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAHMAdABf
AGMANwAwAGQANQBlADUANAAxADYAOAAzADQAMgAwADEAOABhAGIANwBmAGIAZQBmAGIAZABiAGUA
YgAwADgAYQAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADAANgAx
AC4AMQA4ADYAOQA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAHMAdABfAGMA
NwAwAGQANQBlADUANAAxADYAOAAzADQAMgAwADEAOABhAGIANwBmAGIAZQBmAGIAZABiAGUAYgAw
ADgAYQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAHMAdABfAGMANwAwAGQANQBlADUANAAxADYAOAAzADQAMgAwADEAOABhAGIA
NwBmAGIAZQBmAGIAZABiAGUAYgAwADgAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABzAHQAXwBjADcAMABkADUAZQA1ADQAMQA2ADgAMwA0ADIAMAAxADgAYQBiADcA
ZgBiAGUAZgBiAGQAYgBlAGIAMAA4AGEAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMAA2ADEALgAxADgANgA5ADQAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMAA2ADEALgAxADgANgA5ADQAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA8DIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{DB263003-E45C-493E-ABE5-0966ADCC8DBC}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_a72264d8d9b4425497613606aba114be"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_a72264d8d9b4425497613606aba114be.Properties.Settings.get_Default():st_a72264d8d9b4425497613606aba114be.Properties.Sett" +
    "ings")]

namespace st_a72264d8d9b4425497613606aba114be.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_a72264d8d9b4425497613606aba114be
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_a72264d8d9b4425497613606aba114be.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_a72264d8d9b4425497613606aba114be.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_a72264d8d9b4425497613606aba114be.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_a72264d8d9b4425497613606aba114be.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_a72264d8d9b4425497613606aba114be.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_a72264d8d9b4425497613606aba114be</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_a72264d8d9b4425497613606aba114be</msb:DisplayName>
		<msb:ProjectId>{B261E675-538E-4236-BE06-561B36AD4372}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_a72264d8d9b4425497613606aba114be.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_a72264d8d9b4425497613606aba114be")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_a72264d8d9b4425497613606aba114be")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="st_a72264d8d9b4425497613606aba114be.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{35af8b10-72e4-49e6-aa6e-3ee165540922}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_a72264d8d9b4425497613606aba114be</RootNamespace>
    <AssemblyName>st_a72264d8d9b4425497613606aba114be</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <BinaryItem
                Name="st_a72264d8d9b4425497613606aba114be.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIjZpFcAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA3i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIgvAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
LwAAAAAAAEgAAAACAAUAyCIAAMAMAAABAAAAAAAAABAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqNgIoFgAAChZvFwAACioAAAAbMAIAZwAAAAIAABEUChYLAigWAAAKbxgA
AAoDbxkAAAoCKBYAAApvGAAAChIAbxoAAAoGA28bAAAKBG8cAAAK3gwGLAgGbx0AAAoXC9zeEyYC
KBYAAApvGAAACm8eAAAK/hreDQYsCQctBgZvHQAACtwqAAEoAAACACcADzYADAAAAAAAAAQAQEQA
Ex8AAAECAAQAVVkADQAAAAAbMAIAaAAAAAMAABEUChYLAigWAAAKbxgAAAoDbx8AAAoCKBYAAApv
GAAAChIAbxoAAAoGA28bAAAKbyAAAAoM3gwGLAgGbx0AAAoXC9zeEyYCKBYAAApvGAAACm8eAAAK
/hreDQYsCQctBgZvHQAACtwIKgEoAAACACcADzYADAAAAAAAAAQAQEQAEx8AAAECAAQAVVkADQAA
AAAeAighAAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAAGAQAACN+AACEBAAAPAYAACNTdHJpbmdzAAAAAMAKAAB0AAAAI1VTADQLAAAQAAAAI0dV
SUQAAABECwAAfAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAAB8AAAAFAAAA
BgAAAAsAAAAEAAAAIQAAAAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAA
AAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCNAnMCBgC4AqYC
BgDPAqYCBgDsAqYCBgALA6YCBgAkA6YCBgA9A6YCBgBYA6YCBgBzA6YCBgCMA6YCBgDFA6UDBgDl
A6UDBgAWBAMEBgAzBLoABgA4BLoABgBcBKYCCgCIBHIECgChBHIEBgC2BKUDDgDYBBQBDgD6BBQB
EgBiBUIFEgCXBUIFEgCuBUIFBgDXBboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABr
ADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAMABEAfwETABEArAEXABEA9gE5AAYG
OgJSAFaAQgJVAFaASgJVAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY0QSUAAIA
uyAAAAAAhgAaAhsAAgDMIAAAAACBAB8CRwACAGghAAAAAIEALQJNAAQABCIAAAAAhhi8ARsABQAA
AAEAUgIAAAEAWAIAAAIAZQIAAAEAWAI5ALwBYwBBALwBYwBJALwBYwBRALwBYwBZALwBYwBhALwB
YwBpALwBYwBxALwBYwB5ALwBYwCBALwBYwCJALwBaACRALwBGwCZALwBGwAJALwBGwChAEoEbQCh
AGUEdAApALwBeQC5ALwBhQDJALwBGwARALwBGwDRALwBGwAZAAwFmADZABQFaADZAHQFnQDhAIoF
YwDhAKEFogDpALcFqQDxAMAFrwDpAMoFGwDhANEFGwDhAOEFYwDxAO0FugAZALwBGwAIABQAWQAI
ABgAXgApAJMAiwAuABsANgEuACMANgEuAGMAXAEuAAsAxQAuABMADQEuADMADQEuACsANgEuADsA
PAEuAEMANgEuAFsAUwFDAGsAXgBJAJMAiwBhAJsAXgCDAKsAXgCAALQAvgACAAEAAwADAAAAbwEv
AAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAArRcESQAAAAAAAH8A
AAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1
AAAAAAAMAAAAAAAAAAAAAAAKACMFAAAAAAAAAAABAAAA9wUAAAUABAAAAAA8TW9kdWxlPgBzdF9h
NzIyNjRkOGQ5YjQ0MjU0OTc2MTM2MDZhYmExMTRiZS5kbGwAUmVzb3VyY2VzAHN0X2E3MjI2NGQ4
ZDliNDQyNTQ5NzYxMzYwNmFiYTExNGJlLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBz
dF9hNzIyNjRkOGQ5YjQ0MjU0OTc2MTM2MDZhYmExMTRiZQBTY3JpcHRSZXN1bHRzAG1zY29ybGli
AFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVt
LlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRp
b24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1
bHQARGVmYXVsdABNYWluAFdyaXRlVmFyaWFibGUAUmVhZFZhcmlhYmxlAHZhbHVlX18AU3VjY2Vz
cwBGYWlsdXJlAHZhbHVlAHZhcmlhYmxlTmFtZQB2YXJpYWJsZVZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25v
c3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBzZXRfVGFza1Jlc3VsdABNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJp
YWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIATG9ja0ZvcldyaXRlAFZhcmlhYmxl
cwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0Ac2V0X1ZhbHVlAFVubG9jawBSZXNldABF
eGNlcHRpb24ATG9ja0ZvclJlYWQAZ2V0X1ZhbHVlAHN0X2E3MjI2NGQ4ZDliNDQyNTQ5NzYxMzYw
NmFiYTExNGJlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxcwB0AF8AYQA3ADIA
MgA2ADQAZAA4AGQAOQBiADQANAAyADUANAA5ADcANgAxADMANgAwADYAYQBiAGEAMQAxADQAYgBl
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAz72ZY8gELEiGUvq8
AHGSVgAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUE
CAASGQMGEgwEAAASDAQIABIMBSACAQ4cBCABHA4CBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgG
AAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQYgAQEQ
EnUFIAESeRwEIAEBHAUHAhJ1AgMgABwGBwMSdQIcRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0X2E3MjI2
NGQ4ZDliNDQyNTQ5NzYxMzYwNmFiYTExNGJlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAsC8AAAAAAAAAAAAAzi8A
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAvAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAESa0XAAABAARJrRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcwB0
AF8AYQA3ADIAMgA2ADQAZAA4AGQAOQBiADQANAAyADUANAA5ADcANgAxADMANgAwADYAYQBiAGEA
MQAxADQAYgBlAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAA2
ADEALgAxADgANgA5ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8A
YQA3ADIAMgA2ADQAZAA4AGQAOQBiADQANAAyADUANAA5ADcANgAxADMANgAwADYAYQBiAGEAMQAx
ADQAYgBlAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAcwB0AF8AYQA3ADIAMgA2ADQAZAA4AGQAOQBiADQANAAyADUANAA5ADcA
NgAxADMANgAwADYAYQBiAGEAMQAxADQAYgBlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAHMAdABfAGEANwAyADIANgA0AGQAOABkADkAYgA0ADQAMgA1ADQAOQA3ADYA
MQAzADYAMAA2AGEAYgBhADEAMQA0AGIAZQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA2ADkAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA2ADkAMgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{E20AEF50-9F5D-48B1-9FC5-BA612300928A}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnPostExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnPostExecute @Scope='Package',@ExecutionID=?,@SourceID=?,@RowCountSupport=1,@LogCustomValues=0,@Variables=?,@Connections=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_VariableValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_ConnectionValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{E7BB1D31-7769-42DB-840E-FB0B4DB1FA05}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnPostExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnPostExecute @Scope='Task',@ExecutionID=?,@SourceID=?,@RowCountSupport=1,@LogCustomValues=0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsNFObj_SendAlert"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{580CE39D-175F-40FB-816E-9FD75E9D75E8}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_SendAlert">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::paramSSISOpsNF_OnPostExecute_Disable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_65f61d319881447a96040a2f3f776aab"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="st_65f61d319881447a96040a2f3f776aab.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{29f276cf-1327-4456-8b93-14bdd3f947af}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_65f61d319881447a96040a2f3f776aab</RootNamespace>
    <AssemblyName>st_65f61d319881447a96040a2f3f776aab</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_65f61d319881447a96040a2f3f776aab")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_65f61d319881447a96040a2f3f776aab")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
Copyright © 2014 Pragmatic Works Inc.
#####################################################################################################################
LEGAL NOTICE
#####################################################################################################################
THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
##################################################################################################################### 
*/
#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

using System.Net;
using System.Net.Mail;
using System.Collections;


#endregion

namespace st_65f61d319881447a96040a2f3f776aab
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            PerformNotificationAction();

            if (_isErrorEncountered)
                Dts.TaskResult = (int)ScriptResults.Failure;
            else
                Dts.TaskResult = (int)ScriptResults.Success;
            // End BI xPress Code
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion

        private const string NotificationFrameworkAlertListVariableName = "User::varSSISOpsNF_AlertList";
        private const string NotificationFrameworkAlertListAllVariableName = "User::varSSISOpsNF_AlertList_All";
        private const string NotificationFrameworkCounter = "User::varSSISOpsNF_Notification_Counter";
        private const string NotificationFrameworkSubComponentName = "BI xPress Notification Framework Send Alert";

        private bool _isErrorEncountered;

        private void PerformNotificationAction()
        {
            const string PREFIX_DISABLED = "{D}";

            bool isPackageRunning = false;
            string sPkgName = ReadVariable("System::PackageName").ToString();

            System.DateTime dtStart = (DateTime)ReadVariable("System::StartTime");
            System.DateTime dtEnd = DateTime.Now;

            string sExecAcct = ReadVariable("System::UserName").ToString();
            string sMachine = ReadVariable("System::MachineName").ToString();
            string sInteractive = ReadVariable("System::InteractiveMode").ToString();
            string sStepName = null;

            System.Collections.Hashtable oRuntimeSettings = GetRuntimeSettings();

            string alertInfosContents;
            bool isPackageTheSource = ReadVariable("System::SourceID").ToString() == ReadVariable("System::PackageID").ToString();

            if (isPackageTheSource)
            {
                // Package finished running 
                isPackageRunning = false;
                sStepName = string.Empty;
                alertInfosContents = ReadVariable(NotificationFrameworkAlertListAllVariableName) as string ?? string.Empty;
            }
            else
            {
                isPackageRunning = true;

                // Task finished running 
                if ((string)GetSetting("PRIORITY_MODE", oRuntimeSettings) == "DELAYED")
                    return; // Do all work when package is completed 

                alertInfosContents = ReadVariable(NotificationFrameworkAlertListVariableName) as string ?? string.Empty;
            }

            // Parse the collection of AlertInfo here.
            System.Collections.Generic.List<AlertInfo> alertInfos = ParseAlertInfos(alertInfosContents);

            if (isPackageTheSource && alertInfos.Count > 0)
                sStepName = GetLastAlertSource(alertInfos);

            string messageBody = null;
            string subjectLine = null;
            string messageBodySms = null;

            int errorCount = 0;
            int warningCount = 0;
            int otherCount = 0;
            int notificationCounter = (int)ReadVariable(NotificationFrameworkCounter);
            int maxNotifyCount = (int)GetSetting("MAX_NOTIFICATIONS", oRuntimeSettings);

            bool bEmailMethod = (bool)GetSetting("NOTIFY_USING_EMAIL", oRuntimeSettings);
            bool bSMSMethod = (bool)GetSetting("NOTIFY_USING_SMS", oRuntimeSettings);
            bool bEventLogMethod = (bool)GetSetting("NOTIFY_USING_EVENTLOG", oRuntimeSettings);
            bool bLogFileMethod = (bool)GetSetting("NOTIFY_USING_LOGFILE", oRuntimeSettings);
            bool bUseCustEmailTemplate = (bool)GetSetting("USE_CUSTOM_EMAIL_TEMPLATE", oRuntimeSettings);
            string sCustEmailTemplatePath = (string)GetSetting("CUSTOM_EMAIL_TEMPLATE_FILEPATH", oRuntimeSettings);
            string sLogFolderPath = (string)GetSetting("LOG_FOLDER_PATH", oRuntimeSettings);
            int iDeleteLogOlderThanDays = (int)GetSetting("DELETE_LOG_OLDER_THAN_DAYS", oRuntimeSettings);

            if (alertInfos.Count <= 0 && ((bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false && (bool)GetSetting("NOTIFY_ONSUCCESS", oRuntimeSettings) == false))
                return;

            if (alertInfos.Count <= 0 && isPackageRunning)
                return;

            if (isPackageRunning && notificationCounter >= maxNotifyCount && (bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false)
                return;

            bool isDelayedMode = (string)GetSetting("PRIORITY_MODE", oRuntimeSettings) == "DELAYED";

            if ((bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false && isDelayedMode == false && notificationCounter > 0)
                return;

            // Send Email
            object fromAddressObj = ReadVariable("User::varSSISOpsNF_From");
            string sFrom = fromAddressObj != null ? fromAddressObj.ToString() : "NotificationFramework@BIxPress.com";
            string sEmailList = string.Empty;

            if (bEmailMethod && (ReadVariable("User::varSSISOpsNF_To") != null))
            {
                sEmailList = ReadVariable("User::varSSISOpsNF_To").ToString();
                sEmailList = GetFilteredEmailList(sEmailList, ";", PREFIX_DISABLED);
            }

            MailMessage oMessage = null;

            if (!string.IsNullOrEmpty(sEmailList))
            {
                oMessage = new MailMessage();
                oMessage.From = new MailAddress(sFrom);
                oMessage.To.Add(sEmailList.Replace(";", ","));

                if (isDelayedMode == false)
                    oMessage.Priority = MailPriority.High;

                string sCCList = (string)GetSetting("CC_EMAILLIST", oRuntimeSettings);
                string sBCCList = (string)GetSetting("BCC_EMAILLIST", oRuntimeSettings);

                if (string.IsNullOrEmpty(sCCList) == false)
                    oMessage.CC.Add(sCCList.Replace(";", ",").Replace("|", ","));

                if (string.IsNullOrEmpty(sBCCList) == false)
                    oMessage.Bcc.Add(sBCCList.Replace(";", ",").Replace("|", ","));

                if ((string)GetSetting("EMAIL_FORMAT", oRuntimeSettings) == "HTML")
                {
                    oMessage.IsBodyHtml = true;
                    messageBody = GetHTMLNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, false, 0, bUseCustEmailTemplate, sCustEmailTemplatePath);
                }
                else
                {
                    oMessage.IsBodyHtml = false;
                    messageBody = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, false, 0, bUseCustEmailTemplate, sCustEmailTemplatePath);
                }

                oMessage.Body = messageBody;
            }

            if (bEventLogMethod || bLogFileMethod)
            {
                errorCount = 0;
                warningCount = 0;
                otherCount = 0;
                messageBody = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, false, 0, false, string.Empty);

                if (bLogFileMethod && (iDeleteLogOlderThanDays > 0))
                    DeleteOldFiles(sLogFolderPath, "NF_LOG_*.txt", iDeleteLogOlderThanDays);
            }

            if (warningCount > 0 && (bool)GetSetting("NOTIFY_ONWARNING", oRuntimeSettings))
            {
            }
            else
            {
                // Yes Send Alert 
                if ((errorCount > 0 && (bool)GetSetting("NOTIFY_ONSUCCESS", oRuntimeSettings) && (bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false && (bool)GetSetting("NOTIFY_ONERROR", oRuntimeSettings) == false && (bool)GetSetting("NOTIFY_ONWARNING", oRuntimeSettings) == false))
                    return;
            }

            // Send SMS 
            int iMaxLen = (int)GetSetting("SMS_MAXLENGTH", oRuntimeSettings);
            string sSMSList = (string)GetSetting("SMS_EMAILLIST", oRuntimeSettings);

            if (string.IsNullOrEmpty(sSMSList) == false)
                sSMSList = GetFilteredEmailList(sSMSList, "|", PREFIX_DISABLED);

            MailMessage oMessageSMS = null;

            if (bSMSMethod == true && !string.IsNullOrEmpty(sSMSList))
            {
                oMessageSMS = new MailMessage();
                oMessageSMS.From = new MailAddress(sFrom);
                oMessageSMS.To.Add(sSMSList.Replace("|", ","));
                errorCount = 0;
                warningCount = 0;
                otherCount = 0;
                messageBodySms = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, true, iMaxLen, false, string.Empty);

                string sTempBody;

                if (errorCount > 0)
                    sTempBody = errorCount == 1 ? "<SSIS Error>" : "<SSIS Errors>";
                else if (warningCount > 0)
                    sTempBody = warningCount == 1 ? "<SSIS Warning>" : "<SSIS Warnings>";
                else if (otherCount > 0)
                    sTempBody = otherCount == 1 ? "<SSIS Message>" : "<SSIS Messages>";
                else
                    sTempBody = "<SSIS Success>";

                sTempBody += System.Environment.NewLine + messageBodySms;

                if (sTempBody.Length >= iMaxLen - sFrom.Length)
                    oMessageSMS.Body = sTempBody.Substring(iMaxLen - sFrom.Length);
                else
                    oMessageSMS.Body = sTempBody;
            }

            if (isPackageRunning)
            {
                if (errorCount > 0)
                    subjectLine = "ERROR : Package " + ReadVariable("System::PackageName") + " has error(s) at task [" + ReadVariable("System::SourceName") + "]";
                else if (warningCount > 0)
                    subjectLine = "WARNING : Package " + ReadVariable("System::PackageName").ToString() + " has warning(s) at task [" + ReadVariable("System::SourceName").ToString() + "]";
                else
                {
                    if (otherCount > 0)
                        subjectLine = "ALERT : Package " + ReadVariable("System::PackageName").ToString() + " generated runtime alert(s)";
                    else
                        return;
                }
            }
            else
            {
                if (errorCount > 0)
                    subjectLine = "ERROR : Package " + ReadVariable("System::PackageName").ToString() + " completed with [" + errorCount.ToString() + "] error(s)";
                else if (warningCount > 0)
                    subjectLine = "WARNING : Package " + ReadVariable("System::PackageName").ToString() + " completed with [" + warningCount.ToString() + "] warning(s)";
                else if (otherCount > 0)
                    subjectLine = "ALERT : Package " + ReadVariable("System::PackageName").ToString() + " completed with [" + otherCount.ToString() + "] alert(s)";
                else
                    subjectLine = "SUCCESS : Package " + ReadVariable("System::PackageName").ToString() + " completed successfully";
            }

            SmtpClient oSmtpClient = null;

            if (bEmailMethod || bSMSMethod)
            {
                oSmtpClient = new SmtpClient(ReadVariable("User::varSSISOpsNF_SMTPServerName").ToString(), (int)GetSetting("SMTP_PORT", oRuntimeSettings));

                if (string.IsNullOrEmpty(GetSetting("SMTP_UID", oRuntimeSettings).ToString()) == false)
                    oSmtpClient.Credentials = new System.Net.NetworkCredential(GetSetting("SMTP_UID", oRuntimeSettings).ToString(), GetSetting("SMTP_PWD", oRuntimeSettings).ToString());
                else
                    oSmtpClient.UseDefaultCredentials = true;

                if ((bool)GetSetting("SMTP_USESSL", oRuntimeSettings))
                    oSmtpClient.EnableSsl = true;
            }

            if (isPackageRunning)
            {
                // Already sent immediate mode alert
                WriteVariable(NotificationFrameworkAlertListVariableName, string.Empty);
                alertInfos.Clear();
            }

            if (oMessage != null && oSmtpClient != null)
            {
                oMessage.Subject = subjectLine;

                try
                {
                    oSmtpClient.Send(oMessage);
                }
                catch (System.Net.Mail.SmtpException ex)
                {
                    _isErrorEncountered = true;

                    string exceptionMessage = UnwindExceptionMessages(ex);

                    Dts.Events.FireError((int)ex.StatusCode, NotificationFrameworkSubComponentName, exceptionMessage, "http://help.pragmaticworks.com/BIxPress/", 0);
                }
            }

            if (oMessageSMS != null && oSmtpClient != null)
            {
                if (iMaxLen > 400)
                {
                    ////Must be MMS 
                    oMessageSMS.Subject = subjectLine;

                    if (isDelayedMode == false)
                        oMessageSMS.Priority = MailPriority.High;
                }
                else
                    oMessageSMS.Subject = string.Empty;

                try
                {
                    oSmtpClient.Send(oMessageSMS);
                }
                catch (System.Net.Mail.SmtpException ex)
                {
                    _isErrorEncountered = true;

                    string exceptionMessage = UnwindExceptionMessages(ex);

                    Dts.Events.FireError((int)ex.StatusCode, NotificationFrameworkSubComponentName, exceptionMessage, "http://help.pragmaticworks.com/BIxPress/", 0);
                }
            }

            // Event Log
            if (bEventLogMethod)
            {
                if (errorCount > 0)
                    WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Error, "Application");
                else if (warningCount > 0)
                    WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Warning, "Application");
                else
                    WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Information, "Application");
            }

            // Log File
            if (bLogFileMethod)
            {
                // Log Event to Text File 
                string sPath = null;
                string sFileName = null;

                sPkgName = sPkgName.Replace("<", string.Empty).Replace(">", string.Empty).Replace(":", string.Empty).Replace("/", string.Empty).Replace("\\", string.Empty).Replace("*", string.Empty).Replace("|", string.Empty).Replace("?", string.Empty);

                if (errorCount > 0)
                    sFileName = "NF_LOG_" + System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") + "_ERROR_" + sPkgName + ".txt";
                else if (warningCount > 0)
                    sFileName = "NF_LOG_" + System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") + "_WARNING_" + sPkgName + ".txt";
                else
                    sFileName = "NF_LOG_" + System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") + "_INFO_" + sPkgName + ".txt";

                sPath = System.IO.Path.Combine(sLogFolderPath, sFileName);
                SaveTextToFile(messageBody, sPath, false, null);
            }

            // Increment notification counter
            WriteVariable(NotificationFrameworkCounter, notificationCounter++);
        }

        private System.Collections.Generic.List<AlertInfo> ParseAlertInfos(string alertInfosContents)
        {
            if (string.IsNullOrEmpty(alertInfosContents))
                return new System.Collections.Generic.List<AlertInfo>();

            System.Collections.Generic.List<AlertInfo> alertInfos = new System.Collections.Generic.List<AlertInfo>();

            try
            {
                // Create the XML document once here immediately before use so we don't have to validate it each time we add an AlertInfo object to the list.
                System.Xml.XmlDocument document = new System.Xml.XmlDocument();

                // This is the static XML document declaration that we will load our children into.
                // The <AlertInfos /> element will become our parent element which will contain all of the serialized
                // AlertInfo objects that we added in the OnWarning, OnError, etc. event handlers.
                document.LoadXml("<?xml version=\"1.0\" encoding=\"UTF-16\" ?><AlertInfos />");

                System.Xml.XmlDocumentFragment documentFragment = document.CreateDocumentFragment();

                documentFragment.InnerXml = alertInfosContents;

                document.DocumentElement.AppendChild(documentFragment);

                System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(AlertInfo), new Type[] { typeof(AlertType) });

                foreach (System.Xml.XmlElement alertInfoElement in document.DocumentElement.ChildNodes)
                {
                    using (System.IO.StringReader reader = new System.IO.StringReader(alertInfoElement.OuterXml))
                    {
                        AlertInfo parsedAlertInfo = xmlSerializer.Deserialize(reader) as AlertInfo;

                        if (parsedAlertInfo != null)
                            alertInfos.Add(parsedAlertInfo);
                    }
                }
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(60001, NotificationFrameworkSubComponentName, "There was an error while attempting to parse the accumulated alerts for BI xPress Notification Framework.  Error message: " + ex.Message, "http://help.pragmaticworks.com/BIxPress", 0);
            }

            return alertInfos;
        }

        private string UnwindExceptionMessages(Exception ex)
        {
            if (ex == null)
                return string.Empty;

            string messages = !string.IsNullOrEmpty(ex.Message) ? ex.Message : string.Empty;

            string childMessages = UnwindExceptionMessages(ex.InnerException);

            if (!string.IsNullOrEmpty(childMessages))
                messages += "  " + childMessages;

            return messages;
        }

        public bool WriteToEventLog(string logEntry, string appName, System.Diagnostics.EventLogEntryType eventType, string logName)
        {
            try
            {
                System.Diagnostics.EventLog objEventLog = new System.Diagnostics.EventLog();
            
                // Register the App as an Event Source 
                if (!System.Diagnostics.EventLog.SourceExists(appName))
                    System.Diagnostics.EventLog.CreateEventSource(appName, logName);

                objEventLog.Source = appName;
                objEventLog.WriteEntry(logEntry, eventType);

                return true;
            }
            catch (Exception ex)
            {
                _isErrorEncountered = true;
            
                Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, string.Format("An error occurred while creating the Windows Event Log \"{0}\": {1}.", logName, ex.Message), string.Empty, 0);

                return false;
            }
        }

        public bool SaveTextToFile(string fileContents, string filePath, bool isAppend, System.Text.Encoding encoding)
        {
            if (string.IsNullOrEmpty(filePath))
            {
                _isErrorEncountered = true;
            
                Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, "The log file path is invalid.  Unable to save log file.", string.Empty, 0);

                return false;
            }

            string directoryPath = System.IO.Path.GetDirectoryName(filePath);

            if (string.IsNullOrEmpty(filePath))
            {
                _isErrorEncountered = true;
                
                Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, "The log file directory path is invalid.  Unable to save log file.", string.Empty, 0);

                return false;
            }

            if (directoryPath != null && !System.IO.Directory.Exists(directoryPath))
            {
                _isErrorEncountered = true;
                
                Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, string.Format("The log file directory \"{0}\" does not exist.  Unable to save log file because the specified directory does not exist.", directoryPath), string.Empty, 0);

                return false;
            }

            try
            {
                using (System.IO.StreamWriter objWriter = encoding == null ? new System.IO.StreamWriter(filePath, isAppend) : new System.IO.StreamWriter(filePath, isAppend, encoding))
                {
                    objWriter.Write(fileContents);
                    objWriter.Close();
                }
            }
            catch (Exception ex)
            {
                _isErrorEncountered = true;
            
                Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, string.Format("An error occurred while creating the log file \"{0}\": {1}", filePath, ex.Message), string.Empty, 0);

                return false;
            }

            return true;
        }

        /// <summary>
        /// This will delete files with specified pattern which are older than specified days.
        /// </summary>
        /// <param name="directoryPath">The directory path for which to remove files.</param>
        /// <param name="fileExtensionSearchPattern">The log files search pattern.</param>
        /// <param name="olderThanDays">The number of days ago to begin deleting files.</param>
        /// <returns>The number of files that were deleted.</returns>
        public int DeleteOldFiles(string directoryPath, string fileExtensionSearchPattern, int olderThanDays)
        {
            int iDeleted = 0;

            try
            {
                if (!System.IO.Directory.Exists(directoryPath))
                {
                    Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, string.Format("The directory \"{0}\" does not exist.  Unable to delete old log files because the directory does not exist.", directoryPath), string.Empty, 0);

                    return 0;
                }

                string[] files = System.IO.Directory.GetFiles(directoryPath, fileExtensionSearchPattern);

                foreach (string myfile in files)
                {
                    System.IO.FileInfo fi = new System.IO.FileInfo(myfile);

                    // Write full path of this file 
                    if (fi.CreationTime < DateTime.Today.AddDays(0 - olderThanDays))
                    {
                        fi.Delete();
                        iDeleted++;
                    }
                }
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, string.Format("An error occurred while deleting old log files from the \"{0}\" directory: {1}", directoryPath, ex.Message), string.Empty, 0);
            }

            return iDeleted;
        }

        public string GetSubStringBetween(string stringToParse, string startString, string endString)
        {
            if (string.IsNullOrEmpty(stringToParse))
                return null;

            int startPosition = stringToParse.IndexOf(startString);
            int endPosition = stringToParse.IndexOf(endString);

            if (startPosition < 0 | endPosition < 0)
                return null;

            return stringToParse.Substring(startPosition + startString.Length, endPosition - (startPosition + startString.Length));
        }

        // Example : ReplaceSubStringBetween("---<a>test</a>---", "<a>", "</a>", "HHH",False) ===> ---<a>HHH</a>--- 
        // Example : ReplaceSubStringBetween("---<a>test</a>---", "<a>", "</a>", "HHH",True) ===> ---HHH--- 
        public string ReplaceSubStringBetween(string stringToParse, string startString, string endString, string replacewith, bool replacemarkers)
        {
            if (string.IsNullOrEmpty(stringToParse))
                return null;

            int startPosition = stringToParse.IndexOf(startString);
            int endPosition = stringToParse.IndexOf(endString);

            if (startPosition < 0 | endPosition < 0)
                return stringToParse;

            string s1 = null;
            string s2 = null;

            if (replacemarkers == false)
            {
                s1 = stringToParse.Remove(startPosition + startString.Length, (endPosition) - (startPosition + startString.Length));
                s2 = s1.Insert(startPosition + startString.Length, replacewith);
            }
            else
            {
                s1 = stringToParse.Remove(startPosition, (endPosition + endString.Length) - (startPosition));
                s2 = s1.Insert(startPosition, replacewith);
            }

            return s2;
        }

        private string GetPkgStatus(bool bPkgRunning, string sStepName, int iErrors, int iWarnings)
        {
            string sStatus = null;
            string s = string.Empty;

            if (string.IsNullOrEmpty(sStepName) == false)
                s = " @ STEP [" + sStepName + "]";

            if (iErrors > 0)
            {
                if (bPkgRunning == false)
                    sStatus = "COMPLETED W/ ERRORS";
                else
                    sStatus = "HAS " + (iErrors > 0 ? " ERRORS" : string.Empty) + s;
            }
            else
            {
                if (bPkgRunning == false)
                    sStatus = "COMPLETED" + (iWarnings > 0 ? " W/ WARNINGS" : string.Empty);
                else
                    sStatus = "HAS " + (iWarnings > 0 ? " WARNINGS" : string.Empty) + s;
            }

            return sStatus;
        }

        private string GetTextNotificationMessage(string sPkgName, DateTime dtStartTime, DateTime dtEndTime, string sRunTime, string sMachineName, string sExecAcctName, string sInteractive, bool bPkgRunning, string sStepName, ref int iErrors, ref int iWarnings, ref int iOtherAlerts, System.Collections.Generic.List<AlertInfo> alertList, bool bForSMS, int iSMSLength, bool bUseCustEmailTemplate, string sCustEmailTemplatePath)
        {
            System.Text.StringBuilder oSB = new System.Text.StringBuilder();
            System.Text.StringBuilder oSBAlerts = new System.Text.StringBuilder();

            System.Text.StringBuilder sbAlerts = new System.Text.StringBuilder();

            string sStatus = null;

            string sAlertType = null;

            string sTemplate = string.Empty;

            if (bForSMS == true)
                bUseCustEmailTemplate = false;

            string sAlertRow = string.Empty;
            string sAlertRows = string.Empty;

            if (bUseCustEmailTemplate == true)
            {
                try
                {
                    sTemplate = System.IO.File.ReadAllText(sCustEmailTemplatePath);
                    sAlertRow = GetSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->");
                }
                catch (Exception)
                {
                    bUseCustEmailTemplate = false;
                }
            }

            if (alertList.Count > 0)
            {
                if (bForSMS == false)
                    oSBAlerts.AppendLine("************ Total [" + alertList.Count + "] Alerts *************");
                else
                    oSBAlerts.AppendLine("<< [" + alertList.Count + "] Alerts >> ");

                oSBAlerts.AppendLine();

                foreach (AlertInfo alertInfo in alertList)
                {
                    if (alertInfo.AlertType == AlertType.ErrorAlert)
                    {
                        sAlertType = "ERROR";
                        iErrors = iErrors + 1;
                    }
                    else if (alertInfo.AlertType == AlertType.WarningAlert)
                    {
                        sAlertType = "WARNING";
                        iWarnings = iWarnings + 1;
                    }
                    else if (alertInfo.AlertType == AlertType.TimeThresholdAlert)
                    {
                        sAlertType = "TIME THRESHOLD ALERT";
                        iOtherAlerts = iOtherAlerts + 1;
                    }
                    else
                        sAlertType = "ALERT";

                    if (bForSMS)
                        oSBAlerts.AppendLine(alertInfo.SourceName + " >> " + sAlertType + " : " + alertInfo.AlertDescription);
                    else
                    {
                        if (bUseCustEmailTemplate && string.IsNullOrEmpty(sAlertRow) == false)
                            sAlertRows = sAlertRows + sAlertRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", sAlertType).Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture));
                        else
                            oSBAlerts.AppendLine((((("[" + (alertInfo.AlertTimeStamp).ToString("MM/dd HH:mm:ss") + "] ") + alertInfo.SourceName + " = > ") + sAlertType + "[") + alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture) + "] : ") + alertInfo.AlertDescription + System.Environment.NewLine);
                    }
                }
            }

            sStatus = GetPkgStatus(bPkgRunning, sStepName, iErrors, iWarnings);

            string sShortStatus = GetShortStatus(iErrors, iWarnings);

            if (bUseCustEmailTemplate)
            {
                sTemplate = sTemplate.Replace("{{PackageName}}", sPkgName
                        ).Replace("{{StatusLong}}", sStatus
                        ).Replace("{{StatusShort}}", sShortStatus
                        ).Replace("{{TotalAlertCount}}", (iErrors + iWarnings).ToString()
                        ).Replace("{{ErrorCount}}", iErrors.ToString()
                        ).Replace("{{WarningCount}}", iWarnings.ToString()
                        ).Replace("{{RunTime}}", sRunTime
                        ).Replace("{{MachineName}}", sMachineName
                        ).Replace("{{ExecutionAccount}}", sExecAcctName
                        ).Replace("{{WasInteractive}}", sInteractive
                        ).Replace("{{PackageStartTime}}", dtStartTime.ToString()
                        ).Replace("{{FrameworkVersion}}", "5.7.0.929"
                        ).Replace("{{PackageEndTime}}", dtEndTime.ToString());

                return ReplaceSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->", sAlertRows, true);
            }
            else
            {
                oSB.AppendLine("Package: " + sPkgName);
                oSB.AppendLine("Status: " + sStatus);

                if (bForSMS)
                    oSB.AppendLine("Start Time: " + dtStartTime.ToString("MM/dd HH:mm:ss"));
                else
                    oSB.AppendLine("Start Time: " + dtStartTime);

                if (bPkgRunning == false)
                {
                    if (bForSMS == false)
                        oSB.AppendLine("End Time: " + dtEndTime);

                    oSB.AppendLine("Run Time: " + FormatTimeDifference(dtStartTime, dtEndTime));
                }
                else if (bForSMS == false)
                    oSB.AppendLine("End Time: <Still Running>");

                if (bForSMS == false)
                {
                    oSB.AppendLine("Total Errors: " + iErrors);
                    oSB.AppendLine("Total Warnings: " + iWarnings);
                    oSB.AppendLine("Machine Name: " + sMachineName);
                    oSB.AppendLine("Was Interactive?: " + sInteractive);
                    oSB.AppendLine("Execution Account: " + sExecAcctName);
                    oSB.AppendLine();
                }

                return oSB.ToString() + oSBAlerts.ToString();
            }
        }

        private string GetHTMLNotificationMessage(string sPkgName, DateTime dtStartTime, DateTime dtEndTime, string sRunTime, string sMachineName, string sExecAcctName, string sInteractive, bool bPkgRunning, string sStepName, ref int iErrors, ref int iWarnings, ref int iOtherAlerts, System.Collections.Generic.List<AlertInfo> alertList, bool bForSMS, int iSMSLength, bool bUseCustEmailTemplate, string sCustEmailTemplatePath)
        {
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            System.Text.StringBuilder sbAlerts = new System.Text.StringBuilder();
            string sStatus = null;
            string sColor = null;
            string sTemplate = string.Empty;

            string sAlertBlock = string.Empty;
            string sErrorBlock = string.Empty;
            string sWarningBlock = string.Empty;
            string sErrorSourceBlock = string.Empty;
            string sWarningSourceBlock = string.Empty;
            string sErrorRow = string.Empty;
            string sWarningRow = string.Empty;

            if (bForSMS == true)
                bUseCustEmailTemplate = false;

            if (bUseCustEmailTemplate)
            {
                try
                {
                    sTemplate = System.IO.File.ReadAllText(sCustEmailTemplatePath);
                    sAlertBlock = GetSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->");

                    if (string.IsNullOrEmpty(sAlertBlock) == false)
                    {
                        sWarningBlock = sAlertBlock;
                        sErrorBlock = sAlertBlock;
                    }
                    else
                    {
                        sErrorBlock = GetSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->");
                        sWarningBlock = GetSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->");
                    }

                    sErrorSourceBlock = GetSubStringBetween(sErrorBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->");
                    sErrorRow = GetSubStringBetween(sErrorBlock, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->");

                    if (string.IsNullOrEmpty(sWarningBlock) == false)
                    {
                        sWarningSourceBlock = GetSubStringBetween(sWarningBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->");
                        sWarningRow = GetSubStringBetween(sWarningBlock, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->");
                    }
                }
                catch (Exception)
                {
                    // Dts.FireError "Can not load template file. " + ex.Message
                    // Dont use template becuase we cant load file 
                    bUseCustEmailTemplate = false;
                }
            }

            string sAlertHTML = string.Empty;

            /////////////////////////////////////////// 
            //Loop Through ERRORS 
            /////////////////////////////////////////// 

            string sErrorHTML = string.Empty;
            string sPrevSource = string.Empty;

            string sSourceAlertRows = string.Empty;

            foreach (AlertInfo alertInfo in alertList)
            {
                if (alertInfo.AlertType != AlertType.ErrorAlert)
                    continue;

                iErrors++;
                sColor = "FFD5D5";

                if (bUseCustEmailTemplate == true && string.IsNullOrEmpty(sErrorRow) == true)
                    continue;

                if (sPrevSource != alertInfo.SourceName)
                {
                    // Alert Source Line 
                    if (bUseCustEmailTemplate == true)
                    {
                        if (iErrors > 1)
                            sErrorHTML = ReplaceSubStringBetween(sErrorHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true); // Prev Source Block

                        if (string.IsNullOrEmpty(sWarningSourceBlock) == false)
                            sErrorHTML += sErrorSourceBlock.Replace("{{AlertSourceName}}", alertInfo.SourceName);
                        else
                            sErrorHTML += sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName);

                        sSourceAlertRows = string.Empty;
                    }
                    else
                        sErrorHTML += (("<tr><td width=\"100%\" bgcolor=\"#" + sColor + "\"><b>Source :</b> ") + alertInfo.SourceName + "</td></tr>") + System.Environment.NewLine;
                }

                // Alert Line 
                if (bUseCustEmailTemplate == true)
                    sSourceAlertRows = sSourceAlertRows + sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", "Error").Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture));
                else
                    sErrorHTML = sErrorHTML + ((("<tr><td width=\"100%\"><b>" + alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture) + " : " + "</b>[") + alertInfo.AlertCode + "] ") + alertInfo.AlertDescription + "</td></tr>") + System.Environment.NewLine;

                sPrevSource = alertInfo.SourceName;
            }

            if (iErrors > 0)
            {
                if (bUseCustEmailTemplate == true)
                {
                    // Replace last source detail after loop is done 
                    // Populate Prev Source Block 
                    sErrorHTML = ReplaceSubStringBetween(sErrorHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true);
                    // Populate Error Block 
                    if (string.IsNullOrEmpty(sAlertBlock) == false)
                        sAlertHTML += sErrorHTML;
                    else
                    {
                        sErrorBlock = ReplaceSubStringBetween(sErrorBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sErrorHTML, true);
                        sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->", sErrorBlock, true);
                    }
                }
                else
                {
                    sbAlerts.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                    sbAlerts.AppendLine("<tr><td width=\"100%\" bgcolor=\"#FF0000\"><font color=\"#FFFFFF\" Size=\"4\"><b>ERRORS</b></font></td></tr>");
                    sbAlerts.AppendLine(sErrorHTML);
                    sbAlerts.AppendLine("</table><BR>");
                }
            }
            else if (bUseCustEmailTemplate)
                sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->", string.Empty, true);

            /////////////////////////////////////////// 
            //Loop Through Warnings 
            /////////////////////////////////////////// 
            string sWarningHTML = string.Empty;
            sPrevSource = string.Empty;

            foreach (AlertInfo alertInfo in alertList)
            {
                if (alertInfo.AlertType != AlertType.WarningAlert)
                    continue;

                iWarnings++;
                sColor = "FFFF80";

                if (bUseCustEmailTemplate == true && string.IsNullOrEmpty(sWarningRow) == true)
                    continue;

                if (sPrevSource != alertInfo.SourceName)
                {
                    if (bUseCustEmailTemplate == true)
                    {
                        if (iWarnings > 1)
                            sWarningHTML = ReplaceSubStringBetween(sWarningHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true); // Prev Source Block

                        if (string.IsNullOrEmpty(sWarningSourceBlock) == false)
                            sWarningHTML += sWarningSourceBlock.Replace("{{AlertSourceName}}", alertInfo.SourceName);
                        else
                            sWarningHTML += sWarningRow.Replace("{{AlertSourceName}}", alertInfo.SourceName);

                        sSourceAlertRows = string.Empty;
                    }
                    else
                        sWarningHTML += (("<tr><td width=\"100%\" bgcolor=\"#" + sColor + "\"><b>Source :</b> ") + alertInfo.SourceName + "</td></tr>") + System.Environment.NewLine;
                }

                if (bUseCustEmailTemplate == true && string.IsNullOrEmpty(sWarningRow) == false)
                    sSourceAlertRows += sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", "Warning").Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture));
                else
                    sWarningHTML += ((("<tr><td width=\"100%\"><b>" + alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture) + " : " + "</b>[") + alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture) + "] ") + alertInfo.AlertDescription + "</td></tr>") + System.Environment.NewLine;

                sPrevSource = alertInfo.SourceName;
            }

            if (iWarnings > 0)
            {
                if (bUseCustEmailTemplate == true)
                {
                    if (string.IsNullOrEmpty(sWarningRow) == false)
                    {
                        sWarningHTML = ReplaceSubStringBetween(sWarningHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true);

                        // Populate Warning Block
                        if (string.IsNullOrEmpty(sAlertBlock) == false)
                            sAlertHTML += sWarningHTML;
                        else
                        {
                            sWarningBlock = ReplaceSubStringBetween(sWarningBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sWarningHTML, true);
                            sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->", sWarningBlock, true);
                        }
                    }
                }
                else
                {
                    sbAlerts.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                    sbAlerts.AppendLine("<tr><td width=\"100%\" bgcolor=\"#FD6013\"><font color=\"#FFFFFF\" Size=\"4\"><b>WARNINGS</b></font></td></tr>");
                    sbAlerts.AppendLine(sWarningHTML);
                    sbAlerts.AppendLine("</table><BR>");
                }
            }
            else if (bUseCustEmailTemplate)
                sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->", string.Empty, true);

            if (string.IsNullOrEmpty(sAlertBlock) == false)
            {
                sAlertBlock = ReplaceSubStringBetween(sAlertBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sAlertHTML, true);
                sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->", sAlertBlock, true);
            }

            sStatus = GetPkgStatus(bPkgRunning, sStepName, iErrors, iWarnings);

            if (bUseCustEmailTemplate == true)
            {
                string sShortStatus = GetShortStatus(iErrors, iWarnings);

                sTemplate = sTemplate.Replace("{{PackageName}}", sPkgName
                    ).Replace("{{StatusLong}}", sStatus
                    ).Replace("{{StatusShort}}", sShortStatus
                    ).Replace("{{TotalAlertCount}}", (iErrors + iWarnings).ToString()
                    ).Replace("{{ErrorCount}}", iErrors.ToString()
                    ).Replace("{{WarningCount}}", iWarnings.ToString()
                    ).Replace("{{RunTime}}", sRunTime
                    ).Replace("{{MachineName}}", sMachineName
                    ).Replace("{{ExecutionAccount}}", sExecAcctName
                    ).Replace("{{WasInteractive}}", sInteractive
                    ).Replace("{{PackageStartTime}}", dtStartTime.ToString()
                    ).Replace("{{FrameworkVersion}}", "5.7.0.929"
                    ).Replace("{{PackageEndTime}}", dtEndTime.ToString());
            }
            else
            {
                sbAlerts.AppendLine("<br><br><font face=\"Tahoma\" size=\"1\">This report was generated by <a href=\"http://www.pragmaticworks.com/pages/?src=bixpress&tag=NFEmail&url=/\">BI xPress Notification Framework</a> 5.7.0.929</font>");

                sColor = ((iErrors > 0 ? "FF0000" : ((iWarnings > 0 | iOtherAlerts > 0 ? "FD6013" : "00FF00"))));
                sb.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                sb.AppendLine((("<tr><td><p><b><font size=\"4\">" + sPkgName + " <font color=\"#") + sColor + "\">") + sStatus + "</font></font></b></td></tr>");
                sb.AppendLine("<tr><td width=\"100%\" bgcolor=\"#0B6BE1\"><font color=\"#FFFFFF\"><b>Package Execution Summary</b></font></td></tr>");
                sb.AppendLine("<tr><td width=\"100%\">");
                sb.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                sb.AppendLine(("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Execution Status</b></td><td> <font color=\"#" + sColor + "\">") + sStatus + "</font></td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Start Time</b></td><td>" + dtStartTime + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>End Time</b></td><td>" + dtEndTime + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Run Time</b></td><td>" + sRunTime + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Total Errors</b></td><td>" + iErrors + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Total Warnings</b></td><td>" + iWarnings + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Machine Name</b></td><td>" + sMachineName + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Execution Account</b></td><td>" + sExecAcctName + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Was Interactive?</b></td><td>" + sInteractive + "</td></tr>");
                sb.AppendLine("</table>");
                sb.AppendLine("</td></tr></table><BR>");
                sb.AppendLine();
            }

            if (bUseCustEmailTemplate == true)
                return sTemplate;
            else
                return sb.ToString() + sbAlerts.ToString();
        }

        private string GetShortStatus(int iErrors, int iWarnings)
        {
            if (iErrors > 0)
                return "ERROR";
            else if (iWarnings > 0)
                return "WARNING";
            else
                return "SUCCESS";
        }

        public string FormatTimeDifference(DateTime dStart, DateTime dEnd)
        {
            return FormatTimeSpanFromSec(dEnd.Subtract(dStart));
        }

        public string FormatTimeSpanFromSec(TimeSpan ts)
        {
            try
            {
                string msg = string.Empty;

                if (ts.Days > 0)
                    msg = ts.Days + " day,";

                if (ts.Hours > 0)
                    msg = msg + ts.Hours + " hr,";

                if (ts.Minutes > 0)
                    msg = msg + ts.Minutes + " min,";

                if (ts.Seconds > 0)
                    msg = msg + Math.Round(ts.Seconds + (ts.Milliseconds / 1000.0), 1) + " sec";
                else if (ts.TotalMilliseconds > 0 && string.IsNullOrEmpty(msg))
                    msg = Math.Round(ts.TotalMilliseconds / 1000.0, 2) + " sec";

                return msg.TrimEnd(',');
            }
            catch (Exception)
            {
                return "[0 sec]";
            }
        }

        object GetPropVal(object obj, string propname)
        {
            return System.ComponentModel.TypeDescriptor.GetProperties(obj)[propname].GetValue(obj);
        }

        private string GetLastAlertSource(System.Collections.Generic.List<AlertInfo> alertInfoList)
        {
            string alertSource = string.Empty;

            for (int i = alertInfoList.Count - 1; i > -1; i--)
            {
                if (alertInfoList[i].AlertType == AlertType.ErrorAlert)
                    return alertInfoList[i].SourceName;

                if (alertInfoList[i].AlertType == AlertType.WarningAlert && string.IsNullOrEmpty(alertSource))
                    alertSource = alertInfoList[i].SourceName;
            }

            return alertSource;
        }

        private string GetFilteredEmailList(string sOriginalList, string sSeperator, string sFilterPrefix)
        {
            string[] sArr = null;

            if (string.IsNullOrEmpty(sOriginalList))
                return string.Empty;

            string sReturn = string.Empty;

            sArr = sOriginalList.Split(sSeperator.ToCharArray(), 10000, StringSplitOptions.RemoveEmptyEntries);

            foreach (string sItm in sArr)
            {
                if (sItm.StartsWith(sFilterPrefix) == false)
                    sReturn += sItm + sSeperator;
            }

            return sReturn.Trim(sSeperator.ToCharArray());
        }
        private void SetSetting(string SettingName, object Value, System.Collections.Hashtable runtimeSettings)
        {
            SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (!runtimeSettings.ContainsKey(SettingName))
                throw new Exception(SettingName + " setting doesn't exist in runtime setting list.");

            runtimeSettings[SettingName] = Value;
        }

        private object GetSetting(string settingName, System.Collections.Hashtable runtimeSettings)
        {
            settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (runtimeSettings.ContainsKey(settingName))
                return runtimeSettings[settingName];

            // If key not found then set default 
            switch (settingName)
            {
                case "MAX_NOTIFICATIONS":
                    return 1;
                case "ENABLE_ROWCOUNT_THRESHOLD":
                    return false;
                case "ENABLE_TIME_THRESHOLD":
                    return false;
                case "PRIORITY_MODE":
                    //// DELAYED (After Package) or URGENT (After Task) 
                    return "URGENT";
                case "EMAIL_FORMAT":
                    //// TEXT or HTML 
                    return "TEXT";
                case "SMTP_PORT":
                    //// Default 25 
                    return 25;
                case "SMTP_USESSL":
                    //// Default False
                    return false;
                case "SMTP_UID":
                    return "";
                case "SMTP_PWD":
                    return "";
                case "SMS_EMAILLIST":
                    ////Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                    return "";
                case "FILTERED_ALERTS":
                    ////Must be pipe seperated e.g. -2344556|-11223445 .... 
                    return "";
                case "NOTIFY_ONERROR":
                    return true;
                case "NOTIFY_ONWARNING":
                    return false;
                case "NOTIFY_ONSUCCESS":
                    return false;
                case "NOTIFY_ONCOMPLETE":
                    return false;
                case "SMS_MAXLENGTH":
                    return 160;
                case "NF_CHECK":
                    return "";
                case "CC_EMAILLIST":
                    return "";
                case "BCC_EMAILLIST":
                    return "";
                case "NOTIFY_USING_EMAIL":
                    return true;
                case "NOTIFY_USING_SMS":
                    return true;
                case "NOTIFY_USING_EVENTLOG":
                    return false;
                case "NOTIFY_USING_LOGFILE":
                    return false;
                case "LOG_FOLDER_PATH":
                    return "C:\\SSIS\\Log";
                case "DELETE_LOG_OLDER_THAN_DAYS":
                    return 5;
                case "USE_CUSTOM_EMAIL_TEMPLATE":
                    return false;
                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                    return "C:\\SSIS\\Config\\NF_EmailTemplate.htm";
                default:
                    return null;
            }
        }

        [Serializable]
        public enum AlertType
        {
            ErrorAlert = 1,
            WarningAlert = 2,
            TimeThresholdAlert = 3,
            RowCountThresholdAlert = 4
        }

        // NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
        // In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
        public System.Collections.Hashtable GetRuntimeSettings()
        {
            object otherConfigSettingsVariableValue = ReadVariable("User::varSSISOpsNF_OtherConfigSettings");
            string otherConfigSettings = otherConfigSettingsVariableValue != null ? otherConfigSettingsVariableValue.ToString() : null;

            System.Collections.Hashtable runtimeSettings = new System.Collections.Hashtable();

            // Set Default values
            runtimeSettings.Add("MAX_NOTIFICATIONS", 1);
            runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", false);
            runtimeSettings.Add("ENABLE_TIME_THRESHOLD", false);
            runtimeSettings.Add("PRIORITY_MODE", "DELAYED");
            runtimeSettings.Add("EMAIL_FORMAT", "HTML");
            runtimeSettings.Add("SMTP_PORT", 25);
            runtimeSettings.Add("SMTP_USESSL", false);
            runtimeSettings.Add("SMTP_UID", string.Empty);
            runtimeSettings.Add("SMTP_PWD", string.Empty);
            runtimeSettings.Add("SMS_EMAILLIST", string.Empty);
            runtimeSettings.Add("FILTERED_ALERTS", string.Empty);
            runtimeSettings.Add("NOTIFY_ONERROR", true);
            runtimeSettings.Add("NOTIFY_ONWARNING", false);
            runtimeSettings.Add("NOTIFY_ONSUCCESS", false);
            runtimeSettings.Add("NOTIFY_ONCOMPLETE", false);
            runtimeSettings.Add("SMS_MAXLENGTH", 160);
            runtimeSettings.Add("CC_EMAILLIST", string.Empty);
            runtimeSettings.Add("BCC_EMAILLIST", string.Empty);
            runtimeSettings.Add("NOTIFY_USING_EMAIL", true);
            runtimeSettings.Add("NOTIFY_USING_SMS", true);
            runtimeSettings.Add("NOTIFY_USING_EVENTLOG", false);
            runtimeSettings.Add("NOTIFY_USING_LOGFILE", false);
            runtimeSettings.Add("LOG_FOLDER_PATH", "C:\\SSIS\\Log");
            runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5);
            runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", false);
            runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\\SSIS\\Config\\NF_EmailTemplate.htm");

            if (!string.IsNullOrEmpty(otherConfigSettings))
            {
                // Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

                const string PAIR_SEP = ";";
                const string NAMEVAL_SEP = "=";

                string[] arrNameValue = otherConfigSettings.Split(PAIR_SEP.ToCharArray());

                foreach (string sPair in arrNameValue)
                {
                    string[] arrTemp = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries);

                    try
                    {
                        if (arrTemp.Length >= 2)
                        {
                            string settingName = arrTemp[0];
                            string settingValue = arrTemp[1];

                            switch (settingName.ToUpper().Trim())
                            {
                                case "MAX_NOTIFICATIONS":
                                    runtimeSettings["MAX_NOTIFICATIONS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "ENABLE_ROWCOUNT_THRESHOLD":
                                    runtimeSettings["ENABLE_ROWCOUNT_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "ENABLE_TIME_THRESHOLD":
                                    runtimeSettings["ENABLE_TIME_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "PRIORITY_MODE":
                                    // DELAYED (After Package) or URGENT (After Task) 
                                    runtimeSettings["PRIORITY_MODE"] = (string)settingValue;
                                    break;
                                case "EMAIL_FORMAT":
                                    // TEXT or HTML 
                                    runtimeSettings["EMAIL_FORMAT"] = (string)settingValue;
                                    break;
                                case "SMTP_PORT":
                                    // Default 25 
                                    runtimeSettings["SMTP_PORT"] = Convert.ToInt32(settingValue);
                                    break;
                                case "SMTP_USESSL":
                                    // Default false
                                    runtimeSettings["SMTP_USESSL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMTP_UID":
                                    runtimeSettings["SMTP_UID"] = (string)settingValue;
                                    break;
                                case "SMTP_PWD":
                                    runtimeSettings["SMTP_PWD"] = (string)settingValue;
                                    break;
                                case "SMS_EMAILLIST":
                                    // Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                    runtimeSettings["SMS_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "FILTERED_ALERTS":
                                    ////Must be pipe seperated e.g. -111|-222 .... 
                                    runtimeSettings["FILTERED_ALERTS"] = (string)settingValue;
                                    break;
                                case "NOTIFY_ONERROR":
                                    runtimeSettings["NOTIFY_ONERROR"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONWARNING":
                                    runtimeSettings["NOTIFY_ONWARNING"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONSUCCESS":
                                    runtimeSettings["NOTIFY_ONSUCCESS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONCOMPLETE":
                                    runtimeSettings["NOTIFY_ONCOMPLETE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMS_MAXLENGTH":
                                    runtimeSettings["SMS_MAXLENGTH"] = Convert.ToInt32(settingValue);
                                    break;
                                case "CC_EMAILLIST":
                                    runtimeSettings["CC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "BCC_EMAILLIST":
                                    runtimeSettings["BCC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "NOTIFY_USING_EMAIL":
                                    runtimeSettings["NOTIFY_USING_EMAIL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_SMS":
                                    runtimeSettings["NOTIFY_USING_SMS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_EVENTLOG":
                                    runtimeSettings["NOTIFY_USING_EVENTLOG"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_LOGFILE":
                                    runtimeSettings["NOTIFY_USING_LOGFILE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "LOG_FOLDER_PATH":
                                    runtimeSettings["LOG_FOLDER_PATH"] = (string)settingValue;
                                    break;
                                case "DELETE_LOG_OLDER_THAN_DAYS":
                                    runtimeSettings["DELETE_LOG_OLDER_THAN_DAYS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "USE_CUSTOM_EMAIL_TEMPLATE":
                                    runtimeSettings["USE_CUSTOM_EMAIL_TEMPLATE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                                    runtimeSettings["CUSTOM_EMAIL_TEMPLATE_FILEPATH"] = (string)settingValue;
                                    break;
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, string.Empty, 0);
                    }
                }
            }

            SetNF(runtimeSettings);

            WriteVariable(NotificationFrameworkCounter, 0);

            return runtimeSettings;
        }

        public void SetNF(Hashtable runtimeSettings)
        {
            runtimeSettings.Add(((Char)78).ToString() + ((Char)70).ToString() + ((Char)95).ToString() + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString(), ReadVariable("User::varSSISOpsNF_" + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString()));
        }

        [Serializable]
        public class AlertInfo
        {
            /// <summary>
            /// Retained for serialization purposes.
            /// </summary>
            public AlertInfo()
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
                : this(alertDescription, alertCode, sourceName, sourceId, alertType, DateTime.Now)
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType, DateTime timeStamp)
            {
                AlertCode = alertCode;
                AlertDescription = alertDescription;
                AlertType = alertType;
                SourceName = sourceName;
                SourceId = sourceId;
                AlertTimeStamp = timeStamp;
            }

            public int AlertCode { get; set; }
            public string AlertDescription { get; set; }
            public DateTime AlertTimeStamp { get; set; }
            public AlertType AlertType { get; set; }
            public string SourceId { get; set; }
            public string SourceName { get; set; }
        }

        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_65f61d319881447a96040a2f3f776aab</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_65f61d319881447a96040a2f3f776aab</msb:DisplayName>
		<msb:ProjectId>{7A914AF9-FEDD-4A6A-86BF-7FEB944D3389}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_65f61d319881447a96040a2f3f776aab.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_65f61d319881447a96040a2f3f776aab.Properties.Settings.get_Default():st_65f61d319881447a96040a2f3f776aab.Properties.Sett" +
    "ings")]

namespace st_65f61d319881447a96040a2f3f776aab.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_65f61d319881447a96040a2f3f776aab.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_65f61d319881447a96040a2f3f776aab.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_65f61d319881447a96040a2f3f776aab.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_65f61d319881447a96040a2f3f776aab.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_65f61d319881447a96040a2f3f776aab.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_65f61d319881447a96040a2f3f776aab.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOteolcAAAAAAAAAAOAAAiELAQsAAIQAAAAIAAAAAAAAvqMA
AAAgAAAAwAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAAAAAQAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHCjAABLAAAAAMAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAOAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxIMAAAAgAAAAhAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAwAAAAAYAAACGAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAOAAAAACAAAAjAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
owAAAAAAAEgAAAACAAUA0FIAAKBQAAABAAAAAAAAABhSAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqogIoCQAABgJ7CAAABCwNAigWAAAKF28XAAAKKgIoFgAAChZvFwAACiob
MBIA9gsAAAIAABEWCgJycwAAcCgfAAAGbxgAAAoLAnKbAABwKB8AAAalCwAAAQwoGQAACg0Ccr8A
AHAoHwAABm8YAAAKEwQCcuEAAHAoHwAABm8YAAAKEwUCcgkBAHAoHwAABm8YAAAKEwYUEwcCKBwA
AAYTCAJyOQEAcCgfAAAGbxgAAAoCclsBAHAoHwAABm8YAAAKKBoAAAoTChEKLCYWCn4bAAAKEwcC
cn8BAHAoHwAABnUjAAABJS0GJn4bAAAKEwkrPBcKAnLBAQBwEQgoGwAABnQjAAABct0BAHAoGgAA
CiwBKgJy7QEAcCgfAAAGdSMAAAElLQYmfhsAAAoTCQIRCSgKAAAGEwsRCiwUEQtvHAAAChYxCgIR
CygYAAAGEwcUEwwUEw0UEw4WEw8WExAWExECcicCAHAoHwAABqUkAAABExICcncCAHARCCgbAAAG
pSQAAAETEwJymwIAcBEIKBsAAAalJQAAARMUAnLBAgBwEQgoGwAABqUlAAABExUCcuMCAHARCCgb
AAAGpSUAAAETFgJyDwMAcBEIKBsAAAalJQAAARMXAnI5AwBwEQgoGwAABqUlAAABExgCcm0DAHAR
CCgbAAAGdCMAAAETGQJyqwMAcBEIKBsAAAZ0IwAAARMaAnLLAwBwEQgoGwAABqUkAAABExsRC28c
AAAKFjApAnIBBABwEQgoGwAABqUlAAABLRUCciUEAHARCCgbAAAGpSUAAAEtASoRC28cAAAKFjAE
BiwBKgYsGxESERMyFQJyAQQAcBEIKBsAAAalJQAAAS0BKgJywQEAcBEIKBsAAAZ0IwAAAXLdAQBw
KBoAAAoTHAJyAQQAcBEIKBsAAAalJQAAAS0KERwtBhESFjEBKgJyRwQAcCgfAAAGEx0RHS0HcncE
AHArBxEdbxgAAAoTHn4bAAAKEx8RFCwzAnK9BABwKB8AAAYsJgJyvQQAcCgfAAAGbxgAAAoTHwIR
H3LpBABwcu0EAHAoGQAABhMfFBMgER8oHQAACjpdAQAAcx4AAAoTIBEgER5zHwAACm8gAAAKESBv
IQAAChEfcukEAHBy9QQAcG8iAAAKbyMAAAoRHC0IESAYbyQAAAoCcvkEAHARCCgbAAAGdCMAAAET
IQJyEwUAcBEIKBsAAAZ0IwAAARMiESEoHQAACi0sESBvJQAAChEhcukEAHBy9QQAcG8iAAAKci8F
AHBy9QQAcG8iAAAKbyMAAAoRIigdAAAKLSwRIG8mAAAKESJy6QQAcHL1BABwbyIAAApyLwUAcHL1
BABwbyIAAApvIwAACgJyMwUAcBEIKBsAAAZ0IwAAAXJNBQBwKBoAAAosNBEgF28nAAAKAgcICQII
CSgVAAAGEQURBBEGBhEHEg8SEBIREQsWFhEYERkoEwAABhMMKzIRIBZvJwAACgIHCAkCCAkoFQAA
BhEFEQQRBgYRBxIPEhASERELFhYRGBEZKBIAAAYTDBEgEQxvKAAAChEWLQQRFyxOFhMPFhMQFhMR
AgcICQIICSgVAAAGEQURBBEGBhEHEg8SEBIREQsWFhZ+GwAACigSAAAGEwwRFywVERsWMRACERpy
VwUAcBEbKA4AAAYmERAWMRQCcnEFAHARCCgbAAAGpSUAAAEtVhEPFjFRAnIlBABwEQgoGwAABqUl
AAABLD0CcgEEAHARCCgbAAAGpSUAAAEtKQJykwUAcBEIKBsAAAalJQAAAS0VAnJxBQBwEQgoGwAA
BqUlAAABLQEqAnKxBQBwEQgoGwAABqUkAAABEyMCcs0FAHARCCgbAAAGdCMAAAETJBEkKB0AAAot
FAIRJHIvBQBwcu0EAHAoGQAABhMkFBMlERU5DwEAABEkKB0AAAo6AwEAAHMeAAAKEyURJREecx8A
AApvIAAAChElbyEAAAoRJHIvBQBwcvUEAHBvIgAACm8jAAAKFhMPFhMQFhMRAgcICQIICSgVAAAG
EQURBBEGBhEHEg8SEBIREQsXESMWfhsAAAooEgAABhMOEQ8WMRURDxcuB3LpBQBwKwVyBQYAcBMm
KzsREBYxFREQFy4Hch8GAHArBXI/BgBwEyYrIRERFjEVEREXLgdyXQYAcCsFcn0GAHATJisHcpsG
AHATJhEmKCkAAAoRDigqAAAKEyYRJm8rAAAKESMRHm8rAAAKWTIaESURJhEjER5vKwAACllvLAAA
Cm8oAAAKKwkRJREmbygAAAoGOd4AAAARDxYxTxuNAQAAARMuES4WcrkGAHCiES4XAnJzAABwKB8A
AAaiES4YctsGAHCiES4ZAnILBwBwKB8AAAaiES4acjEHAHCiES4oLQAAChMNOKQBAAAREBYxWRuN
IwAAARMvES8WcjUHAHCiES8XAnJzAABwKB8AAAZvGAAACqIRLxhyWwcAcKIRLxkCcgsHAHAoHwAA
Bm8YAAAKohEvGnIxBwBwohEvKC4AAAoTDThGAQAAEREWMSZyjwcAcAJycwAAcCgfAAAGbxgAAApy
sQcAcCgqAAAKEw04GwEAACoRDxYxUBuNIwAAARMwETAWcrkGAHCiETAXAnJzAABwKB8AAAZvGAAA
CqIRMBhy6QcAcKIRMBkSDygvAAAKohEwGnINCABwohEwKC4AAAoTDTjFAAAAERAWMU0bjSMAAAET
MRExFnI1BwBwohExFwJycwAAcCgfAAAGbxgAAAqiETEYcukHAHCiETEZEhAoLwAACqIRMRpyIwgA
cKIRMSguAAAKEw0rcxERFjFNG40jAAABEzIRMhZyjwcAcKIRMhcCcnMAAHAoHwAABm8YAAAKohEy
GHLpBwBwohEyGRIRKC8AAAqiETIacj0IAHCiETIoLgAAChMNKyFyUwgAcAJycwAAcCgfAAAGbxgA
AApyeQgAcCgqAAAKEw0UEycRFC0HERU5mAAAAAJyqQgAcCgfAAAGbxgAAAoCcu0IAHARCCgbAAAG
pSQAAAFzMAAAChMnAnIBCQBwEQgoGwAABm8YAAAKKB0AAAotMhEnAnIBCQBwEQgoGwAABm8YAAAK
AnITCQBwEQgoGwAABm8YAAAKczEAAApvMgAACisIEScXbzMAAAoCciUJAHARCCgbAAAGpSUAAAEs
CBEnF280AAAKBiwXAnLtAQBwfhsAAAooHgAABhELbzUAAAoRICxSEScsThEgEQ1vNgAAChEnESBv
NwAACt46EygCF30IAAAEAhEoKAsAAAYTKQIoFgAACm84AAAKEShvOQAACnI9CQBwESlylQkAcBZv
OgAACibeABElLHURJyxxESMgkAEAADEXESURDW82AAAKERwtFhElGG8kAAAKKwwRJX4bAAAKbzYA
AAoRJxElbzcAAAreOhMqAhd9CAAABAIRKigLAAAGEysCKBYAAApvOAAAChEqbzkAAApyPQkAcBEr
cpUJAHAWbzoAAAom3gARFixKEQ8WMRYCEQxy5wkAcBdy+wkAcCgMAAAGJisvERAWMRYCEQxy5wkA
cBhy+wkAcCgMAAAGJisUAhEMcucJAHAacvsJAHAoDAAABiYRFzmBAQAAFBMsFBMtB3ITCgBwfhsA
AApvIgAACnIXCgBwfhsAAApvIgAACnIbCgBwfhsAAApvIgAACnIfCgBwfhsAAApvIgAACnIjCgBw
fhsAAApvIgAACnInCgBwfhsAAApvIgAACnIvBQBwfhsAAApvIgAACnIrCgBwfhsAAApvIgAACgsR
DxYxTRuNIwAAARMzETMWci8KAHCiETMXKBkAAAoTNBI0cj8KAHAoOwAACqIRMxhyYwoAcKIRMxkH
ohEzGnJzCgBwohEzKC4AAAoTLTiXAAAAERAWMUobjSMAAAETNRE1FnIvCgBwohE1FygZAAAKEzYS
NnI/CgBwKDsAAAqiETUYcn0KAHCiETUZB6IRNRpycwoAcKIRNSguAAAKEy0rSBuNIwAAARM3ETcW
ci8KAHCiETcXKBkAAAoTOBI4cj8KAHAoOwAACqIRNxhykQoAcKIRNxkHohE3GnJzCgBwohE3KC4A
AAoTLREaES0oPAAAChMsAhEMESwWFCgNAAAGJgJyJwIAcBESJRdYExKMJAAAASgeAAAGKgAAARwA
AAAASgkLVQk6LwAAAQAAwwkLzgk6LwAAARswBgAbAQAAAwAAEQMoHQAACiwGcz0AAAoqcz0AAAoK
cz4AAAoLB3KfCgBwbz8AAAoHb0AAAAoMCANvQQAACgdvQgAACghvQwAACibQBwAAAigPAAAKF40b
AAABEwgRCBbQBgAAAigPAAAKohEIc0QAAAoNB29CAAAKb0UAAApvRgAAChMJK0URCW9HAAAKdDUA
AAETBBEEb0gAAApzSQAAChMFCREFb0oAAAp1BwAAAhMGEQYsCAYRBm9LAAAK3gwRBSwHEQVvTAAA
CtwRCW9NAAAKLbLeFREJdTsAAAETChEKLAcRCm9MAAAK3N42EwcCKBYAAApvOAAACiBh6gAAcj0J
AHByDQsAcBEHb04AAAooTwAACnIEDABwFm86AAAKJt4ABioAASgAAAIAmAAdtQAMAAAAAAIAegBS
zAAVAAAAAAAAFADP4wA2CAAAARMwAwBIAAAABAAAEQMtBn4bAAAKKgNvTgAACigdAAAKLAd+GwAA
CisGA29OAAAKCgIDb1AAAAooCwAABgsHKB0AAAotDQZyVAwAcAcoKgAACgoGKhswBgBmAAAABQAA
EXNRAAAKCgQoUgAACi0IBA4EKFMAAAoGBG9UAAAKBgMFb1UAAAoXDN47CwIXfQgAAAQCKBYAAApv
OAAAChVyPQkAcHJaDABwDgQHb04AAAooVgAACn4bAAAKFm86AAAKJhYM3gAIKgAAARAAAAAAAAAp
KQA7CAAAARswBgAlAQAABgAAEQQoHQAACiwvAhd9CAAABAIoFgAACm84AAAKIFORAsByPQkAcHLh
DABwfhsAAAoWbzoAAAomFioEKFcAAAoKBCgdAAAKLC8CF30IAAAEAigWAAAKbzgAAAogU5ECwHI9
CQBwclENAHB+GwAAChZvOgAACiYWKgYsPQYoWAAACi01Ahd9CAAABAIoFgAACm84AAAKIFORAsBy
PQkAcHLWDQBwBihZAAAKfhsAAAoWbzoAAAomFioOBCwLBAUOBHNaAAAKKwcEBXNbAAAKCwcDb1wA
AAoHb10AAAreCgcsBgdvTAAACtzeOgwCF30IAAAEAigWAAAKbzgAAAoVcj0JAHByww4AcAQIb04A
AAooVgAACn4bAAAKFm86AAAKJhYN3gIXKgkqAAAAARwAAAIAzAAP2wAKAAAAAAAAtQAy5wA6CAAA
ARswBgDLAAAABwAAERYKAyhYAAAKLTQCKBYAAApvOAAACiBTkQLAcj0JAHByNQ8AcAMoWQAACn4b
AAAKFm86AAAKJhYTBd2KAAAAAwQoXgAACgsHEwYWEwcrOxEGEQeaDAhzXwAACg0Jb2AAAAooYQAA
ChMIEggFZWwoYgAACihjAAAKLAoJb2QAAAoGF1gKEQcXWBMHEQcRBo5pMr3eMxMEAigWAAAKbzgA
AAoVcj0JAHByChAAcAMRBG9OAAAKKFYAAAp+GwAAChZvOgAACibeAAYqEQUqAAEQAAAAAAIAkZMA
MwgAAAETMAUAQAAAAAgAABEDKB0AAAosAhQqAwRvZQAACgoDBW9lAAAKCwYW/gQHFv4EYCwCFCoD
BgRvKwAAClgHBgRvKwAAClhZb2YAAAoqEzAFAHkAAAAJAAARAygdAAAKLAIUKgMEb2UAAAoKAwVv
ZQAACgsGFv4EBxb+BGAsAgMqFAwUDQ4FLSwDBgRvKwAAClgHBgRvKwAAClhZb2cAAAoMCAYEbysA
AApYDgRvaAAACg0rHAMGBwVvKwAAClgGWW9nAAAKDAgGDgRvaAAACg0JKgAAABMwAwCOAAAABAAA
ERQKfhsAAAoLBCgdAAAKLRFypRAAcARyMQcAcCgqAAAKCwUWMSkDLQhyuRAAcAorXHLhEABwBRYw
B34bAAAKKwVy6xAAcAcoKgAACgorPgMtHnL7EABwDgQWMAd+GwAACisFcg8RAHAoTwAACgorHXLh
EABwDgQWMAd+GwAACisFcikRAHAHKCoAAAoKBioAABswBgDuBAAACgAAEXNpAAAKCnNpAAAKC3Np
AAAKJhQMFA1+GwAAChMEDg4sAxYQEH4bAAAKEwV+GwAAChMGDhAsJQ4RKGoAAAoTBAIRBHI9EQBw
cnMRAHAoDwAABhMF3gYmFhAQ3gAODW8cAAAKFj5LAgAADg4tJAdypREAcA4NbxwAAAqMJAAAAXLP
EQBwKGsAAApvbAAACiYrIgdy/REAcA4NbxwAAAqMJAAAAXIHEgBwKGsAAApvbAAACiYHb20AAAom
Dg1vbgAAChMJONABAAASCShvAAAKEwcRB28qAAAGFzMQciESAHANDgoOCkoXWFQrOhEHbyoAAAYY
MxByLRIAcA0OCw4LShdYVCsgEQdvKgAABhkzEHI9EgBwDQ4MDgxKF1hUKwZyZxIAcA0ODixIBxuN
IwAAARMKEQoWEQdvLgAABqIRChdycxIAcKIRChgJohEKGXJ9EgBwohEKGhEHbyYAAAaiEQooLgAA
Cm9sAAAKJjgnAQAADhA5hAAAABEFKB0AAAotexEGEQVyhRIAcBEHby4AAAZvIgAACnKtEgBwEQdv
KAAABhMLEgsocAAACihxAAAKbyIAAApyyRIAcAlvIgAACnLlEgBwEQdvJgAABm8iAAAKcgcTAHAR
B28kAAAGEwwSDChyAAAKKHMAAApvIgAACihPAAAKEwY4nAAAAAcfC40jAAABEw0RDRZyIxMAcKIR
DRcRB28oAAAGEw4SDnInEwBwKDsAAAqiEQ0YckUTAHCiEQ0ZEQdvLgAABqIRDRpySxMAcKIRDRsJ
ohENHHIjEwBwohENHREHbyQAAAYTDxIPKHIAAAoocwAACqIRDR5yVxMAcKIRDR8JEQdvJgAABqIR
DR8KKCkAAAqiEQ0oLgAACm9sAAAKJhIJKHQAAAo6JP7//94OEgn+FgIAABtvTAAACtwCDggOCQ4K
Sg4LSigRAAAGDAIOCkoOC0ooFAAABhMIDhA55QAAABEEcmETAHADbyIAAApygRMAcAhvIgAACnKf
EwBwEQhvIgAACnK/EwBwDgpKDgtKWBMQEhAoLwAACm8iAAAKcucTAHAOCigvAAAKbyIAAApyBRQA
cA4LKC8AAApvIgAACnInFABwDgRvIgAACnI/FABwDgVvIgAACnJfFABwDgZvIgAACnKJFABwDgdv
IgAACnKvFABwDwL+FgsAAAFvGAAACm8iAAAKctkUAHByAxUAcG8iAAAKchcVAHAPA/4WCwAAAW8Y
AAAKbyIAAAoTBAIRBHI9EQBwcnMRAHARBhcoEAAABioGcj0VAHADKE8AAApvbAAACiYGclEVAHAI
KE8AAApvbAAACiYODiwfBnJjFQBwDwJyJxMAcCg7AAAKKE8AAApvbAAACiYrFwZyYxUAcASMCwAA
ASh1AAAKb2wAAAomDggtNg4OLRcGcn0VAHAFjAsAAAEodQAACm9sAAAKJgZykxUAcAIEBSgVAAAG
KE8AAApvbAAACiYrEA4OLQwGcqkVAHBvbAAACiYODi1yBnLdFQBwDgpKjCQAAAEodQAACm9sAAAK
JgZy+xUAcA4LSowkAAABKHUAAApvbAAACiYGch0WAHAOBShPAAAKb2wAAAomBnI7FgBwDgcoTwAA
Cm9sAAAKJgZyYRYAcA4GKE8AAApvbAAACiYGb20AAAomBm8YAAAKB28YAAAKKE8AAAoqAABBNAAA
AAAAADYAAAAfAAAAVQAAAAYAAAAIAAABAgAAAMIAAADjAQAApQIAAA4AAAAAAAAAGzAGAFEKAAAL
AAARc2kAAAoKc2kAAAoLFAwUDX4bAAAKEwR+GwAAChMFfhsAAAoTBn4bAAAKEwd+GwAAChMIfhsA
AAoTCX4bAAAKEwp+GwAAChMLDg4sAxYQEA4QObkAAAAOEShqAAAKEwQCEQRyPREAcHJzEQBwKA8A
AAYTBREFKB0AAAotChEFEwcRBRMGKygCEQRyiRYAcHK/FgBwKA8AAAYTBgIRBHLxFgBwcisXAHAo
DwAABhMHAhEGcmEXAHBymRcAcCgPAAAGEwgCEQZyzRcAcHL/FwBwKA8AAAYTChEHKB0AAAotKAIR
B3JhFwBwcpkXAHAoDwAABhMJAhEHcs0XAHBy/xcAcCgPAAAGEwveBiYWEBDeAH4bAAAKEwx+GwAA
ChMNfhsAAAoTDn4bAAAKEw8ODW9uAAAKExQ4BAIAABIUKG8AAAoTEBEQbyoAAAYXQO4BAAAOCiVK
F1hUci0YAHANDhAsDBEKKB0AAAo60QEAABEOERBvLgAABih2AAAKObwAAAAOECxpDgpKFzEXAhEN
cs0XAHBy/xcAcBEPFygQAAAGEw0RCSgdAAAKLR4RDREIcoUSAHAREG8uAAAGbyIAAAooTwAAChMN
KxwRDREKcoUSAHAREG8uAAAGbyIAAAooTwAAChMNfhsAAAoTDytPEQ0TFR2NIwAAARMWERYWERWi
ERYXcjsYAHCiERYYCaIRFhlyexgAcKIRFhoREG8uAAAGohEWG3KhGABwohEWHCgpAAAKohEWKC4A
AAoTDQ4QLHwRDxEKcoUSAHAREG8uAAAGbyIAAApyrRIAcBEQbygAAAYTFxIXKHAAAAoocQAACm8i
AAAKcskSAHBytxgAcG8iAAAKcuUSAHAREG8mAAAGbyIAAApyBxMAcBEQbyQAAAYTGBIYKHIAAAoo
cwAACm8iAAAKKE8AAAoTDyt5HwmNAQAAARMZERkWEQ2iERkXcsMYAHCiERkYERBvKAAABhMaEhoo
cAAACihxAAAKohEZGXL1GABwohEZGhEQbyQAAAaMJAAAAaIRGRtyRRMAcKIRGRwREG8mAAAGohEZ
HXKhGABwohEZHigpAAAKohEZKC0AAAoTDREQby4AAAYTDhIUKHQAAAo68P3//94OEhT+FgIAABtv
TAAACtwOCkoWPpAAAAAOECxdAhENcs0XAHBy/xcAcBEPFygQAAAGEw0RBSgdAAAKLQ0RDBENKE8A
AAoTDCt9AhEGcmEXAHBymRcAcBENFygQAAAGEwYCEQRyiRYAcHK/FgBwEQYXKBAAAAYTBCtNB3IH
GQBwb2wAAAomB3LYGQBwb2wAAAomBxENb2wAAAomB3KjGgBwb2wAAAomKx4OECwaAhEEcokWAHBy
vxYAcH4bAAAKFygQAAAGEwR+GwAAChMRfhsAAAoTDg4Nb24AAAoTGzggAgAAEhsobwAAChMSERJv
KgAABhhACgIAAA4LJUoXWFRyvRoAcA0OECwMEQsoHQAACjrtAQAAEQ4REm8uAAAGKHYAAAo5vAAA
AA4QLGkOC0oXMRcCERFyzRcAcHL/FwBwEQ8XKBAAAAYTEREJKB0AAAotHhEREQlyhRIAcBESby4A
AAZvIgAACihPAAAKExErHBEREQtyhRIAcBESby4AAAZvIgAACihPAAAKExF+GwAAChMPK08RERMc
HY0jAAABEx0RHRYRHKIRHRdyOxgAcKIRHRgJohEdGXJ7GABwohEdGhESby4AAAaiER0bcqEYAHCi
ER0cKCkAAAqiER0oLgAAChMRDhA5iAAAABELKB0AAAotfxEPEQpyhRIAcBESby4AAAZvIgAACnKt
EgBwERJvKAAABhMeEh4ocAAACihxAAAKbyIAAApyyRIAcHLLGgBwbyIAAApy5RIAcBESbyYAAAZv
IgAACnIHEwBwERJvJAAABhMfEh8ocgAACihzAAAKbyIAAAooTwAAChMPOIYAAAARERMgHwmNIwAA
ARMhESEWESCiESEXcsMYAHCiESEYERJvKAAABhMiEiIocAAACihxAAAKohEhGXL1GABwohEhGhES
byQAAAYTIxIjKHIAAAoocwAACqIRIRtyRRMAcKIRIRwREm8mAAAGohEhHXKhGABwohEhHigpAAAK
ohEhKC4AAAoTERESby4AAAYTDhIbKHQAAAo61P3//94OEhv+FgIAABtvTAAACtwOC0oWPpwAAAAO
ECxpEQsoHQAACjqqAAAAAhERcs0XAHBy/xcAcBEPFygQAAAGExERBSgdAAAKLQ0RDBERKE8AAAoT
DCt9AhEHcmEXAHBymRcAcBERFygQAAAGEwcCEQRy8RYAcHIrFwBwEQcXKBAAAAYTBCtNB3IHGQBw
b2wAAAomB3LbGgBwb2wAAAomBxERb2wAAAomB3KjGgBwb2wAAAomKx4OECwaAhEEcvEWAHByKxcA
cH4bAAAKFygQAAAGEwQRBSgdAAAKLS4CEQVyYRcAcHKZFwBwEQwXKBAAAAYTBQIRBHI9EQBwcnMR
AHARBRcoEAAABhMEAg4IDgkOCkoOC0ooEQAABgwOEDniAAAAAg4KSg4LSigUAAAGExMRBHJhEwBw
A28iAAAKcoETAHAIbyIAAApynxMAcBETbyIAAApyvxMAcA4KSg4LSlgTJBIkKC8AAApvIgAACnLn
EwBwDgooLwAACm8iAAAKcgUUAHAOCygvAAAKbyIAAApyJxQAcA4EbyIAAApyPxQAcA4FbyIAAApy
XxQAcA4GbyIAAApyiRQAcA4HbyIAAApyrxQAcA8C/hYLAAABbxgAAApvIgAACnLZFABwcgMVAHBv
IgAACnIXFQBwDwP+FgsAAAFvGAAACm8iAAAKEwQ43AEAAAdyqhsAcG9sAAAKJg4KShYwHQ4LShb+
Ag4MShb+AmAtB3I3HQBwKwxyRR0AcCsFclMdAHANBnIHGQBwb2wAAAomBh2NIwAAARMlESUWcmEd
AHCiESUXA6IRJRhynR0AcKIRJRkJohElGnK9HQBwohElGwiiESUccsMdAHCiESUoLgAACm9sAAAK
JgZy/R0AcG9sAAAKJgZy3B4AcG9sAAAKJgZyBxkAcG9sAAAKJgYbjSMAAAETJhEmFnIIHwBwohEm
FwmiESYYcr0dAHCiESYZCKIRJhpytR8AcKIRJiguAAAKb2wAAAomBnLZHwBwBIwLAAABcqEYAHAo
awAACm9sAAAKJgZyXCAAcAWMCwAAAXKhGABwKGsAAApvbAAACiYGctogAHAOBHKhGABwKCoAAApv
bAAACiYGclghAHAOCkqMJAAAAXKhGABwKGsAAApvbAAACiYGct8hAHAOC0qMJAAAAXKhGABwKGsA
AApvbAAACiYGcmoiAHAOBXKhGABwKCoAAApvbAAACiYGcvEiAHAOBnKhGABwKCoAAApvbAAACiYG
coIjAHAOB3KhGABwKCoAAApvbAAACiYGchEkAHBvbAAACiYGciMkAHBvbAAACiYGb20AAAomDhAs
AxEEKgZvGAAACgdvGAAACihPAAAKKgAAAEFMAAAAAAAAVgAAALMAAAAJAQAABgAAAAgAAAECAAAA
NAEAABcCAABLAwAADgAAAAAAAAACAAAAJwQAADMCAABaBgAADgAAAAAAAABqAxYxBnIhEgBwKgQW
MQZyLRIAcCpyUSQAcCo+Ag8CAyh3AAAKKBYAAAYqABswBAALAQAADAAAEX4bAAAKCg8BKHgAAAoW
MRcPASh4AAAKjCQAAAFyYSQAcCh1AAAKCg8BKHkAAAoWMRgGDwEoeQAACowkAAABcm0kAHAoawAA
CgoPASh6AAAKFjEYBg8BKHoAAAqMJAAAAXJ3JABwKGsAAAoKDwEoewAAChYxNAYPASh7AAAKbA8B
KHwAAApsIwAAAAAAQI9AW1gXKH0AAAqMRwAAAXKDJABwKGsAAAoKK0EPASh+AAAKIwAAAAAAAAAA
Ni8GKB0AAAosJw8BKH4AAAojAAAAAABAj0BbGCh9AAAKjEcAAAFygyQAcCh1AAAKCgYXjUgAAAEM
CBYfLJ0Ib38AAAoL3gkmco0kAHAL3gAHKgBBHAAAAAAAAAAAAAAAAQAAAAEAAAkAAAAIAAABTgMo
gAAACgRvgQAACgNvggAACioTMAIAWwAAAA0AABF+GwAACgoDbxwAAAoXWQsrRAMHb4MAAApvKgAA
BhczDQMHb4MAAApvLgAABioDB2+DAAAKbyoAAAYYMxUGKB0AAAosDQMHb4MAAApvLgAABgoHF1kL
BxUwuAYqABMwBABhAAAADgAAERQKAygdAAAKLAZ+GwAACip+GwAACgsDBG+EAAAKIBAnAAAXb4UA
AAoKBg0WEwQrHQkRBJoMCAVvhgAACi0JBwgEKCoAAAoLEQQXWBMEEQQJjmky3AcEb4QAAApvhwAA
CirWAyhyAAAKb4gAAApviQAAChABBQNvigAACi0RA3KdJABwKE8AAApziwAACnoFAwRvjAAACioA
EzAEAN8CAAANAAARAyhyAAAKb4gAAApviQAAChABBANvigAACiwIBANvjQAACioDJQo5sgIAAP4T
fhcAAAQ6ZAEAAB8bc44AAAolcncCAHAWKI8AAAolcv0kAHAXKI8AAAolcjElAHAYKI8AAAolcsEB
AHAZKI8AAAolcjMFAHAaKI8AAAolcu0IAHAbKI8AAAolciUJAHAcKI8AAAolcgEJAHAdKI8AAAol
chMJAHAeKI8AAAolcs0FAHAfCSiPAAAKJXJdJQBwHwoojwAACiVykwUAcB8LKI8AAAolcnEFAHAf
DCiPAAAKJXIlBABwHw0ojwAACiVyAQQAcB8OKI8AAAolcrEFAHAfDyiPAAAKJXJ9JQBwHxAojwAA
CiVy+QQAcB8RKI8AAAolchMFAHAfEiiPAAAKJXKbAgBwHxMojwAACiVywQIAcB8UKI8AAAolcuMC
AHAfFSiPAAAKJXIPAwBwHxYojwAACiVyqwMAcB8XKI8AAAolcssDAHAfGCiPAAAKJXI5AwBwHxko
jwAACiVybQMAcB8aKI8AAAr+E4AXAAAE/hN+FwAABAYSASiQAAAKOS4BAAAHRRsAAAAFAAAADAAA
ABMAAAAaAAAAIAAAACYAAAAuAAAANQAAADsAAABBAAAARwAAAE0AAABUAAAAWwAAAGIAAABpAAAA
dAAAAHoAAACAAAAAhgAAAI0AAACUAAAAmwAAAKIAAACoAAAArwAAALYAAAA4twAAABeMJAAAASoW
jCUAAAEqFowlAAABKnKPJQBwKnKdJQBwKh8ZjCQAAAEqFowlAAABKnKnJQBwKnKnJQBwKnKnJQBw
KnKnJQBwKheMJQAAASoWjCUAAAEqFowlAAABKhaMJQAAASogoAAAAIwkAAABKnKnJQBwKnKnJQBw
KnKnJQBwKheMJQAAASoXjCUAAAEqFowlAAABKhaMJQAAASpyqSUAcCobjCQAAAEqFowlAAABKnLB
JQBwKhQqABswBgDiBgAADwAAEQJyCSYAcCgfAAAGCgYtAxQrBgZvGAAACgtzkQAACgwIcncCAHAX
jCQAAAFvkgAACghy/SQAcBaMJQAAAW+SAAAKCHIxJQBwFowlAAABb5IAAAoIcsEBAHBy3QEAcG+S
AAAKCHIzBQBwck0FAHBvkgAACghy7QgAcB8ZjCQAAAFvkgAACghyJQkAcBaMJQAAAW+SAAAKCHIB
CQBwfhsAAApvkgAACghyEwkAcH4bAAAKb5IAAAoIcs0FAHB+GwAACm+SAAAKCHJdJQBwfhsAAApv
kgAACghykwUAcBeMJQAAAW+SAAAKCHJxBQBwFowlAAABb5IAAAoIciUEAHAWjCUAAAFvkgAACghy
AQQAcBaMJQAAAW+SAAAKCHKxBQBwIKAAAACMJAAAAW+SAAAKCHL5BABwfhsAAApvkgAACghyEwUA
cH4bAAAKb5IAAAoIcpsCAHAXjCUAAAFvkgAACghywQIAcBeMJQAAAW+SAAAKCHLjAgBwFowlAAAB
b5IAAAoIcg8DAHAWjCUAAAFvkgAACghyqwMAcHKpJQBwb5IAAAoIcssDAHAbjCQAAAFvkgAACghy
OQMAcBaMJQAAAW+SAAAKCHJtAwBwcsElAHBvkgAACgcoHQAACjrpBAAAB3LpBABwb4QAAApvkwAA
Cg0JEwkWEwo4wgQAABEJEQqaEwQRBHJXJgBwb4QAAAoYF2+FAAAKEwURBY5pGD9sBAAAEQUWmhMG
EQUXmhMHEQZvlAAACm+JAAAKJRMLOUwEAAD+E34YAAAEOlcBAAAfGnOOAAAKJXJ3AgBwFiiPAAAK
JXL9JABwFyiPAAAKJXIxJQBwGCiPAAAKJXLBAQBwGSiPAAAKJXIzBQBwGiiPAAAKJXLtCABwGyiP
AAAKJXIlCQBwHCiPAAAKJXIBCQBwHSiPAAAKJXITCQBwHiiPAAAKJXLNBQBwHwkojwAACiVyXSUA
cB8KKI8AAAolcpMFAHAfCyiPAAAKJXJxBQBwHwwojwAACiVyJQQAcB8NKI8AAAolcgEEAHAfDiiP
AAAKJXKxBQBwHw8ojwAACiVy+QQAcB8QKI8AAAolchMFAHAfESiPAAAKJXKbAgBwHxIojwAACiVy
wQIAcB8TKI8AAAolcuMCAHAfFCiPAAAKJXIPAwBwHxUojwAACiVyqwMAcB8WKI8AAAolcssDAHAf
FyiPAAAKJXI5AwBwHxgojwAACiVybQMAcB8ZKI8AAAr+E4AYAAAE/hN+GAAABBELEgwokAAACjnU
AgAAEQxFGgAAAAUAAAAhAAAAPQAAAFkAAABrAAAAfQAAAJkAAAC1AAAAxwAAANkAAADrAAAA/QAA
ABkBAAA1AQAAUQEAAG0BAACJAQAAmwEAAK0BAADJAQAA5QEAAP4BAAAXAgAAJgIAAD8CAABYAgAA
OGACAAAIcncCAHARByiVAAAKjCQAAAFvjAAACjhEAgAACHL9JABwEQcolgAACowlAAABb4wAAAo4
KAIAAAhyMSUAcBEHKJYAAAqMJQAAAW+MAAAKOAwCAAAIcsEBAHARB2+MAAAKOPoBAAAIcjMFAHAR
B2+MAAAKOOgBAAAIcu0IAHARByiVAAAKjCQAAAFvjAAACjjMAQAACHIlCQBwEQcolgAACowlAAAB
b4wAAAo4sAEAAAhyAQkAcBEHb4wAAAo4ngEAAAhyEwkAcBEHb4wAAAo4jAEAAAhyzQUAcBEHb4wA
AAo4egEAAAhyXSUAcBEHb4wAAAo4aAEAAAhykwUAcBEHKJYAAAqMJQAAAW+MAAAKOEwBAAAIcnEF
AHARByiWAAAKjCUAAAFvjAAACjgwAQAACHIlBABwEQcolgAACowlAAABb4wAAAo4FAEAAAhyAQQA
cBEHKJYAAAqMJQAAAW+MAAAKOPgAAAAIcrEFAHARByiVAAAKjCQAAAFvjAAACjjcAAAACHL5BABw
EQdvjAAACjjKAAAACHITBQBwEQdvjAAACji4AAAACHKbAgBwEQcolgAACowlAAABb4wAAAo4nAAA
AAhywQIAcBEHKJYAAAqMJQAAAW+MAAAKOIAAAAAIcuMCAHARByiWAAAKjCUAAAFvjAAACitnCHIP
AwBwEQcolgAACowlAAABb4wAAAorTghyqwMAcBEHb4wAAAorPwhyywMAcBEHKJUAAAqMJAAAAW+M
AAAKKyYIcjkDAHARByiWAAAKjCUAAAFvjAAACisNCHJtAwBwEQdvjAAACt4oEwgCKBYAAApvOAAA
ChZyWyYAcBEIb04AAAp+GwAAChZvOgAACibeABEKF1gTChEKEQmOaT8z+///AggoHQAABgJyJwIA
cBaMJAAAASgeAAAGCCoAAEEcAAAAAAAAFwIAAHgEAACPBgAAKAAAAAgAAAETMAYA6gAAABAAABED
Ho0jAAABCgYWH04LEgEolwAACqIGFx9GDBICKJcAAAqiBhgfXw0SAyiXAAAKogYZH0MTBBIEKJcA
AAqiBhofSBMFEgUolwAACqIGGx9FEwYSBiiXAAAKogYcH0MTBxIHKJcAAAqiBh0fSxMIEggolwAA
CqIGKC4AAAoCHI0jAAABEwkRCRZyuSYAcKIRCRcfQxMKEgoolwAACqIRCRgfSBMLEgsolwAACqIR
CRkfRRMMEgwolwAACqIRCRofQxMNEg0olwAACqIRCRsfSxMOEg4olwAACqIRCSguAAAKKB8AAAZv
kgAACioAABswAgBnAAAAEQAAERQKFgsCKBYAAApvmAAACgNvmQAACgIoFgAACm+YAAAKEgBvmgAA
CgYDb5sAAAoEb5wAAAreDAYsCAZvnQAAChcL3N4TJgIoFgAACm+YAAAKb54AAAr+Gt4NBiwJBy0G
Bm+dAAAK3CoAASgAAAIAJwAPNgAMAAAAAAAABABARAATCAAAAQIABABVWQANAAAAABswAgBoAAAA
EgAAERQKFgsCKBYAAApvmAAACgNvnwAACgIoFgAACm+YAAAKEgBvmgAACgYDb5sAAApvoAAACgze
DAYsCAZvnQAAChcL3N4TJgIoFgAACm+YAAAKb54AAAr+Gt4NBiwJBy0GBm+dAAAK3AgqASgAAAIA
JwAPNgAMAAAAAAAABABARAATCAAAAQIABABVWQANAAAAAB4CKKEAAAoqHgIoDgAACipOAgMEBQ4E
DgUoGQAACigjAAAGKtICKA4AAAoCBCglAAAGAgMoJwAABgIOBSgrAAAGAgUoLwAABgIOBCgtAAAG
Ag4GKCkAAAYqHgJ7EQAABCoiAgN9EQAABCoeAnsSAAAEKiICA30SAAAEKh4CexMAAAQqIgIDfRMA
AAQqHgJ7FAAABCoiAgN9FAAABCoeAnsVAAAEKiICA30VAAAEKh4CexYAAAQqIgIDfRYAAAQqALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABkDgAAI34AANAO
AAAIFAAAI1N0cmluZ3MAAAAA2CIAAOQmAAAjVVMAvEkAABAAAAAjR1VJRAAAAMxJAADUBgAAI0Js
b2IAAAAAAAAAAgAAAVcdogkJAwAAAPolMwAWAAABAAAAUgAAAAgAAAAYAAAALwAAAGEAAACiAAAA
CgAAACIAAAASAAAAAwAAAAkAAAAQAAAAAwAAAAEAAAAFAAAAAQAAAAMAAAAAAAoAAQAAAAAABgDV
AM4ACgDxANwADgBRASgBBgBtAc4ABgCDAXIBBgC0AZ8BBgAYA/0CBgAvA84ACgBkA1EDBgCSA4YD
BgDyA84ABgBVBM4ABgC6BKcEBgC3CZ0JBgDiCdAJBgD5CdAJBgAWCtAJBgA1CtAJBgBOCtAJBgBn
CtAJBgCCCtAJBgCdCtAJBgC2CtAJBgDvCs8KBgAPC88KBgAtC1EDBgBKC84ABgBPC84ABgBzC9AJ
CgCfC4kLCgC4C4kLBgDNC88KDgDvCygBDgARDCgBBgBLDM4ABgBuDM4ABgB0DM4ACgCaDIoMCgCm
DIoMCgC7DIoMCgDkDIoMBgAlDc4ACgBZDYoMCgBvDWQNCgCBDWQNDgDjDSgBCgACDooMCgAQDooM
BgBCDjgOEgBaDk8OEgBuDk8OEgCZDk8OEgCuDk8OEgDyDtkOEgAAD08OBgAbD6cEBgBODzgOBgBb
DzgOBgByD84ACgCuD1EDBgAEEDgOBgAVEDgOBgAiEDgOBgBCEDgOBgBLEDgOBgCmEIYDBgC0EDgO
HwDQEAAABgDuEM4ABgBmEc4ABgBxEc4ABgCOEc4ACgCbEYkLCgCqEYkLCgDVEYkLBgAGEs4ABgCR
Ev0CBgDSEs4AFgArEwsTFgBgEwsTFgB3EwsTBgCtE84AAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUA
AQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEACQAhAAIhAACxAAAAEQAM
ACEAAiAQALsAAAAFABEAIQAAAAAATBIAAAUAFwAwABEAkwETABEAwAEXABEACgI5AFGALgJHAFGA
WQJHAFGAhwJHAFGApAJHAAEAzwJqAQYGDgUWAlaAFgUZAlaAHgUZAgYGDgUWAlaAJgUnAlaAMQUn
AlaAPgUnAlaAUQUnAgEAKAYWAgEAQwZHAAEAZQZ4AgEAhQYnAgEAoAZHAAEAugZHABMAnhKdBRMA
vhKdBVAgAAAAAIMY0AEbAAEAWCAAAAAAkwjWAR8AAQCRIAAAAACTCOoBJAABAJggAAAAAJMI9gEp
AAEAoCAAAAAAlggaAj0AAgCzIAAAAACGGNABGwACAKcgAAAAAJEY6Au1AgIAuyAAAAAAhgDKAhsA
AgDkIAAAAACBAOMCGwACAAQtAAAAAIEAHwNtAQIAVC4AAAAAgQA5A3cBAwCoLgAAAACGAHYDfQEE
ACwvAAAAAIYAmwOGAQgAfDAAAAAAhgCqA48BDABkMQAAAACGALkDlgEPALAxAAAAAIYAzQOdARIA
ODIAAAAAgQDlA6YBFwDUMgAAAACBAPsDrgEbAAQ4AAAAAIEAFgSuASwAsEIAAAAAgQAxBM0BPQDL
QgAAAACGAEAE0wE/ANxCAAAAAIYAXgTbAUEAEEQAAAAAgQB0BOEBQgAkRAAAAACBAH8E5wFEAIxE
AAAAAIEAkgSWAUUA+UQAAAAAgQDEBPEBSAAwRQAAAACBAM8E+QFLABxIAAAAAIYA2gQAAk0AKE8A
AAAAhgDtBAUCTQAgUAAAAACBAPMECwJOALxQAAAAAIEAAQURAlAAWFEAAAAAhhjQARsAUQBgUQAA
AACGGNABGwBRAGhRAAAAAIYY0AE6AlEAfFEAAAAAhhjQAUQCVgCxUQAAAACGCGgFUAJcALlRAAAA
AIYIdgVUAlwAwlEAAAAAhgiEBVkCXQDKUQAAAACGCJkFXQJdANNRAAAAAIYIrgViAl4A21EAAAAA
hgjBBWcCXgDkUQAAAACGCNQFbQJfAOxRAAAAAIYI4gVyAl8A9VEAAAAAhgjwBVkCYAD9UQAAAACG
CP0FXQJgAAZSAAAAAIYICgZZAmEADlIAAAAAhggZBl0CYQAAAAEAFAcAAAEAGgcAAAEALQcAAAEA
MAcAAAIAOQcAAAMAQQcAAAQASwcAAAEAUwcAAAIAYAcAAAMAaQcAAAQAcgcAAAEAewcAAAIAiQcA
AAMApAcAAAEAsgcAAAIAwAcAAAMAzAcAAAEAsgcAAAIAwAcAAAMAzAcAAAQA1gcAAAUA4gcAAAEA
8QcAAAIA/QcAAAMABwgAAAQADwgAAAEAGQgAAAIAIggAAAMALggAAAQAOAgAAAUAQQgAAAYATggA
AAcAXAgAAAgA8QcAAAkA/QcAAAoABwgAAAsADwgAAAwAaQgAAA0AdggAAA4AgAgAAA8AiAgAABAA
kwgAABEAqQgAAAEAGQgAAAIAIggAAAMALggAAAQAOAgAAAUAQQgAAAYATggAAAcAXAgAAAgA8QcA
AAkA/QcAAAoABwgAAAsADwgAAAwAaQgAAA0AdggAAA4AgAgAAA8AiAgAABAAkwgAABEAqQgAAAEA
BwgAAAIADwgAAAEAwAgAAAIAxwgAAAEAzAgAAAEAzwgAAAIA0wgAAAEA3AgAAAEA6ggAAAIA+AgA
AAMAAwkAAAEAEQkAAAIAHQkAAAMAIwkAAAEAMwkAAAIAIwkAAAEAIwkAAAEAPwkAAAIATAkAAAEA
PwkAAAEAWgkAAAIAawkAAAMAdQkAAAQAgAkAAAUAiQkAAAEAWgkAAAIAawkAAAMAdQkAAAQAgAkA
AAUAiQkAAAYAkwkAAAEAFAcAAAEAFAcAAAEAFAcAAAEAFAcAAAEAFAcAAAEAFAdxANABXQJ5ANAB
XQKBANABXQKJANABXQKRANABXQKZANABXQKhANABXQKpANABXQKxANABXQK5ANABXQLBANABVALJ
ANABGwDRANABGwAJANABGwDZAGELjgLZAHwLlQIpANABmgLxANABpgIBAdABGwARANABGwAJAdAB
GwAZACMMuQIRASsMVAIJADoMWQJZAEMMvwIZAVIMxAIZAV4MRwAMAGQMUAIZAXwM0QIxAdABGwA5
AdABXQIxAbIM1gIxAdEM3QIZAdgM4wJBAeAMXQIxAfEM6QIxAf4M3QIxAQUN3QIxAQ0N8AIxARwN
XQJRATEN9QIZAT0N+QIZAUQNUAIZAU8NAAMZAT0NBQMZAT0NCwMhAToMWQJZAdABEQNhAdABFwNZ
AZQNHQNZAaQN8AJZAb4N8AIMAMwNGwAxAdINXQJZAd4NJAMRAfcNKwN5AR8OMQNxAS4ONwNZADoM
QAOJAUcORQMMANABGwCRAdABGwCRAWYOXQKRAYIOpAOhAaEOXQKRAbkOqgOhAc0OsAOxAdABuQOh
AQwPwgO5AScPyAPBATUPzgOhAUEPWQLJAdABXQKxAWYP0gMMAOAM2QPZAX4PGwDBAYYP3wNBAI8P
WQIZAT0NRQNBAJsPCAThAdABGwDhAbcP0QLhAcQPEgThAdYPXQLhAeEPGAQZAewPHwSJAfMPLwTp
AQ4Q0QIZAewPNATxAdABOgTxAdABQgT5AS0QXQL5ATMQGwDpATkQUgQBAtABXQIJAloQYgJZAGsQ
vwJZAHUQWQRZAH0QXwQJAokQGwAZAZAQeQQZAU8NzQEZAZgQzQEZAZ8QgwQRAtABGwAZArkQLwQZ
AT0NkAQRAsUQlwQRAsUQngQMACcPpAQUADUPtgQxANsQJABZADoMuwQxAP4QJAAhAToMuwQUAIYP
3wMZAT0NwgQZARMRxAJZACERMQVhACoRUAJhADMRUAJhAD0RUAJhAEkRUAJhAFURUAIxAmsROAVh
AHgRPgUZAZMRQgVJAscRTwVRAugRVgVZAvERXQUMAOgRYgUZAfoRbQUZARkScgUZAR8SfQUZASoS
QgUZAS8SjAUZASoSWQJpADcSkgVBANABXQJpAEMSlwVpAOgRXQUcANABVAIcAOAMrgUcALIStgVp
ANABGwBpAOAMlwUZARkSvwUZAS8SWQJxAtoSxgVxAuIS0QJBAjoMWQIRAT0T9AV5AlMTXQJ5AmoT
+gWBAugRAgaJAoATCQaBAooTGwB5ApETGwB5ApcTXQKJAqMTzgMZANABGwCRAtABGwAOABAASgAO
ABQAgwAOABgAxAAOABwAEwEIACgAHQIIACwAIgIIADQAIgIIADgAKwIIADwAMAIIAEAANQIpAJMA
rAIuAFsAqwYuAEMAjgYuAGMAtAYuAAsAHQYuABMAZQYuABsAjgYuACMAjgYuACsAjgYuADMAZQYu
ADsAlAZDAGsAIgJJAJMArAJhAJsAIgKDAKsAIgIDAZsAIgIhApsAIgJBApsAIgJhApsAIgKBApsA
IgKhApsAIgLBApsAIgKABJsAIgKgBJsAIgLABJsAIgLgBJsAIgIABZsAIgIgBZsAIgJABZsAIgJg
BZsAIgKABZsAIgKgBZsAIgLABZsAIgLgBZsAIgKhAksD4wMNBCYESARnBH4EiQTIBOsESAVoBYIF
ywXgBQ4GFQYCAAEAAwADAAcABAAAAIMBLwAAAAICNAAAACYCQgAAANYGfAIAAOAGgAIAAPEGhAIA
ALEAiQIAAAAHgAIAAAkHgAICAAIAAwABAAQABQACAAMABQACAAUABwACACQACQABACUACQABACcA
CwACACYACwACACgADQABACkADQABACsADwACACoADwABAC0AEQACACwAEQACAC4AEwABAC8AEwDK
Aq4EpgUEgAAAAQAAAKsXNV0AAAAAAAB/AAAABAAAAAAAAAAAAAAAAQDFAAAAAAAEAAAAAAAAAAAA
AAABAM4AAAAAAAwAAAAAAAAAAAAAAAoACQEAAAAABAAAAAAAAAAAAAAAAQBPDgAAAAAMAAAAAAAA
AAAAAAAKAOwSAAAAAAAAAAABAAAAwxMAAAUABAAGAAQABwAEAAAAAAAAPE1vZHVsZT4Ac3RfNjVm
NjFkMzE5ODgxNDQ3YTk2MDQwYTJmM2Y3NzZhYWIuZGxsAFJlc291cmNlcwBzdF82NWY2MWQzMTk4
ODE0NDdhOTYwNDBhMmYzZjc3NmFhYi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4Ac3Rf
NjVmNjFkMzE5ODgxNDQ3YTk2MDQwYTJmM2Y3NzZhYWIAU2NyaXB0UmVzdWx0cwBBbGVydFR5cGUA
QWxlcnRJbmZvAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4A
U3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdl
dF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0
SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABOb3RpZmljYXRpb25GcmFtZXdvcmtBbGVydExp
c3RWYXJpYWJsZU5hbWUATm90aWZpY2F0aW9uRnJhbWV3b3JrQWxlcnRMaXN0QWxsVmFyaWFibGVO
YW1lAE5vdGlmaWNhdGlvbkZyYW1ld29ya0NvdW50ZXIATm90aWZpY2F0aW9uRnJhbWV3b3JrU3Vi
Q29tcG9uZW50TmFtZQBNYWluAF9pc0Vycm9yRW5jb3VudGVyZWQAUGVyZm9ybU5vdGlmaWNhdGlv
bkFjdGlvbgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEAUGFyc2VBbGVydEluZm9z
AEV4Y2VwdGlvbgBVbndpbmRFeGNlcHRpb25NZXNzYWdlcwBTeXN0ZW0uRGlhZ25vc3RpY3MARXZl
bnRMb2dFbnRyeVR5cGUAV3JpdGVUb0V2ZW50TG9nAFN5c3RlbS5UZXh0AEVuY29kaW5nAFNhdmVU
ZXh0VG9GaWxlAERlbGV0ZU9sZEZpbGVzAEdldFN1YlN0cmluZ0JldHdlZW4AUmVwbGFjZVN1YlN0
cmluZ0JldHdlZW4AR2V0UGtnU3RhdHVzAERhdGVUaW1lAEdldFRleHROb3RpZmljYXRpb25NZXNz
YWdlAEdldEhUTUxOb3RpZmljYXRpb25NZXNzYWdlAEdldFNob3J0U3RhdHVzAEZvcm1hdFRpbWVE
aWZmZXJlbmNlAFRpbWVTcGFuAEZvcm1hdFRpbWVTcGFuRnJvbVNlYwBHZXRQcm9wVmFsAEdldExh
c3RBbGVydFNvdXJjZQBHZXRGaWx0ZXJlZEVtYWlsTGlzdABTeXN0ZW0uQ29sbGVjdGlvbnMASGFz
aHRhYmxlAFNldFNldHRpbmcAR2V0U2V0dGluZwBHZXRSdW50aW1lU2V0dGluZ3MAU2V0TkYAV3Jp
dGVWYXJpYWJsZQBSZWFkVmFyaWFibGUAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUARXJyb3JBbGVy
dABXYXJuaW5nQWxlcnQAVGltZVRocmVzaG9sZEFsZXJ0AFJvd0NvdW50VGhyZXNob2xkQWxlcnQA
Z2V0X0FsZXJ0Q29kZQBzZXRfQWxlcnRDb2RlAGdldF9BbGVydERlc2NyaXB0aW9uAHNldF9BbGVy
dERlc2NyaXB0aW9uAGdldF9BbGVydFRpbWVTdGFtcABzZXRfQWxlcnRUaW1lU3RhbXAAZ2V0X0Fs
ZXJ0VHlwZQBzZXRfQWxlcnRUeXBlAGdldF9Tb3VyY2VJZABzZXRfU291cmNlSWQAZ2V0X1NvdXJj
ZU5hbWUAc2V0X1NvdXJjZU5hbWUAPEFsZXJ0Q29kZT5rX19CYWNraW5nRmllbGQAPEFsZXJ0RGVz
Y3JpcHRpb24+a19fQmFja2luZ0ZpZWxkADxBbGVydFRpbWVTdGFtcD5rX19CYWNraW5nRmllbGQA
PEFsZXJ0VHlwZT5rX19CYWNraW5nRmllbGQAPFNvdXJjZUlkPmtfX0JhY2tpbmdGaWVsZAA8U291
cmNlTmFtZT5rX19CYWNraW5nRmllbGQAQWxlcnRDb2RlAEFsZXJ0RGVzY3JpcHRpb24AQWxlcnRU
aW1lU3RhbXAAU291cmNlSWQAU291cmNlTmFtZQB2YWx1ZQBhbGVydEluZm9zQ29udGVudHMAZXgA
bG9nRW50cnkAYXBwTmFtZQBldmVudFR5cGUAbG9nTmFtZQBmaWxlQ29udGVudHMAZmlsZVBhdGgA
aXNBcHBlbmQAZW5jb2RpbmcAZGlyZWN0b3J5UGF0aABmaWxlRXh0ZW5zaW9uU2VhcmNoUGF0dGVy
bgBvbGRlclRoYW5EYXlzAHN0cmluZ1RvUGFyc2UAc3RhcnRTdHJpbmcAZW5kU3RyaW5nAHJlcGxh
Y2V3aXRoAHJlcGxhY2VtYXJrZXJzAGJQa2dSdW5uaW5nAHNTdGVwTmFtZQBpRXJyb3JzAGlXYXJu
aW5ncwBzUGtnTmFtZQBkdFN0YXJ0VGltZQBkdEVuZFRpbWUAc1J1blRpbWUAc01hY2hpbmVOYW1l
AHNFeGVjQWNjdE5hbWUAc0ludGVyYWN0aXZlAGlPdGhlckFsZXJ0cwBhbGVydExpc3QAYkZvclNN
UwBpU01TTGVuZ3RoAGJVc2VDdXN0RW1haWxUZW1wbGF0ZQBzQ3VzdEVtYWlsVGVtcGxhdGVQYXRo
AGRTdGFydABkRW5kAHRzAG9iagBwcm9wbmFtZQBhbGVydEluZm9MaXN0AHNPcmlnaW5hbExpc3QA
c1NlcGVyYXRvcgBzRmlsdGVyUHJlZml4AFNldHRpbmdOYW1lAFZhbHVlAHJ1bnRpbWVTZXR0aW5n
cwBzZXR0aW5nTmFtZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQBhbGVydERlc2NyaXB0aW9u
AGFsZXJ0Q29kZQBzb3VyY2VOYW1lAHNvdXJjZUlkAGFsZXJ0VHlwZQB0aW1lU3RhbXAAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxl
Y3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZl
cnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlw
dE9iamVjdE1vZGVsAGdldF9EdHMAc2V0X1Rhc2tSZXN1bHQAVG9TdHJpbmcAZ2V0X05vdwBTdHJp
bmcAb3BfRXF1YWxpdHkARW1wdHkAZ2V0X0NvdW50AEludDMyAEJvb2xlYW4ASXNOdWxsT3JFbXB0
eQBTeXN0ZW0uTmV0Lk1haWwATWFpbE1lc3NhZ2UATWFpbEFkZHJlc3MAc2V0X0Zyb20ATWFpbEFk
ZHJlc3NDb2xsZWN0aW9uAGdldF9UbwBSZXBsYWNlAEFkZABNYWlsUHJpb3JpdHkAc2V0X1ByaW9y
aXR5AGdldF9DQwBnZXRfQmNjAHNldF9Jc0JvZHlIdG1sAHNldF9Cb2R5AEVudmlyb25tZW50AGdl
dF9OZXdMaW5lAENvbmNhdABnZXRfTGVuZ3RoAFN1YnN0cmluZwBTbXRwQ2xpZW50AFN5c3RlbS5O
ZXQATmV0d29ya0NyZWRlbnRpYWwASUNyZWRlbnRpYWxzQnlIb3N0AHNldF9DcmVkZW50aWFscwBz
ZXRfVXNlRGVmYXVsdENyZWRlbnRpYWxzAHNldF9FbmFibGVTc2wAQ2xlYXIAc2V0X1N1YmplY3QA
U2VuZABFdmVudHNPYmplY3RXcmFwcGVyAGdldF9FdmVudHMAU210cEV4Y2VwdGlvbgBTbXRwU3Rh
dHVzQ29kZQBnZXRfU3RhdHVzQ29kZQBGaXJlRXJyb3IAU3lzdGVtLklPAFBhdGgAQ29tYmluZQBT
eXN0ZW0uWG1sAFhtbERvY3VtZW50AExvYWRYbWwAWG1sRG9jdW1lbnRGcmFnbWVudABDcmVhdGVE
b2N1bWVudEZyYWdtZW50AFhtbE5vZGUAc2V0X0lubmVyWG1sAFhtbEVsZW1lbnQAZ2V0X0RvY3Vt
ZW50RWxlbWVudABBcHBlbmRDaGlsZABTeXN0ZW0uWG1sLlNlcmlhbGl6YXRpb24AWG1sU2VyaWFs
aXplcgBYbWxOb2RlTGlzdABnZXRfQ2hpbGROb2RlcwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9y
AGdldF9DdXJyZW50AGdldF9PdXRlclhtbABTdHJpbmdSZWFkZXIAVGV4dFJlYWRlcgBEZXNlcmlh
bGl6ZQBJRGlzcG9zYWJsZQBEaXNwb3NlAE1vdmVOZXh0AGdldF9NZXNzYWdlAGdldF9Jbm5lckV4
Y2VwdGlvbgBFdmVudExvZwBTb3VyY2VFeGlzdHMAQ3JlYXRlRXZlbnRTb3VyY2UAc2V0X1NvdXJj
ZQBXcml0ZUVudHJ5AEZvcm1hdABHZXREaXJlY3RvcnlOYW1lAERpcmVjdG9yeQBFeGlzdHMAU3Ry
ZWFtV3JpdGVyAFRleHRXcml0ZXIAV3JpdGUAQ2xvc2UAR2V0RmlsZXMARmlsZUluZm8ARmlsZVN5
c3RlbUluZm8AZ2V0X0NyZWF0aW9uVGltZQBnZXRfVG9kYXkAQWRkRGF5cwBvcF9MZXNzVGhhbgBE
ZWxldGUASW5kZXhPZgBSZW1vdmUASW5zZXJ0AFN0cmluZ0J1aWxkZXIARmlsZQBSZWFkQWxsVGV4
dABBcHBlbmRMaW5lAEVudW1lcmF0b3IAZ2V0X0N1cnJlbnRDdWx0dXJlAElGb3JtYXRQcm92aWRl
cgBnZXRfSW52YXJpYW50Q3VsdHVyZQBvcF9JbmVxdWFsaXR5AFN1YnRyYWN0AGdldF9EYXlzAGdl
dF9Ib3VycwBnZXRfTWludXRlcwBnZXRfU2Vjb25kcwBnZXRfTWlsbGlzZWNvbmRzAE1hdGgAUm91
bmQARG91YmxlAGdldF9Ub3RhbE1pbGxpc2Vjb25kcwBDaGFyAFRyaW1FbmQAVHlwZURlc2NyaXB0
b3IAUHJvcGVydHlEZXNjcmlwdG9yQ29sbGVjdGlvbgBHZXRQcm9wZXJ0aWVzAFByb3BlcnR5RGVz
Y3JpcHRvcgBnZXRfSXRlbQBHZXRWYWx1ZQBUb0NoYXJBcnJheQBTdHJpbmdTcGxpdE9wdGlvbnMA
U3BsaXQAU3RhcnRzV2l0aABUcmltAFRvVXBwZXIAQ29udGFpbnNLZXkAc2V0X0l0ZW0APFByaXZh
dGVJbXBsZW1lbnRhdGlvbkRldGFpbHM+e0Q4QkVGQ0FCLTVGQjUtNEM4My1BRkFGLUE0REYzNjIy
RUQzMH0ARGljdGlvbmFyeWAyACQkbWV0aG9kMHg2MDAwMDFhLTEAVHJ5R2V0VmFsdWUAJCRtZXRo
b2QweDYwMDAwMWItMQBDb252ZXJ0AFRvSW50MzIAVG9Cb29sZWFuAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlRGlz
cGVuc2VyAGdldF9WYXJpYWJsZURpc3BlbnNlcgBMb2NrRm9yV3JpdGUAVmFyaWFibGVzAEdldFZh
cmlhYmxlcwBWYXJpYWJsZQBzZXRfVmFsdWUAVW5sb2NrAFJlc2V0AExvY2tGb3JSZWFkAGdldF9W
YWx1ZQBTZXJpYWxpemFibGVBdHRyaWJ1dGUAc3RfNjVmNjFkMzE5ODgxNDQ3YTk2MDQwYTJmM2Y3
NzZhYWIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAHFzAHQAXwA2ADUAZgA2ADEA
ZAAzADEAOQA4ADgAMQA0ADQANwBhADkANgAwADQAMABhADIAZgAzAGYANwA3ADYAYQBhAGIALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACdTAHkAcwB0AGUAbQA6ADoA
UABhAGMAawBhAGcAZQBOAGEAbQBlAAAjUwB5AHMAdABlAG0AOgA6AFMAdABhAHIAdABUAGkAbQBl
AAAhUwB5AHMAdABlAG0AOgA6AFUAcwBlAHIATgBhAG0AZQAAJ1MAeQBzAHQAZQBtADoAOgBNAGEA
YwBoAGkAbgBlAE4AYQBtAGUAAC9TAHkAcwB0AGUAbQA6ADoASQBuAHQAZQByAGEAYwB0AGkAdgBl
AE0AbwBkAGUAACFTAHkAcwB0AGUAbQA6ADoAUwBvAHUAcgBjAGUASQBEAAAjUwB5AHMAdABlAG0A
OgA6AFAAYQBjAGsAYQBnAGUASQBEAABBVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBO
AEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABsAAAbUABSAEkATwBSAEkAVABZAF8ATQBPAEQA
RQAAD0QARQBMAEEAWQBFAEQAADlVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBf
AEEAbABlAHIAdABMAGkAcwB0AABPVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYA
XwBOAG8AdABpAGYAaQBjAGEAdABpAG8AbgBfAEMAbwB1AG4AdABlAHIAACNNAEEAWABfAE4ATwBU
AEkARgBJAEMAQQBUAEkATwBOAFMAACVOAE8AVABJAEYAWQBfAFUAUwBJAE4ARwBfAEUATQBBAEkA
TAAAIU4ATwBUAEkARgBZAF8AVQBTAEkATgBHAF8AUwBNAFMAACtOAE8AVABJAEYAWQBfAFUAUwBJ
AE4ARwBfAEUAVgBFAE4AVABMAE8ARwAAKU4ATwBUAEkARgBZAF8AVQBTAEkATgBHAF8ATABPAEcA
RgBJAEwARQAAM1UAUwBFAF8AQwBVAFMAVABPAE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQAEwAQQBU
AEUAAD1DAFUAUwBUAE8ATQBfAEUATQBBAEkATABfAFQARQBNAFAATABBAFQARQBfAEYASQBMAEUA
UABBAFQASAAAH0wATwBHAF8ARgBPAEwARABFAFIAXwBQAEEAVABIAAA1RABFAEwARQBUAEUAXwBM
AE8ARwBfAE8ATABEAEUAUgBfAFQASABBAE4AXwBEAEEAWQBTAAAjTgBPAFQASQBGAFkAXwBPAE4A
QwBPAE0AUABMAEUAVABFAAAhTgBPAFQASQBGAFkAXwBPAE4AUwBVAEMAQwBFAFMAUwAAL1UAcwBl
AHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMATgBGAF8ARgByAG8AbQAARU4AbwB0AGkAZgBpAGMA
YQB0AGkAbwBuAEYAcgBhAG0AZQB3AG8AcgBrAEAAQgBJAHgAUAByAGUAcwBzAC4AYwBvAG0AACtV
AHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAFQAbwAAAzsAAAd7AEQAfQAAAywA
ABlDAEMAXwBFAE0AQQBJAEwATABJAFMAVAAAG0IAQwBDAF8ARQBNAEEASQBMAEwASQBTAFQAAAN8
AAAZRQBNAEEASQBMAF8ARgBPAFIATQBBAFQAAAlIAFQATQBMAAAZTgBGAF8ATABPAEcAXwAqAC4A
dAB4AHQAACFOAE8AVABJAEYAWQBfAE8ATgBXAEEAUgBOAEkATgBHAAAdTgBPAFQASQBGAFkAXwBP
AE4ARQBSAFIATwBSAAAbUwBNAFMAXwBNAEEAWABMAEUATgBHAFQASAAAG1MATQBTAF8ARQBNAEEA
SQBMAEwASQBTAFQAABs8AFMAUwBJAFMAIABFAHIAcgBvAHIAcwA+AAAZPABTAFMASQBTACAARQBy
AHIAbwByAD4AAB88AFMAUwBJAFMAIABXAGEAcgBuAGkAbgBnAHMAPgAAHTwAUwBTAEkAUwAgAFcA
YQByAG4AaQBuAGcAPgAAHzwAUwBTAEkAUwAgAE0AZQBzAHMAYQBnAGUAcwA+AAAdPABTAFMASQBT
ACAATQBlAHMAcwBhAGcAZQA+AAAdPABTAFMASQBTACAAUwB1AGMAYwBlAHMAcwA+AAAhRQBSAFIA
TwBSACAAOgAgAFAAYQBjAGsAYQBnAGUAIAAALyAAaABhAHMAIABlAHIAcgBvAHIAKABzACkAIABh
AHQAIAB0AGEAcwBrACAAWwAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQByAGMAZQBOAGEAbQBlAAAD
XQAAJVcAQQBSAE4ASQBOAEcAIAA6ACAAUABhAGMAawBhAGcAZQAgAAAzIABoAGEAcwAgAHcAYQBy
AG4AaQBuAGcAKABzACkAIABhAHQAIAB0AGEAcwBrACAAWwAAIUEATABFAFIAVAAgADoAIABQAGEA
YwBrAGEAZwBlACAAADcgAGcAZQBuAGUAcgBhAHQAZQBkACAAcgB1AG4AdABpAG0AZQAgAGEAbABl
AHIAdAAoAHMAKQAAIyAAYwBvAG0AcABsAGUAdABlAGQAIAB3AGkAdABoACAAWwAAFV0AIABlAHIA
cgBvAHIAKABzACkAABldACAAdwBhAHIAbgBpAG4AZwAoAHMAKQAAFV0AIABhAGwAZQByAHQAKABz
ACkAACVTAFUAQwBDAEUAUwBTACAAOgAgAFAAYQBjAGsAYQBnAGUAIAAALyAAYwBvAG0AcABsAGUA
dABlAGQAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAAQ1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJ
AFMATwBwAHMATgBGAF8AUwBNAFQAUABTAGUAcgB2AGUAcgBOAGEAbQBlAAATUwBNAFQAUABfAFAA
TwBSAFQAABFTAE0AVABQAF8AVQBJAEQAABFTAE0AVABQAF8AUABXAEQAABdTAE0AVABQAF8AVQBT
AEUAUwBTAEwAAFdCAEkAIAB4AFAAcgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAA
RgByAGEAbQBlAHcAbwByAGsAIABTAGUAbgBkACAAQQBsAGUAcgB0AABRaAB0AHQAcAA6AC8ALwBo
AGUAbABwAC4AcAByAGEAZwBtAGEAdABpAGMAdwBvAHIAawBzAC4AYwBvAG0ALwBCAEkAeABQAHIA
ZQBzAHMALwAAE0IASQAgAHgAUAByAGUAcwBzAAAXQQBwAHAAbABpAGMAYQB0AGkAbwBuAAADPAAA
Az4AAAM6AAADLwAAA1wAAAMqAAADPwAAD04ARgBfAEwATwBHAF8AACN5AHkAeQB5AC0ATQBNAC0A
ZABkACAAaABoAG0AbQBzAHMAAQ9fAEUAUgBSAE8AUgBfAAAJLgB0AHgAdAAAE18AVwBBAFIATgBJ
AE4ARwBfAAANXwBJAE4ARgBPAF8AAG08AD8AeABtAGwAIAB2AGUAcgBzAGkAbwBuAD0AIgAxAC4A
MAAiACAAZQBuAGMAbwBkAGkAbgBnAD0AIgBVAFQARgAtADEANgAiACAAPwA+ADwAQQBsAGUAcgB0
AEkAbgBmAG8AcwAgAC8APgABgPVUAGgAZQByAGUAIAB3AGEAcwAgAGEAbgAgAGUAcgByAG8AcgAg
AHcAaABpAGwAZQAgAGEAdAB0AGUAbQBwAHQAaQBuAGcAIAB0AG8AIABwAGEAcgBzAGUAIAB0AGgA
ZQAgAGEAYwBjAHUAbQB1AGwAYQB0AGUAZAAgAGEAbABlAHIAdABzACAAZgBvAHIAIABCAEkAIAB4
AFAAcgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAARgByAGEAbQBlAHcAbwByAGsA
LgAgACAARQByAHIAbwByACAAbQBlAHMAcwBhAGcAZQA6ACAAAE9oAHQAdABwADoALwAvAGgAZQBs
AHAALgBwAHIAYQBnAG0AYQB0AGkAYwB3AG8AcgBrAHMALgBjAG8AbQAvAEIASQB4AFAAcgBlAHMA
cwAABSAAIAAAgIVBAG4AIABlAHIAcgBvAHIAIABvAGMAYwB1AHIAcgBlAGQAIAB3AGgAaQBsAGUA
IABjAHIAZQBhAHQAaQBuAGcAIAB0AGgAZQAgAFcAaQBuAGQAbwB3AHMAIABFAHYAZQBuAHQAIABM
AG8AZwAgACIAewAwAH0AIgA6ACAAewAxAH0ALgAAb1QAaABlACAAbABvAGcAIABmAGkAbABlACAA
cABhAHQAaAAgAGkAcwAgAGkAbgB2AGEAbABpAGQALgAgACAAVQBuAGEAYgBsAGUAIAB0AG8AIABz
AGEAdgBlACAAbABvAGcAIABmAGkAbABlAC4AAICDVABoAGUAIABsAG8AZwAgAGYAaQBsAGUAIABk
AGkAcgBlAGMAdABvAHIAeQAgAHAAYQB0AGgAIABpAHMAIABpAG4AdgBhAGwAaQBkAC4AIAAgAFUA
bgBhAGIAbABlACAAdABvACAAcwBhAHYAZQAgAGwAbwBnACAAZgBpAGwAZQAuAACA61QAaABlACAA
bABvAGcAIABmAGkAbABlACAAZABpAHIAZQBjAHQAbwByAHkAIAAiAHsAMAB9ACIAIABkAG8AZQBz
ACAAbgBvAHQAIABlAHgAaQBzAHQALgAgACAAVQBuAGEAYgBsAGUAIAB0AG8AIABzAGEAdgBlACAA
bABvAGcAIABmAGkAbABlACAAYgBlAGMAYQB1AHMAZQAgAHQAaABlACAAcwBwAGUAYwBpAGYAaQBl
AGQAIABkAGkAcgBlAGMAdABvAHIAeQAgAGQAbwBlAHMAIABuAG8AdAAgAGUAeABpAHMAdAAuAABx
QQBuACAAZQByAHIAbwByACAAbwBjAGMAdQByAHIAZQBkACAAdwBoAGkAbABlACAAYwByAGUAYQB0
AGkAbgBnACAAdABoAGUAIABsAG8AZwAgAGYAaQBsAGUAIAAiAHsAMAB9ACIAOgAgAHsAMQB9AACA
01QAaABlACAAZABpAHIAZQBjAHQAbwByAHkAIAAiAHsAMAB9ACIAIABkAG8AZQBzACAAbgBvAHQA
IABlAHgAaQBzAHQALgAgACAAVQBuAGEAYgBsAGUAIAB0AG8AIABkAGUAbABlAHQAZQAgAG8AbABk
ACAAbABvAGcAIABmAGkAbABlAHMAIABiAGUAYwBhAHUAcwBlACAAdABoAGUAIABkAGkAcgBlAGMA
dABvAHIAeQAgAGQAbwBlAHMAIABuAG8AdAAgAGUAeABpAHMAdAAuAACAmUEAbgAgAGUAcgByAG8A
cgAgAG8AYwBjAHUAcgByAGUAZAAgAHcAaABpAGwAZQAgAGQAZQBsAGUAdABpAG4AZwAgAG8AbABk
ACAAbABvAGcAIABmAGkAbABlAHMAIABmAHIAbwBtACAAdABoAGUAIAAiAHsAMAB9ACIAIABkAGkA
cgBlAGMAdABvAHIAeQA6ACAAewAxAH0AABMgAEAAIABTAFQARQBQACAAWwAAJ0MATwBNAFAATABF
AFQARQBEACAAVwAvACAARQBSAFIATwBSAFMAAAlIAEEAUwAgAAAPIABFAFIAUgBPAFIAUwAAE0MA
TwBNAFAATABFAFQARQBEAAAZIABXAC8AIABXAEEAUgBOAEkATgBHAFMAABMgAFcAQQBSAE4ASQBO
AEcAUwAANTwAIQAtAC0AewB7AEEAbABlAHIAdABCAGwAbwBjAGsAUwB0AGEAcgB0AH0AfQAtAC0A
PgABMTwAIQAtAC0AewB7AEEAbABlAHIAdABCAGwAbwBjAGsARQBuAGQAfQB9AC0ALQA+AAEpKgAq
ACoAKgAqACoAKgAqACoAKgAqACoAIABUAG8AdABhAGwAIABbAAAtXQAgAEEAbABlAHIAdABzACAA
KgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAACTwAPAAgAFsAABldACAAQQBsAGUAcgB0AHMAIAA+
AD4AIAAAC0UAUgBSAE8AUgAAD1cAQQBSAE4ASQBOAEcAAClUAEkATQBFACAAVABIAFIARQBTAEgA
TwBMAEQAIABBAEwARQBSAFQAAAtBAEwARQBSAFQAAAkgAD4APgAgAAAHIAA6ACAAACd7AHsAQQBs
AGUAcgB0AFMAbwB1AHIAYwBlAE4AYQBtAGUAfQB9AAAbewB7AEEAbABlAHIAdABUAGkAbQBlAH0A
fQAAG3sAewBBAGwAZQByAHQAVAB5AHAAZQB9AH0AACF7AHsAQQBsAGUAcgB0AE0AZQBzAHMAYQBn
AGUAfQB9AAAbewB7AEEAbABlAHIAdABDAG8AZABlAH0AfQAAA1sAAB1NAE0ALwBkAGQAIABIAEgA
OgBtAG0AOgBzAHMAAAVdACAAAAsgAD0AIAA+ACAAAAldACAAOgAgAAAfewB7AFAAYQBjAGsAYQBn
AGUATgBhAG0AZQB9AH0AAB17AHsAUwB0AGEAdAB1AHMATABvAG4AZwB9AH0AAB97AHsAUwB0AGEA
dAB1AHMAUwBoAG8AcgB0AH0AfQAAJ3sAewBUAG8AdABhAGwAQQBsAGUAcgB0AEMAbwB1AG4AdAB9
AH0AAB17AHsARQByAHIAbwByAEMAbwB1AG4AdAB9AH0AACF7AHsAVwBhAHIAbgBpAG4AZwBDAG8A
dQBuAHQAfQB9AAAXewB7AFIAdQBuAFQAaQBtAGUAfQB9AAAfewB7AE0AYQBjAGgAaQBuAGUATgBh
AG0AZQB9AH0AACl7AHsARQB4AGUAYwB1AHQAaQBvAG4AQQBjAGMAbwB1AG4AdAB9AH0AACV7AHsA
VwBhAHMASQBuAHQAZQByAGEAYwB0AGkAdgBlAH0AfQAAKXsAewBQAGEAYwBrAGEAZwBlAFMAdABh
AHIAdABUAGkAbQBlAH0AfQAAKXsAewBGAHIAYQBtAGUAdwBvAHIAawBWAGUAcgBzAGkAbwBuAH0A
fQAAEzUALgA3AC4AMAAuADkAMgA5AAAlewB7AFAAYQBjAGsAYQBnAGUARQBuAGQAVABpAG0AZQB9
AH0AABNQAGEAYwBrAGEAZwBlADoAIAAAEVMAdABhAHQAdQBzADoAIAAAGVMAdABhAHIAdAAgAFQA
aQBtAGUAOgAgAAAVRQBuAGQAIABUAGkAbQBlADoAIAAAFVIAdQBuACAAVABpAG0AZQA6ACAAADNF
AG4AZAAgAFQAaQBtAGUAOgAgADwAUwB0AGkAbABsACAAUgB1AG4AbgBpAG4AZwA+AAAdVABvAHQA
YQBsACAARQByAHIAbwByAHMAOgAgAAAhVABvAHQAYQBsACAAVwBhAHIAbgBpAG4AZwBzADoAIAAA
HU0AYQBjAGgAaQBuAGUAIABOAGEAbQBlADoAIAAAJVcAYQBzACAASQBuAHQAZQByAGEAYwB0AGkA
dgBlAD8AOgAgAAAnRQB4AGUAYwB1AHQAaQBvAG4AIABBAGMAYwBvAHUAbgB0ADoAIAAANTwAIQAt
AC0AewB7AEUAcgByAG8AcgBCAGwAbwBjAGsAUwB0AGEAcgB0AH0AfQAtAC0APgABMTwAIQAtAC0A
ewB7AEUAcgByAG8AcgBCAGwAbwBjAGsARQBuAGQAfQB9AC0ALQA+AAE5PAAhAC0ALQB7AHsAVwBh
AHIAbgBpAG4AZwBCAGwAbwBjAGsAUwB0AGEAcgB0AH0AfQAtAC0APgABNTwAIQAtAC0AewB7AFcA
YQByAG4AaQBuAGcAQgBsAG8AYwBrAEUAbgBkAH0AfQAtAC0APgABNzwAIQAtAC0AewB7AEEAbABl
AHIAdABTAG8AdQByAGMAZQBTAHQAYQByAHQAfQB9AC0ALQA+AAEzPAAhAC0ALQB7AHsAQQBsAGUA
cgB0AFMAbwB1AHIAYwBlAEUAbgBkAH0AfQAtAC0APgABMTwAIQAtAC0AewB7AEEAbABlAHIAdABS
AG8AdwBTAHQAYQByAHQAfQB9AC0ALQA+AAEtPAAhAC0ALQB7AHsAQQBsAGUAcgB0AFIAbwB3AEUA
bgBkAH0AfQAtAC0APgABDUYARgBEADUARAA1AAA/PAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9
ACIAMQAwADAAJQAiACAAYgBnAGMAbwBsAG8AcgA9ACIAIwAAJSIAPgA8AGIAPgBTAG8AdQByAGMA
ZQAgADoAPAAvAGIAPgAgAAAVPAAvAHQAZAA+ADwALwB0AHIAPgAAC0UAcgByAG8AcgAAMTwAdABy
AD4APAB0AGQAIAB3AGkAZAB0AGgAPQAiADEAMAAwACUAIgA+ADwAYgA+AAARIAA6ACAAPAAvAGIA
PgBbAACAzzwAdABhAGIAbABlACAAYgBvAHIAZABlAHIAPQAiADEAIgAgAHcAaQBkAHQAaAA9ACIA
MQAwADAAJQAiACAAcwB0AHkAbABlAD0AIgBiAG8AcgBkAGUAcgAtAGMAbwBsAGwAYQBwAHMAZQA6
ACAAYwBvAGwAbABhAHAAcwBlADsAZgBvAG4AdAAtAGYAYQBtAGkAbAB5ADoAIAB2AGUAcgBkAGEA
bgBhADsAIABmAG8AbgB0AC0AcwBpAHoAZQA6ACAAMQAwAHAAdAAiAD4AAYDJPAB0AHIAPgA8AHQA
ZAAgAHcAaQBkAHQAaAA9ACIAMQAwADAAJQAiACAAYgBnAGMAbwBsAG8AcgA9ACIAIwBGAEYAMAAw
ADAAMAAiAD4APABmAG8AbgB0ACAAYwBvAGwAbwByAD0AIgAjAEYARgBGAEYARgBGACIAIABTAGkA
egBlAD0AIgA0ACIAPgA8AGIAPgBFAFIAUgBPAFIAUwA8AC8AYgA+ADwALwBmAG8AbgB0AD4APAAv
AHQAZAA+ADwALwB0AHIAPgAAGTwALwB0AGEAYgBsAGUAPgA8AEIAUgA+AAANRgBGAEYARgA4ADAA
AA9XAGEAcgBuAGkAbgBnAACAzTwAdAByAD4APAB0AGQAIAB3AGkAZAB0AGgAPQAiADEAMAAwACUA
IgAgAGIAZwBjAG8AbABvAHIAPQAiACMARgBEADYAMAAxADMAIgA+ADwAZgBvAG4AdAAgAGMAbwBs
AG8AcgA9ACIAIwBGAEYARgBGAEYARgAiACAAUwBpAHoAZQA9ACIANAAiAD4APABiAD4AVwBBAFIA
TgBJAE4ARwBTADwALwBiAD4APAAvAGYAbwBuAHQAPgA8AC8AdABkAD4APAAvAHQAcgA+AACBizwA
YgByAD4APABiAHIAPgA8AGYAbwBuAHQAIABmAGEAYwBlAD0AIgBUAGEAaABvAG0AYQAiACAAcwBp
AHoAZQA9ACIAMQAiAD4AVABoAGkAcwAgAHIAZQBwAG8AcgB0ACAAdwBhAHMAIABnAGUAbgBlAHIA
YQB0AGUAZAAgAGIAeQAgADwAYQAgAGgAcgBlAGYAPQAiAGgAdAB0AHAAOgAvAC8AdwB3AHcALgBw
AHIAYQBnAG0AYQB0AGkAYwB3AG8AcgBrAHMALgBjAG8AbQAvAHAAYQBnAGUAcwAvAD8AcwByAGMA
PQBiAGkAeABwAHIAZQBzAHMAJgB0AGEAZwA9AE4ARgBFAG0AYQBpAGwAJgB1AHIAbAA9AC8AIgA+
AEIASQAgAHgAUAByAGUAcwBzACAATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AIABGAHIAYQBtAGUA
dwBvAHIAawA8AC8AYQA+ACAANQAuADcALgAwAC4AOQAyADkAPAAvAGYAbwBuAHQAPgAADTAAMABG
AEYAMAAwAAANRgBEADYAMAAxADMAAA1GAEYAMAAwADAAMAAAOzwAdAByAD4APAB0AGQAPgA8AHAA
PgA8AGIAPgA8AGYAbwBuAHQAIABzAGkAegBlAD0AIgA0ACIAPgAAHyAAPABmAG8AbgB0ACAAYwBv
AGwAbwByAD0AIgAjAAAFIgA+AAA5PAAvAGYAbwBuAHQAPgA8AC8AZgBvAG4AdAA+ADwALwBiAD4A
PAAvAHQAZAA+ADwALwB0AHIAPgAAgN08AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADAA
MAAlACIAIABiAGcAYwBvAGwAbwByAD0AIgAjADAAQgA2AEIARQAxACIAPgA8AGYAbwBuAHQAIABj
AG8AbABvAHIAPQAiACMARgBGAEYARgBGAEYAIgA+ADwAYgA+AFAAYQBjAGsAYQBnAGUAIABFAHgA
ZQBjAHUAdABpAG8AbgAgAFMAdQBtAG0AYQByAHkAPAAvAGIAPgA8AC8AZgBvAG4AdAA+ADwALwB0
AGQAPgA8AC8AdAByAD4AACs8AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADAAMAAlACIA
PgAAgKs8AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBnAGMAbwBsAG8A
cgA9ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4ARQB4AGUAYwB1AHQAaQBvAG4AIABTAHQAYQB0
AHUAcwA8AC8AYgA+ADwALwB0AGQAPgA8AHQAZAA+ACAAPABmAG8AbgB0ACAAYwBvAGwAbwByAD0A
IgAjAAAjPAAvAGYAbwBuAHQAPgA8AC8AdABkAD4APAAvAHQAcgA+AACAgTwAdAByAD4APAB0AGQA
IAB3AGkAZAB0AGgAPQAiADEAOAA5ACIAIABiAGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAy
ACIAPgA8AGIAPgBTAHQAYQByAHQAIABUAGkAbQBlADwALwBiAD4APAAvAHQAZAA+ADwAdABkAD4A
AH08AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBnAGMAbwBsAG8AcgA9
ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4ARQBuAGQAIABUAGkAbQBlADwALwBiAD4APAAvAHQA
ZAA+ADwAdABkAD4AAH08AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBn
AGMAbwBsAG8AcgA9ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4AUgB1AG4AIABUAGkAbQBlADwA
LwBiAD4APAAvAHQAZAA+ADwAdABkAD4AAICFPAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIA
MQA4ADkAIgAgAGIAZwBjAG8AbABvAHIAPQAiACMARgAyAEYAMgBGADIAIgA+ADwAYgA+AFQAbwB0
AGEAbAAgAEUAcgByAG8AcgBzADwALwBiAD4APAAvAHQAZAA+ADwAdABkAD4AAICJPAB0AHIAPgA8
AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQA4ADkAIgAgAGIAZwBjAG8AbABvAHIAPQAiACMARgAyAEYA
MgBGADIAIgA+ADwAYgA+AFQAbwB0AGEAbAAgAFcAYQByAG4AaQBuAGcAcwA8AC8AYgA+ADwALwB0
AGQAPgA8AHQAZAA+AACAhTwAdAByAD4APAB0AGQAIAB3AGkAZAB0AGgAPQAiADEAOAA5ACIAIABi
AGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAyACIAPgA8AGIAPgBNAGEAYwBoAGkAbgBlACAA
TgBhAG0AZQA8AC8AYgA+ADwALwB0AGQAPgA8AHQAZAA+AACAjzwAdAByAD4APAB0AGQAIAB3AGkA
ZAB0AGgAPQAiADEAOAA5ACIAIABiAGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAyACIAPgA8
AGIAPgBFAHgAZQBjAHUAdABpAG8AbgAgAEEAYwBjAG8AdQBuAHQAPAAvAGIAPgA8AC8AdABkAD4A
PAB0AGQAPgAAgI08AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBnAGMA
bwBsAG8AcgA9ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4AVwBhAHMAIABJAG4AdABlAHIAYQBj
AHQAaQB2AGUAPwA8AC8AYgA+ADwALwB0AGQAPgA8AHQAZAA+AAARPAAvAHQAYQBiAGwAZQA+AAAt
PAAvAHQAZAA+ADwALwB0AHIAPgA8AC8AdABhAGIAbABlAD4APABCAFIAPgAAD1MAVQBDAEMARQBT
AFMAAAsgAGQAYQB5ACwAAAkgAGgAcgAsAAALIABtAGkAbgAsAAAJIABzAGUAYwAAD1sAMAAgAHMA
ZQBjAF0AAF8gAHMAZQB0AHQAaQBuAGcAIABkAG8AZQBzAG4AJwB0ACAAZQB4AGkAcwB0ACAAaQBu
ACAAcgB1AG4AdABpAG0AZQAgAHMAZQB0AHQAaQBuAGcAIABsAGkAcwB0AC4AATNFAE4AQQBCAEwA
RQBfAFIATwBXAEMATwBVAE4AVABfAFQASABSAEUAUwBIAE8ATABEAAArRQBOAEEAQgBMAEUAXwBU
AEkATQBFAF8AVABIAFIARQBTAEgATwBMAEQAAB9GAEkATABUAEUAUgBFAEQAXwBBAEwARQBSAFQA
UwAAEU4ARgBfAEMASABFAEMASwAADVUAUgBHAEUATgBUAAAJVABFAFgAVAAAAQAXQwA6AFwAUwBT
AEkAUwBcAEwAbwBnAABHQwA6AFwAUwBTAEkAUwBcAEMAbwBuAGYAaQBnAFwATgBGAF8ARQBtAGEA
aQBsAFQAZQBtAHAAbABhAHQAZQAuAGgAdABtAABNVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBP
AHAAcwBOAEYAXwBPAHQAaABlAHIAQwBvAG4AZgBpAGcAUwBlAHQAdABpAG4AZwBzAAADPQAAXUIA
SQAgAHgAUAByAGUAcwBzACAATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AIABGAHIAYQBtAGUAdwBv
AHIAawAgAEUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIAACdVAHMAZQByADoAOgB2AGEAcgBTAFMA
SQBTAE8AcABzAE4ARgBfAAAAAACr/L7YtV+DTK+vpN82Iu0wAAi3elxWGTTgiQiJhF3NgIDMkQMG
EhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBg44VQBz
AGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABAVQBz
AGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEA
bABsAE5VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMA
YQB0AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgBWQgBJACAAeABQAHIAZQBzAHMAIABOAG8AdABpAGYA
aQBjAGEAdABpAG8AbgAgAEYAcgBhAG0AZQB3AG8AcgBrACAAUwBlAG4AZAAgAEEAbABlAHIAdAAC
BgIJIAEVEh0BEhwOBSABDhIhCCAEAg4OESUOCCAEAg4OAhIpBiADCA4OCAYgAw4ODg4IIAUODg4O
DgIHIAQOAg4ICB4gEQ4OES0RLQ4ODg4CDhAIEAgQCBUSHQESHAIIAg4FIAIOCAgHIAIOES0RLQUg
AQ4RMQUgAhwcDgkgAQ4VEh0BEhwHIAMBDhwSNQYgAhwOEjUEIAASNQUgAQESNQUgAgEOHAQgARwO
AgYIAwYRFAQAAAAABAEAAAADBhEYBAIAAAAEAwAAAAQEAAAACSAFAQ4IDg4RGAsgBgEOCA4OERgR
LQMgAAgEIAEBCAMgAA4EIAEBDgQgABEtBSABAREtBCAAERgFIAEBERgDBhEtAygACAMoAA4EKAAR
LQQoABEYBgABEm0RcQQgABJ1BiACAQ4SdQQHARIVBSABARF9CAEAAgAAAAAAAwAAAQUgABKAiQQA
ABEtBQACAg4OBhUSHQESHAQAAQIOBiABARKAnQUgABKAoQUgAg4ODgYgAQERgKUEIAEBAgMAAA4G
AAMODg4OBCABDggFAAEOHRwFAAEOHQ4FIAIBDggFIAIBDg4GIAEBEoC1BiABARKAmQUgABKAuQUg
ABGAwQggBQIIDg4OCAQgAQ4OBQACDg4OWAc5Ag4RLREtDg4ODhI1DgIVEh0BEhwODg4ICAgICAIC
AgICDg4IAhwODhKAmQ4OCA4SgJkOEoCtEoC9DhKAvQ4ODh0cHQ4dDh0OHQ4dDhEtHQ4RLR0OES0F
IAASgM0FIAASgNUIIAESgNESgNEIIAIBEm0dEm0FIAASgN0FIAASgOEDIAAcBiABHBKA6QUgAQET
AAMgAAIkBwsVEh0BEhwSgMkSgM0SgNkSgNUSgOUSHBIhHRJtEoDhEoDtBCAAEiEEBwIODgUAAgEO
DgYgAgEOESUGAAMODhwcCAcDEoDxEiECBAABDg4FAAIODhwHIAMBDgISKQUgAgEOAgkHBA4SgPkS
IQIGAAIdDg4OBSABES0NBwACAhEtES0RBwkIHQ4OEoEBEiEIHQ4IES0EIAEIDgQHAggIBSACDggO
BgcECAgODgYAAw4cHBwGIAESgQkOBSAAEoEJCSAAFRGBEQETAAcVEYERARIcBCAAEwAGIAEOEoEV
BQACDhwcIgcREoEJEoEJDg4ODg4SHA4VEYERARIcHQ4RLQgdDhEtCAhFBycSgQkSgQkODg4ODg4O
Dg4ODg4ODhIcDhIcDhURgREBEhwOHQ4RLQgdHBEtFRGBEQESHA4dDhEtCA4dDhEtCAgdDh0OBiAB
ETERLQUAAg0NCAMgAA0FIAEOHQMGBwMODh0DBgABEoEpHAYgARKBLQ4EIAEcHAUgARMACAQHAg4I
BCAAHQMKIAMdDh0DCBGBMQQgAQIOCQcFHQ4ODh0OCAUgAQ4SGQQgAQIcBSACARwcCAYVEoE1Ag4I
BxUSgTUCDggHIAIBEwATAQggAgITABATAQYgAR0OHQMEAAEIDhQHDRwOEjUdDg4dDg4OEiEdDggO
CBMHDx0OAwMDAwMDAwMdDgMDAwMDBSAAEoE9ByABARASgUEGIAESgUUcBCABARwGBwISgUECBwcD
EoFBAhxHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjc3RfNjVmNjFkMzE5ODgxNDQ3YTk2MDQwYTJmM2Y3NzZh
YWIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQCYowAAAAAAAAAAAACuowAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
oKMAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYwAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABADVdqxcAAAEANV2rFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABzAHQA
XwA2ADUAZgA2ADEAZAAzADEAOQA4ADgAMQA0ADQANwBhADkANgAwADQAMABhADIAZgAzAGYANwA3
ADYAYQBhAGIAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADUA
OQAuADIAMwA4ADYAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwA2
ADUAZgA2ADEAZAAzADEAOQA4ADgAMQA0ADQANwBhADkANgAwADQAMABhADIAZgAzAGYANwA3ADYA
YQBhAGIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABzAHQAXwA2ADUAZgA2ADEAZAAzADEAOQA4ADgAMQA0ADQANwBhADkANgAw
ADQAMABhADIAZgAzAGYANwA3ADYAYQBhAGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAcwB0AF8ANgA1AGYANgAxAGQAMwAxADkAOAA4ADEANAA0ADcAYQA5ADYAMAA0
ADAAYQAyAGYAMwBmADcANwA2AGEAYQBiAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADAANQA5AC4AMgAzADgANgAxAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAANQA5AC4AMgAzADgANgAxAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADAAAAMAzAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{17F1A271-C165-4817-A580-E1BC9E78DF49\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{17F1A271-C165-4817-A580-E1BC9E78DF49}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}&quot; &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{17F1A271-C165-4817-A580-E1BC9E78DF49}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_98560B88826644138D9C0CDFBBA3FE8F_2"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{4E624F2F-E02E-4061-BC89-80DEB8B6B9E8\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{4E624F2F-E02E-4061-BC89-80DEB8B6B9E8}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}&quot; &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{4E624F2F-E02E-4061-BC89-80DEB8B6B9E8}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_3"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{537BC8AF-1717-46F5-8F35-9F82B1569D34\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{537BC8AF-1717-46F5-8F35-9F82B1569D34}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}&quot; &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{537BC8AF-1717-46F5-8F35-9F82B1569D34}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_98560B88826644138D9C0CDFBBA3FE8F_1"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{6549F15E-D323-4DCC-A436-6480B82BF5A7\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{6549F15E-D323-4DCC-A436-6480B82BF5A7}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}&quot; &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{6549F15E-D323-4DCC-A436-6480B82BF5A7}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_2"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{9100B5CE-71ED-41C3-8DCD-DC65293A9818\}]"
          DTS:CreationName=""
          DTS:DTSID="{9100B5CE-71ED-41C3-8DCD-DC65293A9818}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}&quot; || @[System::SourceID]==&quot;{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false || @[User::varSSISOps_DisableDataSrcInfoLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{9100B5CE-71ED-41C3-8DCD-DC65293A9818}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{C1B37640-234E-42E5-BBB3-F7A84F92BB7A\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{C1B37640-234E-42E5-BBB3-F7A84F92BB7A}"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{C1B37640-234E-42E5-BBB3-F7A84F92BB7A}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{C1DDE150-3FAE-4B88-B7DC-FA3DE7B98976\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{C1DDE150-3FAE-4B88-B7DC-FA3DE7B98976}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{C1DDE150-3FAE-4B88-B7DC-FA3DE7B98976}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{E243346B-745C-459A-B200-200147CA9836\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{E243346B-745C-459A-B200-200147CA9836}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{E243346B-745C-459A-B200-200147CA9836}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{F7B60BC7-03B1-446C-8851-D424482E28FB\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{F7B60BC7-03B1-446C-8851-D424482E28FB}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}&quot; &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{F7B60BC7-03B1-446C-8851-D424482E28FB}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_1"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{8B1C6A7F-F1E7-4ACD-A1A7-135D9490A767}"
      DTS:EventID="506351084"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{191F42F5-8259-4064-A55A-8455A20B86B6}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{2AF7A29C-8F1B-4B50-B45D-1509673C32C6}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ConnectionValues">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{2F540FE4-D7E2-4C1B-AB7C-908577688A2C}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DfLayout">
          <DTS:VariableValue
            DTS:DataType="8">&lt;layout version="3" compressed="true"&gt;&lt;DTS:Executable xmlns:DTS = "www.microsoft.com/SqlServer/Dts" DTS:ExecutableType = "SSIS.Package.2"&gt;&lt;DTS:PackageVariable&gt;		&lt;DTS:Property DTS:Name = "PackageVariableValue" DTS:DataType = "8"&gt;&lt;![CDATA[H4sIAAAAAAAEAO1aXW/bNhT9K4SeHVkkRcn24gCJ7a0enDaI/bbugZEYR6tEehKdOh3233elyC6lWEUwlMGGOkAM8fLr8J5zL69gn6948emdKjSKRZGs5ZlOMnEmeSbGzg2PPvG1+DiXUS4yITVPUap4jK4X8+VlUQ4vrROUSK3QUvN1ItfvkkKr/KkxaQGTnIvzBX9SWz2X9+ri/Jecbx6eDWjCNzxK9NPYocRBuyyVxdiJ0ryCUUCfGF0nUa4Kda/d5Z/pUuSPInfnUot1znWiZGlJIlG40+oQ0HmtYpG6YE94mnypBv3Ei0Jkd+nT+LWrVSBrRKOsKNapeA2wapr7fLiZBKeIb2/d2OYw0nnQejPq94voQWS8cLPDzEhl/c+JvN/1iecF/R3PUhNk9nqMlZdeA+7i/D0MrflaJl/AD5iSng98zePvrJSPt+ozmqit1A5aqc1C3GvYzSMu61EKnw7qH4MzoJbgTJSMuBYS/gFWus1kYQALmesZf7gXEq8LIxkGljDOZSFyjW5FnOQi0iJGOTgRJs52kdiUop5yzdGK36XC9OrAZQ3wGNNu9N7QEvrLOEa/qjs4hOYyEvNp7WcDaUBbbh4Q3CkFZkuZHxYzNL1CS7XNI9OPA5Am7vKaLTDT2XKFakSQ93Qiq+xlOi1o0esT1uU0SnybOP+lQFnzACBQr/sIOLSVAr7p5QFuSZORQWcMYWwJ4upnNMtzlaMPW72B/QBrlCebtiJIC2uAw2532lLE8naCukIJ8inrYdKd50NmMQtdbuNE19kHEZNkr0doZ8YhzJbyDncherwVf1SRs1LQC/b2Fem3dTgktAY8i9d7wN8donvD9UPx21egtQDx7+ZFEwx6NPQBjgnGnWyhxrg4fy6tRlWr3C7XcOdKOKzKx85f+/Jk9H6bpn87aCZjo9vrMci81aSy4VX95ZNPq93MtaEeXJfIi4O5NgDhKawHsWIUo8bsBdRw9dDG8qVv+11Lfe1qb96wQ/OlRwzLgt+JtNib4NkA229O3g81bG/Cfc2412Q87IUBscP48CjjDFtlnOET4wfGzexdR3yTfexCog6pBfb9YcnDsYgnNuOdnLhvcG8UQ43Ko5UE4DZnoWclDfjhURnQodU0UC3/llKo3ulHB0GgK7hlY6DpSu3GzllIXeINhl5AoGzyXQ9ekT2Kq0bg+jgcVM/Y9SllQxoC9FuRAmuP4kYVSQl37FzKJ+e/oq5nKRnV63FZ9QI2tCKq4Hg1wexWE+xUTRwUMBU5qDPeV+HP9L+oJklIT7XFj8P/y1tlENgRQOAdFwCxKwByEkDnqyRtRT9caIGdd8ngeEnB7JYU7K1Liv8V+S9D3y8/T3f/j8A+we3CD3u22KfH2Wd22Wcn9rvZfxn7w4Cdrv23Z79vfGEPLfOr/P7+JwQX/wBSD0CoTSAAAA==]]&gt;&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "Namespace"&gt;dts-designer-1.0&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "ObjectName"&gt;Package\Incremental load MLISAssignmentC into StagingHistory\Incremental Load&lt;/DTS:Property&gt;&lt;/DTS:PackageVariable&gt;&lt;DTS:PackageVariable&gt;		&lt;DTS:Property DTS:Name = "PackageVariableValue" DTS:DataType = "8"&gt;&lt;![CDATA[H4sIAAAAAAAEAO2YXW+bMBSG/4rFNQVMQtJlSaQuydZI9EMld+suXHCIVbAzbPqp/fcdCMlMW6pKQ72Ikit8fOzz+Lz2gXi4IPL2VEiFIipZzI8US+kRJykdGZckvCUxvZ5zplAiSITO/HlwIgu/lHI1QYhxJdBlRqUiMeNx6cpIgnzwNsZDnzyKXM35UoyHPzKyXm0MaELWJGTqcWTgnoEe0oTLkREmWRlYQh8dnLEwE1IslRX8TgKa3dHMmnNF44woJnhhYSGV1rTEhs4zEdHEAjvEZ0+l01ciJU1vksfRR2crISuiQSplnNCPgJXDrM3iZhwyQd8PXQuz8zRWSq0Hti3DFU2JtNLdyFCk9j3jywfbdZye/UDSBLJ7DiuuEhqwJwDFfWx2XQPNo/8W73rxHZ0SuUKLjHC5FFlqoIVY+3SpRoaLTdf5YnkGst+k6LRGceHP0PQbApEV46VUNQzL0X7Y7OF+M1S3NajgaoIqsEDkWUg1JgxpMbHTzOG5bSfnFUPHAQavicB12iOYzoIFelcjwNA16psebiTDfac1spMoQid5BIMnIslTLuv7xjM7GDdyHB+3xnEl7oEg50rfI8e1pMCZxZ2KZRbFW5YWoluXRK3kzx0DusjVGqZ28S8dx+kVe7ZbHGidwJrkUKzGw00ZHJQtFCiSqYngnIZKZCPjeVu9Bud5kvwx0IxHWrdj9hxjM6hoOGV/8eS5ZTR9bqjdcbEouTNXBlAwgflgY2kvDm20D/W2cq1NXyTUbprqX9fL4DU7NF9nRLP45IYmcmuCZw3Wrg/eumq2TxO8rjecQq9/UHtf1X5xuos3UtfzDnrvid4blV9XcNfDB433RWP90w41Kd49FPF9EXwK/1vvaFR9rb6peFHHO17nIPnnS25rlxfQ0q817O0Fyvgv57ija0sRAAA=]]&gt;&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "Namespace"&gt;dts-designer-1.0&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "ObjectName"&gt;Package\Init load MLISAssignmentC  into Prestaging\Initial Load&lt;/DTS:Property&gt;&lt;/DTS:PackageVariable&gt;&lt;/DTS:Executable&gt;&lt;/layout&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of connection strings (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable connectionstring logging."
          DTS:DTSID="{49BEE7E9-9E1F-4C30-8121-50B4AEBF6FE0}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableConnLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{1E411A99-34F0-4F98-AA80-22D4019877F3}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableParameterInitialValueLogging"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of variable values (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{97C9A4E0-F7BE-40E3-8896-3B5BB2EF2289}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableVarLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of ConnectionManagers you want to mask ConnectionStrings during logging process inside OnPreExecute Eventhandler. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case in-sensitive. This option is helpful when you want to hide certain connection strings or file paths from users who are using BIxPress Monitoring Console or Reports. When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual connectionstring of specified connection managers. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredConns&quot;. There are 2 places where you have to set this value (OnPreExecute, OnPostExecute)."
          DTS:DTSID="{4578B418-A7BB-425E-AD72-639A2052FD8A}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredConns">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{D9C155AB-EC09-4470-A622-C13F417F5310}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredParams"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="8">paramSSISOpsNF_From,paramSSISOpsNF_OnError_Disable,paramSSISOpsNF_OnPostExecute_Disable,paramSSISOpsNF_OnWarning_Disable,paramSSISOpsNF_OtherConfigSettings,paramSSISOpsNF_SMTPServerName,paramSSISOpsNF_To,pDefaultBufferMaxRows,pDefaultBufferSize,pEngineThreads,pJobInstanceParentID,pSourceTableName,pTargetTableName</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{1B893CCE-320F-4FF7-A956-EEDF0A55FB2F}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to configure how many characters will be logged for each variable. Default variable length for logging is 4000 anything after that will be truncated. -1 = Log full variable value . There are 3 places where you have to set this value (OnPreExecute, OnPostExecute OnVariableValueChanged)."
          DTS:DTSID="{E3CFF7FA-90B1-417C-86C1-A8A04228DAAF}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_MaxVarCharsToLog">
          <DTS:VariableValue
            DTS:DataType="3">4000</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{337C77F6-D4F1-44F5-B66C-6EAEEDD818C4}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ParentSourceID">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{1FE26169-47AA-4568-B168-A653623283BF}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_PkgLayout">
          <DTS:VariableValue
            DTS:DataType="8">&lt;layout version="3" compressed="true"&gt;&lt;DTS:Executable xmlns:DTS = "www.microsoft.com/SqlServer/Dts" DTS:ExecutableType = "SSIS.Package.2"&gt;&lt;DTS:PackageVariable&gt;		&lt;DTS:Property DTS:Name = "PackageVariableValue" DTS:DataType = "8"&gt;&lt;![CDATA[H4sIAAAAAAAEAO1d/1PjOLL/V/y4qvfuqmKj719YZqrixLnhihl4A7fvh52tLZMY8G6ws7aBmb26//21nC/YsR0CE2eBS6qGSSzJ3eqP1C21WtLhycWvwTBLrR+DJA3j6N1e+vsYk733h/9l254/vLaieBRYF8E4vrfuw/HYGsZR5oeRNUniSZBkYZBa2bWfWaMYsmaWf3kJ77OS2ygLb0zBa/8ujBPHtt8fnvrD3/yrwBoFaXgV2SaDHfk3wbu9WQqQPfa/xbfZUXQZvz/8e+JPrqcPrJ4/8Ydh9u3dnmB71tebcZS+2xuOk/wFKaQFBx/DYRKn8WXmnP0+PguSuyBxjqIsuEr8DKpmnoTDIHX6OXlI/AhVGzvwPPTH4R95ph/8NA1uLsbf3q37tpzJGUcHN2l6NQ7WYSwv5kwr50VXYRSsJl0is8i5d51lk4P9/XR4Hdz4qXOzKDmMb/bvw+jy6z5BSOx/9W/GRSZv1ucxl9I6zL0//ARZZ3idhX+AHAgWHUb2rKPRAuMvvfhmMg6MDK2jKMxA9tZx7I/+2r0dhdnfvnz0k9+sf8QXVje1ZlkDC9obPNqzzuPJcXCZvdvjDtOFD+swRylFKCeKc6oQ3bP26/jhz+fHr/BzFKWZHw2DAl9EEUd3uMNR4SNzZnrTjhMkM44+BP4oSD4E4dU1FGTUMXyl3teJH40C4O88uYU3n/pRMJ4yzxnrYAS5Cj8Zf0plCowyJByEGdGISi4wNW9GjmAYS8GIFLpBgFhWBNgHiSQ3UDMrvMypWncp/D9MrDGQLtJUvEN105shcfnNfw8y69hPs8/BME5G6WkSQ49Lg1HfBwwu48Sa640CDSYd2iGaOQ10sKAVOobZ4CYAfMY5z9bH46OzbmrUhHnaA7yz2DrLfOinVx/CNIuTb6VCx+WKYow6kq6F+iOYU8E7WOM55uYnoez7uS8wKxE01w4n1OENEmOkRmIAcy2xKbXTJEinBL/0ksDAdQQ1/FqUkSHYoRTgqidLabWvPoGsaZVgiEJD1gLxgsEKJn4C1gcMV/5gOGVsmiMdJuEkK/BHiSPrO3JVQJR9F6eGoWXxLFHG0D+lgxu6DkHfQ987+99jqx/kiq1/OxmHQxDLyPoc36cFhjTuEN4AFaZ1fWptBoqaqthCKIOujBV2pnL3Rldzss8j5MDXYTAKQGVDt0yzBDpmlv708P3nInUGCpI+fDqgWHARkb0iR07vFizh+8PpAOAg/2W6XJLB2yNoiHHybu9fcyN68Ol2PP73nuVFo0KyLalDi5+OQHvTl7zbQx2U56/Lxgl03TJtGNVcGSGki8ezB714PAZ6xkA8DKkKpY9BV82yTsmhDtgFLJHAAmMqGZs2wgWxi3DoBn+EQTIvdRqDJHF9wTyN5GmsNo1C/VhN4n4zg7bQS/JYVXwFw+u8aF6BKggrKlTNq55Sv3q8TZH9JmwfkpZbQ+k5/Kw24cKTYx8G/rMmdHMwTYAnlhvfRiPoUG781eDFHFH8gPUtV68Do0As9qzPwRjGznfBaZyGWT7Z6EbfphWpIVp4to2+b+Fi7yecO/ShStL0ft5u76fUkSWYjf4jdQqgmpMI0JHtaQABDQ4RjUECTCAi1tYA1YIPGkCI2rSpBqgmruoh0ODKAllVfJUGWONFCw1QQWFFhSp5JXpK/RoAfzkqAJSfEsXuInG5fq9DBZCSCkAIpnIEhqly450dGR1Ja/o2JGBHtWnMzeu32XAWTabA7AuBmxbhlqCqYD4NpmvjaJuhOyv2DphbiJIxqTaEShnCK8PPttoIBttHJFNKca6Epmur+2rBB3WPdW0aaEdWk7ZCG2JEy5JZVXoFu2u8Z859BYzmylRxo0+q22Oo77pu3nVZaaqmpSM5qFTegqJmpEFRw+isTUWdv/7lWHjVgSZfdLmqDZj073WOSdZhxhtW+Cnlc90QRecLLg32SYdj3ex8qfd9PKwpfPkRvo6Mq2nWsEwz+OhHkDNJyy4f43B6httw4I/TsmgINb5iurdweuJOXqiRySIfCKDuKFV2sTc46Wq8tuUXW3NHuvc1GN6CEIY3Iyu9Dsbj3AmXBFkSBtAxg+guTOIcG+vOT0L/Ymx8c5dxcrPMIDammmLV6LA0tV2PqeP4CjrcgnLJh6sMFY2aqBD5GPAlKgvntWWd53UrLCCcxbdJaRlBELAbqKl29d7GGrqn8eR2bBqed378zzRIStVji8ZWJcHXRnVBAqozjq9KKBmYZCNKBKknE4mC+3wtpmblRZvhx9wxssICVV//NLegFg4xPnnmtGFtaI5J3bSg1UnBC7I0UOlOXvF2porPgL/sGYLBBky/UTvo17l7cl9pq/5d9pLciS8Qf1LGX+XOwDbgr5sIok6+Mtci/HQH//puAoJwPteQpI25hmjQ/lS3OdPQO/hXwC/K8JMOFS1p/7rVPuifLa/uvajFpE3g/8jcST82d2JmYKrkYu4EBj8v9GhbKoahaGXWrvXqtesnjTy5puaVFLfS+KBNk0dcksgsPMot+SArpF6v4+uJA8wpzoShVtYdeP2aYm572lxCZNtesNo2huW1I2qcBxrmiptfTaAcOVghzSVihEidj98XcXvKeGoq8FbKYOmgUpkWVxOQIxRMzZlGGAHx9VcTKgULqwmsNm26mlBJW+Fxp9Awy5JZUXoFu2u8Z859FYzGylSzqqfU7VHU33KHpGWlih1hwg2Fo9uwnsRpsJgAbZtW0rz+LYNYWufhXBUjjWBYxtqIwzFha8VwJqlqwa3JiFoFm0iHK6IVEUCVY7Z+HF6l4IMiNcPJmrRpFE41cWWUChZleawqvioKZ40XPUThLIOwokLVvPxJ9avF+8VMnWwslINUIUoIlF2peq0F4Tzej/nPpdUNVYpobKUfE67LykKRWudKJZ9sdbatHSoIRaDKkBZard+HKwULfZjWpuWDoWraiiZuoh5LslhVegW7a7xnzn1F/M2VqWaVT6pbFecX03exCcsq9giYP5Sq9id23ZL/SykFgmvD/W2bRRXBCZWCaIw46xBBHVzckFQ1wdUypuUVyrQZJEUdRrBESMHsy2zLWjtIarlgYVoDoq1Jm1rjauIqa4XBiJZEs6r4Kmu8xosW1riCx4oKVfMK/JT6PQb9axgWd6MoznIf4qxnngdfoYWfRONvZgttaQ+f2V137idXQTYNIPjvv3zt/nDtpxaykvg+dSzjxEygEoXevWcN4ijfTVvT/x529HE1dW8KwgKhBLXlEGObjUYj+4L5Q1viEcH4Ul2yC784Hpf5FkKpFYAmufGMUwcGHAYETOez08fqGC5vX4N6/jgLADk4mNY4r3APNGZmmRoPzbe8/lf5Hq7EbEGOQBDPEwGFqfFcBHo0usCjS9/GiiGbUcVs/wLBn9EwoCOtKPJ5UR9K6kjFJShwxhQGxS3ZdI7NOYcWSVeJIK/BmT8OBnEyDCoBSn0/8+dhI2AofrD6wV0wjid5JzBbIA8swveR3CcIC8vK3zbfYj3d42y53yBjMobSmVFtjvXpHkR9Pc2b/zm5MxuZg/sD6/w6TK3JrDx8ne7SDkbWfZhdg4ADK50Ew/AyHFqT22QSp4EVX8LXsXl9nj4Chv8ntS6T+KZSmWnMS55kYq5muxGtysZEyzzyw5HZYmvemQSTOMmAmUXVUyu48SOQJhTP35fXw1r+GLmm9lSyp2A0TSCRM62k4XO6mf0isP5xcvTJ6xuqMdBL8sQ0ACrwZJLEo1sobxg5PutaDxVKrb+aB1kI8jEMP8hmOA5N+t+cgpDr/jyvqWLQjR2CZ42VakFp4FP7UsEfNpTE1uIS21TzEeWaXI6QKoY4U1HqsCYYXBT8QTMne2HbPfyafpluyN+fMfr+sJ+l3h1w/8GPRmMjtaYt/U4xW/rTSeQlSZz8vNZOf7Xb6P9aNvp/8j914F9plawB+tKOet+69MPxbVKM5Fq8qy5q7CmEzs6Ozk4mqXd9cvHrL7Onv+SDyNapzfLOqbZO79xPf9sCsU8DQ+yfExPN2oUc2TFo7QZ6DfONegIN05B/ITQgckBdW7nItRn8sDV1tS31QCBP0153gL78++caFjY9P6kq5Kq3FzXPN0qli0PT17GmvhEwVZ8xMSDc5l0Ew0vNke1qGGgi4g2QN5Cu5HQHZvtgrrLwS4b9eyw9cJbNgr7Xs/cm/HFn8N+QwS+2gLK90ooL5Joje4RgDFPV1z3U6w9ct0sHnhr8gjdqxb6DEbIlRlzRxVKTAQzQJfOEp3ueEr0+FbIrB0J0tyaRRxl5MRKhW2KklPbLcXw1d0+cJMam/ClczJLOlo+t2SIHGx9IN1N+GE4X8myJ9mxovU3C02H2WRCN8kH29w2wiwSaRmZYDnCXSGz3sOA2U1jaXa6Q7WG3pz2p+gOmdyOzFzPMXgdS0JgE5ksD24Phtc2QwLbbU9pWqO+5yhWu9tQO0lcFKacSIOwObCyhg8JUittqQLmtB4q4mAvdp2wH6auCVHCmB5h7dp8SarN+r2d3GRW2YApGpcQd8K7cQfqqINUYIZf3PFtir28z3KO26vf6dr8nONG0qxXeKd7XBWkPu1QKhmxCGdhS4nHbdV1qD2RXsYEmriu7O0hfGaT9voc5sumgC5C6Stmu7PfsQZf2PelqpaXYQfqqIPUIo5QJ15aM92zGddd2CYJOi4wHoQeKl+4gfV2QDqQrkNuTNqIuthkTPVspju0+I4wp4hE1cHeQvp0VgyR40oLBLkDgja0XPOBf8TwuktpwPDbRLfgdF1m2Q3nudXyM7LrK9oFOk66lMKzVnHg2lV2YinJFbRerge16A5i6YI8jttO1L8h8Po6o6Pd6ngvmsucxGBBpF6Yt0vPgp6uki0zg7G69/e1Yz/mq1I/++DboXfvRVTBaz47ubtR5W3a0tiUsW9S6TC3Y1jV4mdm6upzfZ/VqaTd61xVhYPCYzbvazDX63O6SPrbFgGuqGceuS3ba8s1oy//zkwjY3k00/hMV5Bz8ZZ04e96CGqyn+DC/mKVvgeZM226DYAvhwnMSTVq8OxgwpDm3CUbKZrTbtbuKuTYRfe2ygRogtAsYfjmzmMfg9HqC9Xq8byOBYAqjKLNd3WN2v88GAinNaL+3g/OFGWWjYT7EadZsjTd0494uqPht2W5M624a3EBL+fI5vrfy/aPFk1xRfo44JY3HYKuWror8AnrFXLIXTQ+FH9/eRMWD4CV3ynf/SdJ8CrmuuyVxEzweRSlYbFAaoxB0s7kRMAEhQkHv6zCYmEadb1DNN3YWparKF2V1MKbN3CPdEvfd0ah4wvpRfybn4jEkdEnMiuDmE9Hbapknx57Vd63KEfDmrtSmKwdQW8z0vbNza8YR6L0sjJbP3s8vuSoKjZHGY+QpqTupfmN8PrOBlm/WxOZmzeYq4NpD/jeIe72UFV5qmpw0n6OP62472ASL5wMr39BlndxmE6AHvObh5kstgizxKrBsFmdbLeLsc89q6krS3KyBSbOel3XXHWxKC+Vnw860j1XcO6HM2duNGofwtlrewhZad5+DX/Oecx5DKjxfNpFsuR3qxWnh9QP8zbDonPrZdfrTA6OzBlg+iF+o/LSFNk7D5fWn+bF2T2Jn2z6J/bnHlmwB+xniqIy47EhB2kG87nwh0xBaRZzjHeILxIvae9bjy+jnJ+9L2sbB+7rh4H1G2uzvZId9CfvCYKg08lhSAuaeLNnOGfxMNty/0KoayF//Yg6jMxdOE6Q0EuaiI2ZuQSeI4vyHcBiWKv+OHUYp19Sco9fGbQ2ba13TplQYvdY3q47gup2z9RvOBm53NMF3o4lFC+gHCbTO0XwUPoW/Mpokku7GFv85+FetihLtNABRf7MLb/dmF77tm11ecAOoTCXpUu8HgybamUuK+iEFb3dIwbc9pHhV4Fe7PhPt3Om2s/0vDn2Clwd+GLWFfv3V0Zy3iz7fod+MfrXva8F3Zn/76K+KKZiHELw/PA0nwRhq2YtvJnEEbH4MMj8/wbXl6IK6FRpgJ4knQZKFQbr4/u394Scg/96sNk29Vz+Gwf1R/3A/f3y4/5BvqUS+NGVqfHJh/PDn3ybBvFAesmpl8OTd3u/kIM0SE6w1LXG4n6eW3rxfZGy/UWgvQJ6z5ZnvFeUrqPCTFijfQNNaK+4nzOolOhXpaQK9LZfql+LZ52tF+pj7EXaRPs+J9KldE61bVX4WeGYd+YOfXlvniR+l5hzu4k15uEPQfK6y5vL787hYueBOlhc6n7yI/TymVi1bY22WrVEzH7UxKd8lnAoPJnSn0xgdUR+I8jwOHg89KQduINnheEXcBtoYZ8uL+Gm53Zg4nea4IaU2xkdtDNtytBXDjy7QP4v6mpMpJEybZS350Xfj6WfNpjYLeBlv6IWtXAe0Q/tFoL3Uu41FYnw3W34reNcshOQanPC2bhnfYbx1jB+Lq8kRZzsl/lYAf3yxM9fjlO8WO9+Y13NjE+M34Iz6EyS4bc/m/lSc6fv/BwdCoqvGqwAA]]&gt;&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "Namespace"&gt;dts-designer-1.0&lt;/DTS:Property&gt;&lt;/DTS:PackageVariable&gt;&lt;/DTS:Executable&gt;&lt;/layout&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{D44A225C-6F0E-450C-B6D7-780A0BA35F5E}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_SourceType">
          <DTS:VariableValue
            DTS:DataType="8">unknown</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{8AFE49BA-9DA3-4FEF-BE80-8207975F51AF}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_TaskList">
          <DTS:VariableValue
            DTS:DataType="8">&lt;xml AuditControlFlowVersion="6" EnableRowCountLogging="True" EnableRowCountLoggingForSource="True" EnableRowCountLoggingForDestination="True" EnableDataFlowMonitoring="True" MaxIterationCount="0" TrackAllVariables="True" TrackOnlyTagVariables="False" EnableVariableChangeTracking="True" EnableVariableChangeTrackingAdvFeatures="True" EnableVariableChangeTrackingAdvFeaturesADORec="False" LogConnectionMgrs="True"&gt;&lt;tsk id="{6762A3E9-FA48-4BC1-836D-35B4703F7EFB}" typ="SequenceContainer" p="" name="Completion Initial Load(Audit)" on="1" /&gt;&lt;tsk id="{B2C9596D-F8C4-4AE9-84BE-88B5A4AFF161}" typ="SQLTask" p="{6762A3E9-FA48-4BC1-836D-35B4703F7EFB}" name="Mark Job As Complete in Job" on="1" /&gt;&lt;tsk id="{8EFB6D50-3D12-4281-BBD1-95EF9F4B9EC7}" typ="SQLTask" p="{6762A3E9-FA48-4BC1-836D-35B4703F7EFB}" name="Mark Job as Complete in JobInstance" on="1" /&gt;&lt;tsk id="{BA4B8F72-EF54-4626-B486-071CBB8FD138}" typ="SQLTask" p="" name="Determine if Init vs Incr load" on="1" /&gt;&lt;tsk id="{FE0C65AD-8B79-4C85-85AF-CC4A4D3E1C73}" typ="SQLTask" p="" name="Get LastRecordsProcessedDate for Package" on="1" /&gt;&lt;tsk id="{0CC0FEF7-4FFE-44B8-BEEB-D4280FCE624E}" typ="SequenceContainer" p="" name="Incremental load MLISAssignmentC into StagingHistory" on="1" /&gt;&lt;tsk id="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}" typ="PipelineTask" p="{0CC0FEF7-4FFE-44B8-BEEB-D4280FCE624E}" name="Incremental Load" on="1" &gt;&lt;com id="2" dir="TRAN"  typ="trnderivedcolumn" name="Add Audit Column 2" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_2" /&gt;&lt;com id="20" dir="TRAN"  typ="trnderivedcolumn" name="Add JobInstanceID Column" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_20" /&gt;&lt;com id="32" dir="TRAN"  typ="scriptcomponent" name="Concatenate Columns" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_32" /&gt;&lt;com id="50" dir="TRAN"  typ="trnrowcount" name="DEST Insert Redirected row to ExceptionData Table" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_50" /&gt;&lt;com id="54" dir="TRAN"  typ="trnrowcount" name="DEST OLE DB Destination" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_54" /&gt;&lt;com id="58" dir="DEST"  typ="desoledb" name="Insert Redirected row to ExceptionData Table" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_58" /&gt;&lt;com id="82" dir="DEST"  typ="desoledb" name="OLE DB Destination" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_82" /&gt;&lt;com id="130" dir="SRC"  typ="srcoledb" name="OLE DB Source" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_130" /&gt;&lt;com id="181" dir="TRAN"  typ="trnrowcount" name="Row Count" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_181" /&gt;&lt;com id="185" dir="TRAN"  typ="trnrowcount" name="Row Count vRejectedTotalRowCount" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_185" /&gt;&lt;com id="189" dir="TRAN"  typ="trnrowcount" name="SRC OLE DB Source" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_189" /&gt;&lt;com id="193" dir="TRAN"  typ="PW.TaskFactory.ErrorOutputDescription.ErrorOutputDescription, PW.TaskFactory120, Version=1.0.0.0, Culture=neutral, PublicKeyToken=47acf905d0337c39" name="TF Error Output Description" pid="{B6A1792F-0147-4E6E-9CE8-6CD367A7F66A}_193" /&gt;&lt;dp id="231" val="0"  ann="" c1="20" c2="185"/&gt;&lt;dp id="232" val="0"  ann="" c1="2" c2="181"/&gt;&lt;dp id="233" val="0"  ann="" c1="193" c2="32"/&gt;&lt;dp id="234" val="1"  ann="OLE DB Destination Error Output" c1="82" c2="193"/&gt;&lt;dp id="235" val="0"  ann="" c1="130" c2="189"/&gt;&lt;dp id="236" val="0"  ann="" c1="32" c2="20"/&gt;&lt;dp id="237" val="0"  ann="" c1="181" c2="54"/&gt;&lt;dp id="238" val="0"  ann="" c1="185" c2="50"/&gt;&lt;dp id="239" val="0"  ann="" c1="50" c2="58"/&gt;&lt;dp id="240" val="0"  ann="" c1="54" c2="82"/&gt;&lt;dp id="241" val="0"  ann="" c1="189" c2="2"/&gt;&lt;/tsk&gt;&lt;tsk id="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" typ="SequenceContainer" p="" name="Init load MLISAssignmentC  into Prestaging" on="1" /&gt;&lt;pc id="{1419D2FA-F25E-485B-8853-C3197C04B7C3}" op="3" and="True" val="0" task1="{88468C27-9598-42E7-8B43-1EFC833F9183}" task2="{D91253B7-DA15-4FA7-9F1C-173BF905DDA7}" p="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" refId="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{D02E5563-E25A-4F73-9E0B-0D2AC4DB884C}" op="3" and="False" val="0" task1="{88468C27-9598-42E7-8B43-1EFC833F9183}" task2="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}" p="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" refId="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 1]"/&gt;&lt;pc id="{E2994DFC-442D-4B18-B1C3-B944D8EAFA16}" op="2" and="True" val="0" task1="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}" task2="{AA58FD1A-9890-4C40-9859-256AE76944DB}" p="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" refId="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 2]"/&gt;&lt;pc id="{21EC38A9-A1B7-4EB8-9449-12B5FBCF109D}" op="2" and="False" val="0" task1="{D91253B7-DA15-4FA7-9F1C-173BF905DDA7}" task2="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}" p="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" refId="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 3]"/&gt;&lt;pc id="{B1038DAC-413F-4762-A0A4-B14AE05A338E}" op="3" and="True" val="0" task1="{AA58FD1A-9890-4C40-9859-256AE76944DB}" task2="{AEB0CA8D-395B-4846-8C7A-8FA782D2185E}" p="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" refId="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 4]"/&gt;&lt;tsk id="{AEB0CA8D-395B-4846-8C7A-8FA782D2185E}" typ="SQLTask" p="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" name="Create Index" on="1" /&gt;&lt;tsk id="{88468C27-9598-42E7-8B43-1EFC833F9183}" typ="SQLTask" p="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" name="Detect index and prepare drop and create index script" on="1" /&gt;&lt;tsk id="{D91253B7-DA15-4FA7-9F1C-173BF905DDA7}" typ="SQLTask" p="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" name="Drop Index" on="1" /&gt;&lt;tsk id="{AA58FD1A-9890-4C40-9859-256AE76944DB}" typ="SQLTask" p="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" name="ESQL Delete Duplicated Rows" on="1" /&gt;&lt;tsk id="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}" typ="PipelineTask" p="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" name="Initial Load" on="1" &gt;&lt;com id="2" dir="TRAN"  typ="trnderivedcolumn" name="Add Audit Columns" pid="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}_2" /&gt;&lt;com id="20" dir="TRAN"  typ="trnrowcount" name="DEST OLE DB Destination" pid="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}_20" /&gt;&lt;com id="24" dir="DEST"  typ="desoledb" name="OLE DB Destination" pid="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}_24" /&gt;&lt;com id="72" dir="SRC"  typ="srcoledb" name="OLE DB Source" pid="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}_72" /&gt;&lt;com id="120" dir="TRAN"  typ="trnrowcount" name="Row Count" pid="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}_120" /&gt;&lt;com id="124" dir="TRAN"  typ="trnrowcount" name="SRC OLE DB Source" pid="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}_124" /&gt;&lt;com id="128" dir="TRAN"  typ="PragmaticWorks.TaskFactory.Components.Transforms.Hash.HashTransform, PragmaticWorks.TaskFactory.Components120, Version=1.0.0.0, Culture=neutral, PublicKeyToken=47acf905d0337c39" name="TF Hash Transform" pid="{98560B88-8266-4413-8D9C-0CDFBBA3FE8F}_128" /&gt;&lt;dp id="136" val="0"  ann="" c1="2" c2="120"/&gt;&lt;dp id="137" val="0"  ann="" c1="72" c2="124"/&gt;&lt;dp id="138" val="0"  ann="" c1="128" c2="2"/&gt;&lt;dp id="139" val="0"  ann="" c1="120" c2="20"/&gt;&lt;dp id="140" val="0"  ann="" c1="20" c2="24"/&gt;&lt;dp id="141" val="0"  ann="" c1="124" c2="128"/&gt;&lt;/tsk&gt;&lt;tsk id="{0FEF5DF8-5868-4282-A8D9-F0499868F4A7}" typ="SequenceContainer" p="" name="Initialization" on="1" /&gt;&lt;tsk id="{304CD2A2-89FC-4FA9-A592-D06DBE0FB4B6}" typ="ScriptTask" p="{0FEF5DF8-5868-4282-A8D9-F0499868F4A7}" name="Validate Connection Managers" on="1" /&gt;&lt;tsk id="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" typ="SequenceContainer" p="" name="Initialization (Audit)" on="1" /&gt;&lt;pc id="{CF4B4B7E-D4E1-41B2-8C87-59F212BFAFA8}" op="2" and="True" val="0" task1="{2455ABD0-CD1F-4C58-8F98-C45FC82A09FA}" task2="{CD8BC145-995D-4851-ABDF-F8DC5D81E9D7}" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{85C05518-FB11-427A-8F85-EAF4F538B377}" op="2" and="True" val="0" task1="{54F20F4D-4582-4AAD-B2C9-5F2FCA26AEBC}" task2="{2455ABD0-CD1F-4C58-8F98-C45FC82A09FA}" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 1]"/&gt;&lt;pc id="{5B9CB8CC-0AB4-4BDC-A83E-C91BA67B8E88}" op="2" and="True" val="0" task1="{4C6CFE84-FB26-477B-B098-23BE4874C52F}" task2="{54F20F4D-4582-4AAD-B2C9-5F2FCA26AEBC}" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 2]"/&gt;&lt;pc id="{0DE91852-2FC9-48C1-8BDF-2C835711A63E}" op="2" and="True" val="0" task1="{CD8BC145-995D-4851-ABDF-F8DC5D81E9D7}" task2="{82C4DEF7-2FE7-4983-9D7D-7611307F6DE8}" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 3]"/&gt;&lt;pc id="{3768DDC3-C935-4B2F-BB1E-59CB30251CED}" op="2" and="True" val="0" task1="{82C4DEF7-2FE7-4983-9D7D-7611307F6DE8}" task2="{051F8EEA-5D1E-4099-9BAE-87C6305FC0FC}" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 6]"/&gt;&lt;tsk id="{82C4DEF7-2FE7-4983-9D7D-7611307F6DE8}" typ="ScriptTask" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" name="Execute cmd shell and retrieve environment variable information" on="1" /&gt;&lt;tsk id="{051F8EEA-5D1E-4099-9BAE-87C6305FC0FC}" typ="SQLTask" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" name="Log Environment" on="1" /&gt;&lt;tsk id="{CD8BC145-995D-4851-ABDF-F8DC5D81E9D7}" typ="SQLTask" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" name="Log Processed  Table JobInstanceSource" on="1" /&gt;&lt;tsk id="{4C6CFE84-FB26-477B-B098-23BE4874C52F}" typ="SQLTask" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" name="Populate ETLUser" on="1" /&gt;&lt;tsk id="{54F20F4D-4582-4AAD-B2C9-5F2FCA26AEBC}" typ="SQLTask" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" name="Populate Joblog" on="1" /&gt;&lt;tsk id="{2455ABD0-CD1F-4C58-8F98-C45FC82A09FA}" typ="SQLTask" p="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" name="Populate new Job Instance" on="1" /&gt;&lt;pc id="{AF3D37CC-CDA6-4E33-B5DB-22DC4D08E318}" op="2" and="True" val="0" task1="{0FEF5DF8-5868-4282-A8D9-F0499868F4A7}" task2="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" p="" refId="Package.PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{B9FEDC61-9F06-4E92-BC93-2049B021FA6D}" op="2" and="True" val="0" task1="{D4EF3A80-ED86-4AB1-B3CB-D9A9D61D68AC}" task2="{FE0C65AD-8B79-4C85-85AF-CC4A4D3E1C73}" p="" refId="Package.PrecedenceConstraints[Constraint 1]"/&gt;&lt;pc id="{09B2BF73-E6CC-4700-842A-A6C5E8DE2224}" op="2" and="False" val="0" task1="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" task2="{6762A3E9-FA48-4BC1-836D-35B4703F7EFB}" p="" refId="Package.PrecedenceConstraints[Constraint 2]"/&gt;&lt;pc id="{3417EB3B-A406-4A81-80DE-64B4024CD0FE}" op="2" and="True" val="0" task1="{FE0C65AD-8B79-4C85-85AF-CC4A4D3E1C73}" task2="{BA4B8F72-EF54-4626-B486-071CBB8FD138}" p="" refId="Package.PrecedenceConstraints[Constraint 3]"/&gt;&lt;pc id="{0E3C1EA3-D4B8-49F7-B791-2D34CA9E320B}" op="3" and="True" val="0" task1="{BA4B8F72-EF54-4626-B486-071CBB8FD138}" task2="{114EB820-0372-48C7-B8E0-6D5B8D19DBE6}" p="" refId="Package.PrecedenceConstraints[Constraint 4]"/&gt;&lt;pc id="{AAA17A3E-2794-4E51-9702-313D7A9D6985}" op="3" and="True" val="0" task1="{BA4B8F72-EF54-4626-B486-071CBB8FD138}" task2="{0CC0FEF7-4FFE-44B8-BEEB-D4280FCE624E}" p="" refId="Package.PrecedenceConstraints[Constraint 5]"/&gt;&lt;pc id="{41E526E9-27C1-445B-BC08-903F7D3D147B}" op="2" and="False" val="0" task1="{0CC0FEF7-4FFE-44B8-BEEB-D4280FCE624E}" task2="{6762A3E9-FA48-4BC1-836D-35B4703F7EFB}" p="" refId="Package.PrecedenceConstraints[Constraint 6]"/&gt;&lt;/xml&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{F12FEA7F-7E27-4B85-8767-41D3A53BBB36}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_VariableValues">
          <DTS:VariableValue
            DTS:DataType="8">User::vAuditDateTime,User::vCreateAllIndexSQL,User::vCurJobID,User::vCurJobInstanceID,User::vCurUserID,User::vDeletedRowCount,User::vDeletedTotalRowCount,User::vDropAllIndexSQL,User::vEnvironmentTEXT,User::vFileCreatedDate,User::vFileLastModifiedDate,User::vFileList,User::vFileTypeExtension,User::vInsertedRowCount,User::vInsertedTotalRowCount,User::vJobInstanceSourceID,User::vLastExecutionDate,User::vLastRecordsProcessedDate,User::vPackageStartDate,User::vProcessedRowCount,User::vProcessingFileCount,User::vProcessingFileFullPathName,User::vProcessingFileName,User::vRejectedRowCount,User::vRejectedTotalRowCount,User::vSchemaTableName,User::vSourceServerDatabase,User::vSQLDeleteDuplicates,User::vSQLLSAAssignmentCStatement,User::vSQLSelectPreStagingRecords,User::vSQLTruncateTargetTable,User::vTargetTableCount,User::vUpdatedTotalRowCount</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{E0BBBF31-449B-4C2E-90F8-73153A96FCA8}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPreExecute_Start">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_f8c4d6adc2ad463cb90ea9b1c9388b93"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_f8c4d6adc2ad463cb90ea9b1c9388b93")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_f8c4d6adc2ad463cb90ea9b1c9388b93")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

using System.Xml;


#endregion

namespace st_f8c4d6adc2ad463cb90ea9b1c9388b93
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            string xmlTaskInfo = this.ReadVariable("varSSISOps_TaskList").ToString();

            if (string.IsNullOrEmpty(xmlTaskInfo))
            {
                this.WriteVariable("varSSISOps_SourceType", "UNKNOWN");
                this.WriteVariable("varSSISOps_ParentSourceID", string.Empty);
                return;
            }

            using (XmlTextReader reader = new XmlTextReader(new System.IO.MemoryStream(System.Text.Encoding.UTF8.GetBytes(xmlTaskInfo))))
            {
                bool isFound = false;

                while (reader.Read())
                {
                    switch (reader.NodeType)
                    {
                        case XmlNodeType.Element:
                            // The node is an Element
                            if (reader.Name.ToLowerInvariant() == "tsk" && this.ReadVariable("System::SourceID").ToString().ToLowerInvariant() == reader.GetAttribute("id").ToLowerInvariant())
                            {
                                this.WriteVariable("varSSISOps_SourceType", reader.GetAttribute("typ"));
                                this.WriteVariable("varSSISOps_ParentSourceID", reader.GetAttribute("p"));
                                isFound = true;
                                break;
                            }

                            break;
                    }
                }

                if (isFound == false)
                {
                    this.WriteVariable("varSSISOps_SourceType", "UNKNOWN");
                    this.WriteVariable("varSSISOps_ParentSourceID", string.Empty);
                }
            }

            if (string.Compare(ReadVariable("System::SourceID").ToString(), ReadVariable("System::PackageID").ToString(), StringComparison.InvariantCultureIgnoreCase) == 0)
            {
                System.Text.StringBuilder sb = new System.Text.StringBuilder(); 
                bool bLogVar = true;
                string sVarList = ReadVariable("User::varSSISOps_VariableValues").ToString();

                if (string.IsNullOrEmpty(sVarList) || Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableConnLogging")))
                    bLogVar = false; 

                if (bLogVar)
                {
                    string filterList = ReadVariable("User::varSSISOps_FilteredVars").ToString();
                    string[] arrFilter = filterList.Split(',');
                    string[] arrVariables = sVarList.Split(','); 
                    object oVal = null; 

                    foreach (string var in arrVariables)
                    {
                        try
                        {

                            bool bSkip = false;
                            string comp = var;
                            string f = string.Empty;

                            foreach (string floop in arrFilter)
                            {
                                comp = comp.ToLower().Trim();
                                f = floop.ToLower().Trim();

                                if (string.IsNullOrEmpty(f))
                                    break;

                                if (comp.IndexOf("::") < 0)
                                    comp = "user::" + comp;

                                if (f.IndexOf("::") < 0)
                                    f = "user::" + f;

                                if (System.Text.RegularExpressions.Regex.IsMatch(comp, f.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                                {
                                    bSkip = true;
                                    break;
                                }
                            }


                            if (bSkip)
                                oVal = "*****";
                            else
                            {
                                oVal = ReadVariable(var); 

                                if (oVal !=null)
                                {
                                    string s = oVal.ToString();
                                    int iMaxCharsToLog = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"));
                                    bool isLogFullValue = iMaxCharsToLog < 1;

                                    if (!isLogFullValue && s.Length > iMaxCharsToLog)
                                        oVal = s.Substring(0, iMaxCharsToLog) + " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 from config file if you want to log full value (Not recommended for performance reasons)>";
                                }
                            }

                            if (oVal != null)
                                sb.AppendLine(var.PadRight(30, '.') + "... " + oVal.ToString()); 
                            else
                                sb.AppendLine(var.PadRight(30, '.') + "... "); 
                        }
                        catch (Exception ex)
                        {
                            sb.AppendLine(var.PadRight(30, '.') + "... {Error reading variable value: " + ex.Message + "}"); 
                        }
                    }

                    WriteVariable("User::varSSISOps_VariableValues", sb.ToString()); 
                }

                bool isDisableLogParameterInitialValues;

                if (bool.TryParse(ReadVariable("User::varSSISOps_DisableParameterInitialValueLogging").ToString(), out isDisableLogParameterInitialValues) && !isDisableLogParameterInitialValues)
                {
                    object filteredParams = ReadVariable("User::varSSISOps_FilteredParams");

                    string parameterList = filteredParams == null ? string.Empty : filteredParams.ToString();

                    string[] parameterNames = parameterList.Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries);

                    System.Text.StringBuilder parameterNameValues = new System.Text.StringBuilder();

                    foreach (string parameterName in parameterNames)
                    {
                        string fullyQualifiedVariableName = parameterName.Contains("::") ? parameterName : "$Package::" + parameterName;

                        if (!Dts.VariableDispenser.Contains(fullyQualifiedVariableName))
                            continue;

                        object parameterValue = ReadVariable(fullyQualifiedVariableName);
                        string parameterDisplayValue = parameterValue == null ? string.Empty : parameterValue.ToString();

                        parameterNameValues.AppendFormat("{0}... {1}{2}", fullyQualifiedVariableName.TrimStart('$').PadRight(30, '.'), parameterDisplayValue, Environment.NewLine);
                    }

                    if (parameterNameValues.Length > 0)
                    {
                        object variableValuesValue = ReadVariable("User::varSSISOps_VariableValues");
                        string variableValuesDisplayValue = variableValuesValue == null ? string.Empty : variableValuesValue.ToString();

                        WriteVariable("User::varSSISOps_VariableValues", variableValuesDisplayValue + parameterNameValues);
                    }
                }

                System.Text.StringBuilder sb1 = new System.Text.StringBuilder(); 
                bool bLogConn = !Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableConnLogging"));

                if (bLogConn)
                {
                    string filterList = ReadVariable("User::varSSISOps_FilteredConns").ToString();
                    string[] arrFilter = filterList.Split(',');
                    string sDataSource = String.Empty;

                    foreach (ConnectionManager conn in Dts.Connections)
                    {
                        try
                        {
                            sDataSource = string.Empty;

                            bool bSkip = false;
                            string comp = conn.Name;
                            string f = string.Empty;

                            foreach (string floop in arrFilter)
                            {
                                comp = comp.ToLower().Trim();
                                f = floop.ToLower().Trim();

                                if (string.IsNullOrEmpty(f))
                                    break;

                                if (System.Text.RegularExpressions.Regex.IsMatch(comp, f.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                                {
                                    bSkip = true;
                                    break;
                                }
                            }


                            string sConnStr = conn.ConnectionString;

                            if (bSkip)
                            {
                                sConnStr = "*****";
                                sDataSource = "*****";
                            }
                            else
                            {
                                try
                                {
                                    if (conn.Properties.Contains("ServerName"))
                                        sDataSource = conn.Properties["ServerName"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("SqlServerName"))
                                        sDataSource = conn.Properties["SqlServerName"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("Host"))
                                        sDataSource = conn.Properties["Host"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("ServerHost"))
                                        sDataSource = conn.Properties["ServerHost"].GetValue(conn).ToString();
                                    else if (conn.Properties.Contains("Server"))
                                        sDataSource = conn.Properties["Server"].GetValue(conn).ToString();
                                    else if (conn.CreationName == "FLATFILE" || (conn.CreationName == "FILE" && conn.ConnectionString.IndexOf(".", System.StringComparison.InvariantCultureIgnoreCase) > 0))
                                        sDataSource = System.IO.Path.GetFileName(conn.ConnectionString);
                                }
                                catch (Exception) { }
                            }

                            sb1.AppendLine(conn.Name.PadRight(30, '.') + "... " + conn.CreationName.PadRight(10, ' ') + "  \t" + sDataSource.PadRight(15, ' ') + "  \t" + sConnStr);
                        }
                        catch (Exception ex)
                        {
                            sb1.AppendLine(conn.Name.PadRight(30, '.') + "... {Error reading connection: " + ex.Message + "}");
                        }
                    }

                    WriteVariable("User::varSSISOps_ConnectionValues", sb1.ToString());
                }

            }

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_f8c4d6adc2ad463cb90ea9b1c9388b93.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b3f06b6e-6846-4e7b-9a6e-bc14cb8e68f7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_f8c4d6adc2ad463cb90ea9b1c9388b93</RootNamespace>
    <AssemblyName>st_f8c4d6adc2ad463cb90ea9b1c9388b93</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_f8c4d6adc2ad463cb90ea9b1c9388b93</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_f8c4d6adc2ad463cb90ea9b1c9388b93</msb:DisplayName>
		<msb:ProjectId>{7019EB6F-63CA-485A-AEB0-165D1EDBA830}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_f8c4d6adc2ad463cb90ea9b1c9388b93.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f8c4d6adc2ad463cb90ea9b1c9388b93.Properties.Settings.get_Default():st_f8c4d6adc2ad463cb90ea9b1c9388b93.Properties.Sett" +
    "ings")]

namespace st_f8c4d6adc2ad463cb90ea9b1c9388b93.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f8c4d6adc2ad463cb90ea9b1c9388b93.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f8c4d6adc2ad463cb90ea9b1c9388b93.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_f8c4d6adc2ad463cb90ea9b1c9388b93.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_f8c4d6adc2ad463cb90ea9b1c9388b93.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_f8c4d6adc2ad463cb90ea9b1c9388b93.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_f8c4d6adc2ad463cb90ea9b1c9388b93.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIfZpFcAAAAAAAAAAOAAAiELAQsAACYAAAAIAAAAAAAAjkQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADREAABXAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlCQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
RAAAAAAAAEgAAAACAAUAKCsAAAwZAAABAAAAAAAAAHAqAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgACCAAAAgAAEQJycwAAcCgKAAAGbxYAAAoKBigXAAAKLCECcpsA
AHByxwAAcCgJAAAGAnLXAABwfhgAAAooCQAABiooGQAACgZvGgAACnMbAAAKcxwAAAoLFgwrfgdv
HQAAChMqESoXM3EHbx4AAApvHwAACnILAQBwKCAAAAosWgJyEwEAcCgKAAAGbxYAAApvHwAACgdy
NQEAcG8hAAAKbx8AAAooIAAACiwuAnKbAABwB3I7AQBwbyEAAAooCQAABgJy1wAAcAdyQwEAcG8h
AAAKKAkAAAYXDAdvIgAACjp3////CC0gAnKbAABwcscAAHAoCQAABgJy1wAAcH4YAAAKKAkAAAbe
CgcsBgdvIwAACtwCchMBAHAoCgAABm8WAAAKAnJHAQBwKAoAAAZvFgAAChkoJAAACjq+BgAAcyUA
AAoNFxMEAnJrAQBwKAoAAAZvFgAAChMFEQUoFwAACi0SAnKrAQBwKAoAAAYoJgAACiwDFhMEEQQ5
AgIAAAJy8wEAcCgKAAAGbxYAAAoTBhEGF40mAAABEysRKxYfLJ0RK28nAAAKEwcRBReNJgAAARMs
ESwWHyydESxvJwAAChMIFBMJEQgTLRYTLjiTAQAAES0RLpoTChYTCxEKEwx+GAAAChMNEQcTLxYT
MDiMAAAAES8RMJoTDhEMbygAAApvKQAAChMMEQ5vKAAACm8pAAAKEw0RDSgXAAAKLWsRDHIvAgBw
byoAAAoWLw5yNQIAcBEMKCsAAAoTDBENci8CAHBvKgAAChYvDnI1AgBwEQ0oKwAAChMNEQwRDXJD
AgBwckcCAHBvLAAAChcoLQAACiwFFxMLKxERMBdYEzARMBEvjmk/af///xELLAlyTwIAcBMJK1UC
EQooCgAABhMJEQksRxEJbxYAAAoTDwJyWwIAcCgKAAAGKC4AAAoTEBEQF/4EExERES0hEQ9vLwAA
ChEQMRYRDxYREG8wAAAKcp8CAHAoKwAAChMJEQksJQkRCh8eHy5vMQAACnLqAwBwEQlvFgAACigy
AAAKbzMAAAomKxwJEQofHh8ubzEAAApy6gMAcCgrAAAKbzMAAAom3iwTEgkRCh8eHy5vMQAACnL0
AwBwERJvNAAACnI8BABwKDUAAApvMwAACibeABEuF1gTLhEuES2OaT9i/v//AnJrAQBwCW8WAAAK
KAkAAAYCckAEAHAoCgAABm8WAAAKEhMoNgAACjkyAQAAERM6KwEAAAJyqgQAcCgKAAAGExQRFCwJ
ERRvFgAACisFfhgAAAoTFREVF40mAAABEzERMRYfLJ0RMRdvNwAAChMWcyUAAAoTFxEWEzIWEzM4
kwAAABEyETOaExgRGHIvAgBwbzgAAAotDnLqBABwERgoKwAACisCERgTGQIoOQAACm86AAAKERlv
OwAACixSAhEZKAoAAAYTGhEaLAkRGm8WAAAKKwV+GAAAChMbERdyAAUAcBEZF40mAAABEzQRNBYf
JJ0RNG88AAAKHx4fLm8xAAAKERsoPQAACm8+AAAKJhEzF1gTMxEzETKOaT9i////ERdvPwAAChYx
NQJyawEAcCgKAAAGExwRHCwJERxvFgAACisFfhgAAAoTHQJyawEAcBEdERcoQAAACigJAAAGcyUA
AAoTHgJyqwEAcCgKAAAGKCYAAAoW/gETHxEfOQsDAAACchwFAHAoCgAABm8WAAAKEyARIBeNJgAA
ARM1ETUWHyydETVvJwAAChMhfhgAAAoTIgIoOQAACm9BAAAKb0IAAAoTNjikAgAAETZvQwAAChMj
fhgAAAoTIhYTJBEjb0QAAAoTJX4YAAAKEyYRIRM3FhM4K1IRNxE4mhMnESVvKAAACm8pAAAKEyUR
J28oAAAKbykAAAoTJhEmKBcAAAotLhElESZyQwIAcHJHAgBwbywAAAoXKC0AAAosBRcTJCsOETgX
WBM4ETgRN45pMqYRI29FAAAKEygRJCwTck8CAHATKHJPAgBwEyI4WwEAABEjb0YAAApyWgUAcG9H
AAAKLCQRI29GAAAKcloFAHBvSAAAChEjb0kAAApvFgAAChMiOB8BAAARI29GAAAKcnAFAHBvRwAA
CiwkESNvRgAACnJwBQBwb0gAAAoRI29JAAAKbxYAAAoTIjjoAAAAESNvRgAACnKMBQBwb0cAAAos
JBEjb0YAAApyjAUAcG9IAAAKESNvSQAACm8WAAAKEyI4sQAAABEjb0YAAApylgUAcG9HAAAKLCER
I29GAAAKcpYFAHBvSAAAChEjb0kAAApvFgAAChMiK30RI29GAAAKcqwFAHBvRwAACiwhESNvRgAA
CnKsBQBwb0gAAAoRI29JAAAKbxYAAAoTIitJESNvSgAACnK6BQBwKCAAAAotKBEjb0oAAApyzAUA
cCggAAAKLCMRI29FAAAKctYFAHAZb0sAAAoWMQ4RI29FAAAKKEwAAAoTIt4DJt4AER4djRsAAAET
ORE5FhEjb0QAAAofHh8ubzEAAAqiETkXcuoDAHCiETkYESNvSgAACh8KHyBvMQAACqIRORly2gUA
cKIRORoRIh8PHyBvMQAACqIRORty2gUAcKIRORwRKKIROShNAAAKbzMAAAom3jITKREeESNvRAAA
Ch8eHy5vMQAACnLiBQBwESlvNAAACnI8BABwKDUAAApvMwAACibeABE2b04AAAo6UP3//wJyIgYA
cBEebxYAAAooCQAABgIoOQAAChZvTwAACioAAEFkAAACAAAAUAAAALIAAAACAQAACgAAAAAAAAAA
AAAA0QEAAFoBAAArAwAALAAAACkAAAEAAAAA2QUAAFgBAAAxBwAAAwAAACkAAAEAAAAAPAUAAGkC
AAClBwAAMgAAACkAAAEbMAIAZwAAAAMAABEUChYLAig5AAAKbzoAAAoDb1AAAAoCKDkAAApvOgAA
ChIAb1EAAAoGA29SAAAKBG9TAAAK3gwGLAgGb1QAAAoXC9zeEyYCKDkAAApvOgAACm9VAAAK/hre
DQYsCQctBgZvVAAACtwqAAEoAAACACcADzYADAAAAAAAAAQAQEQAEykAAAECAAQAVVkADQAAAAAb
MAIAaAAAAAQAABEUChYLAig5AAAKbzoAAAoDb1YAAAoCKDkAAApvOgAAChIAb1EAAAoGA29SAAAK
b1cAAAoM3gwGLAgGb1QAAAoXC9zeEyYCKDkAAApvOgAACm9VAAAK/hreDQYsCQctBgZvVAAACtwI
KgEoAAACACcADzYADAAAAAAAAAQAQEQAEykAAAECAAQAVVkADQAAAAAeAihYAAAKKrQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAIBgAAI34AAHQGAABECQAA
I1N0cmluZ3MAAAAAuA8AAGgGAAAjVVMAIBYAABAAAAAjR1VJRAAAADAWAADcAgAAI0Jsb2IAAAAA
AAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAANwAAAAUAAAAGAAAACwAAAAQAAABYAAAAAgAAAA8A
AAAEAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAO
AD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAI0CcwIGALgCpgIGAM8CpgIGAOwCpgIGAAsDpgIGACQD
pgIGAD0DpgIGAFgDpgIGAHMDpgIGAIwDpgIGAMUDpQMGAOUDpQMGABYEAwQGADMEugAGADgEugAG
AFwEpgIKAIgEcgQKAKEEcgQGALYEpQMOANgEFAEGAAMFugAGACoFHgUGAE8FRQUSAGcFXAUGAHUF
RQUSAHwFXAUSAIYFXAUGANcFugAGAOsFugAGAAQGHgUGABIGugAGACQGugAKAHIGUwYKAHgGUwYG
AL4GugAGANQGugAGAOUGugAOAAEHFAEWAFoHOgcGAIwHugAWALEHOgcWAM0HOgcWAPAHOgcWACMI
OgcWAEAIOgcGAG8IRQUWAIAIOgcWALMIOgcWAMoIOgcAAAAAAQAAAAAAAQABAAAAEAAyADwABQAB
AAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAwAEQB/ARMAEQCsARcA
EQD2ATkABgY6AlIAVoBCAlUAVoBKAlUAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAA
AJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAA
kRjRBJQAAgC8IAAAAACGABoCGwACADApAAAAAIEAHwJHAAIAzCkAAAAAgQAtAk0ABABoKgAAAACG
GLwBGwAFAAAAAQBSAgAAAQBYAgAAAgBlAgAAAQBYAjkAvAFjAEEAvAFjAEkAvAFjAFEAvAFjAFkA
vAFjAGEAvAFjAGkAvAFjAHEAvAFjAHkAvAFjAIEAvAFjAIkAvAFoAJEAvAEbAJkAvAEbAAkAvAEb
AKEASgRtAKEAZQR0ACkAvAF5ALkAvAGFAMkAvAEbABEAvAEbANEAvAEbAAkA+gSYANkACgWcANkA
GAWhAOEAMwWkAOEAPAWpAOkAvAGvAPEAvAG1AAEBkgW7AAEBnwWYANkAqAWYANkAuQXBAAEBxQXH
AAEB0gXMABEB4wUbANkA/AXQACEBvAEbACkBGgbZANkAKQbeANkALwaYANkANwaYANkAPAblANkA
RAbqANkASwbwADkBhQb2ACkBjQb/ANkAlQYEAdkAoAYIAdkAqgYOAdkARAYUASEBswYbAUkByAaY
ANkARAYiAVEB3AYqAdkAKQYxAdkA+AY7ARkAEwdAAWEBbAdGAWkB+AY7AdkAggdMAXEBmAdSASEB
pAdWASEBlQYEAdkARAZgAWEBvQdmAXkB4gdsAYEBAghyAYkBnwWYAIkBDgiYAIkBMQh4AZEB+AZ+
AZEBTAiDAZkBVQiKAYkBXgiYANkAPAaPAaEBdAiXAdkARAacAakBjgjMAGEBlwhoAGkBpghjAGkB
vQj+AbEBTAgGArkB0wgNArEB3QgbAGkB5AgbAGkB6ghjALkB9ggZAhkAvAEbAAgAFABZAAgAGABe
ACkAkwCLAC4AGwCWAi4AIwCWAi4AYwC8Ai4ACwAlAi4AEwBtAi4AMwBtAi4AKwCWAi4AOwCcAi4A
QwCWAi4AWwCzAkMAawBeAEkAkwCLAGEAmwBeAIMAqwBeAIAAogESAh0CAgABAAMAAwAAAG8BLwAA
AO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAK0XA0kAAAAAAAB/AAAA
BAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAwAAAAAAAAAAAAAAAoA9QAA
AAAABAAAAAAAAAAAAAAAAQBcBQAAAAAMAAAAAAAAAAAAAAAKABsHAAAAAAAAAAABAAAAAAkAAAUA
BAAAAAA8TW9kdWxlPgBzdF9mOGM0ZDZhZGMyYWQ0NjNjYjkwZWE5YjFjOTM4OGI5My5kbGwAUmVz
b3VyY2VzAHN0X2Y4YzRkNmFkYzJhZDQ2M2NiOTBlYTliMWM5Mzg4YjkzLlByb3BlcnRpZXMAU2V0
dGluZ3MAU2NyaXB0TWFpbgBzdF9mOGM0ZDZhZGMyYWQ0NjNjYjkwZWE5YjFjOTM4OGI5MwBTY3Jp
cHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4A
U3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdl
dF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0
SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAFdyaXRlVmFyaWFibGUAUmVhZFZhcmlh
YmxlAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAHZhcmlhYmxlTmFtZQB2YXJpYWJsZVZh
bHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5
c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUA
QXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJs
eQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAVG9TdHJpbmcAU3RyaW5nAElzTnVsbE9yRW1wdHkARW1w
dHkAU3lzdGVtLlRleHQARW5jb2RpbmcAZ2V0X1VURjgAR2V0Qnl0ZXMAU3lzdGVtLklPAE1lbW9y
eVN0cmVhbQBTeXN0ZW0uWG1sAFhtbFRleHRSZWFkZXIAU3RyZWFtAFhtbFJlYWRlcgBYbWxOb2Rl
VHlwZQBnZXRfTm9kZVR5cGUAZ2V0X05hbWUAVG9Mb3dlckludmFyaWFudABvcF9FcXVhbGl0eQBH
ZXRBdHRyaWJ1dGUAUmVhZABJRGlzcG9zYWJsZQBEaXNwb3NlAFN0cmluZ0NvbXBhcmlzb24AQ29t
cGFyZQBTdHJpbmdCdWlsZGVyAENvbnZlcnQAVG9Cb29sZWFuAENoYXIAU3BsaXQAVG9Mb3dlcgBU
cmltAEluZGV4T2YAQ29uY2F0AFJlcGxhY2UAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25z
AFJlZ2V4AFJlZ2V4T3B0aW9ucwBJc01hdGNoAFRvSW50MzIAZ2V0X0xlbmd0aABTdWJzdHJpbmcA
UGFkUmlnaHQAQXBwZW5kTGluZQBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAQm9vbGVhbgBUcnlQYXJz
ZQBTdHJpbmdTcGxpdE9wdGlvbnMAQ29udGFpbnMAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBWYXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIAVHJpbVN0YXJ0AEVu
dmlyb25tZW50AGdldF9OZXdMaW5lAEFwcGVuZEZvcm1hdABDb25uZWN0aW9ucwBnZXRfQ29ubmVj
dGlvbnMAQ29ubmVjdGlvbkVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBDb25uZWN0aW9uTWFuYWdl
cgBnZXRfQ3VycmVudABnZXRfQ29ubmVjdGlvblN0cmluZwBEdHNQcm9wZXJ0aWVzAGdldF9Qcm9w
ZXJ0aWVzAER0c1Byb3BlcnR5AGdldF9JdGVtAEdldFZhbHVlAGdldF9DcmVhdGlvbk5hbWUAUGF0
aABHZXRGaWxlTmFtZQBEdHNFbnVtZXJhdG9yAE1vdmVOZXh0AHNldF9UYXNrUmVzdWx0AExvY2tG
b3JXcml0ZQBWYXJpYWJsZXMAR2V0VmFyaWFibGVzAFZhcmlhYmxlAHNldF9WYWx1ZQBVbmxvY2sA
UmVzZXQATG9ja0ZvclJlYWQAZ2V0X1ZhbHVlAHN0X2Y4YzRkNmFkYzJhZDQ2M2NiOTBlYTliMWM5
Mzg4YjkzLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFzAHQAXwBmADgAYwA0AGQA
NgBhAGQAYwAyAGEAZAA0ADYAMwBjAGIAOQAwAGUAYQA5AGIAMQBjADkAMwA4ADgAYgA5ADMALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACd2AGEAcgBTAFMASQBTAE8A
cABzAF8AVABhAHMAawBMAGkAcwB0AAArdgBhAHIAUwBTAEkAUwBPAHAAcwBfAFMAbwB1AHIAYwBl
AFQAeQBwAGUAAA9VAE4ASwBOAE8AVwBOAAAzdgBhAHIAUwBTAEkAUwBPAHAAcwBfAFAAYQByAGUA
bgB0AFMAbwB1AHIAYwBlAEkARAAAB3QAcwBrAAAhUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBl
AEkARAAABWkAZAAAB3QAeQBwAAADcAAAI1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAEkA
RAAAP1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBWAGEAcgBpAGEAYgBsAGUAVgBh
AGwAdQBlAHMAAEdVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ARABpAHMAYQBiAGwA
ZQBDAG8AbgBuAEwAbwBnAGcAaQBuAGcAADtVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABz
AF8ARgBpAGwAdABlAHIAZQBkAFYAYQByAHMAAAU6ADoAAA11AHMAZQByADoAOgAAAyoAAAdcAHcA
KgAACyoAKgAqACoAKgAAQ1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBNAGEAeABW
AGEAcgBDAGgAYQByAHMAVABvAEwAbwBnAACBSSAALgAuAC4APABWAEEATABVAEUAIABUAFIAVQBO
AEMAQQBUAEUARAAgAC0AIABDAGgAYQBuAGcAZQAgAHYAYQBsAHUAZQAgAG8AZgAgAFsAdgBhAHIA
UwBTAEkAUwBPAHAAcwBfAE0AYQB4AFYAYQByAEMAaABhAHIAcwBUAG8ATABvAGcAXQAgAHQAbwAg
AC0AMQAgAGYAcgBvAG0AIABjAG8AbgBmAGkAZwAgAGYAaQBsAGUAIABpAGYAIAB5AG8AdQAgAHcA
YQBuAHQAIAB0AG8AIABsAG8AZwAgAGYAdQBsAGwAIAB2AGEAbAB1AGUAIAAoAE4AbwB0ACAAcgBl
AGMAbwBtAG0AZQBuAGQAZQBkACAAZgBvAHIAIABwAGUAcgBmAG8AcgBtAGEAbgBjAGUAIAByAGUA
YQBzAG8AbgBzACkAPgABCS4ALgAuACAAAEcuAC4ALgAgAHsARQByAHIAbwByACAAcgBlAGEAZABp
AG4AZwAgAHYAYQByAGkAYQBiAGwAZQAgAHYAYQBsAHUAZQA6ACAAAAN9AABpVQBzAGUAcgA6ADoA
dgBhAHIAUwBTAEkAUwBPAHAAcwBfAEQAaQBzAGEAYgBsAGUAUABhAHIAYQBtAGUAdABlAHIASQBu
AGkAdABpAGEAbABWAGEAbAB1AGUATABvAGcAZwBpAG4AZwAAP1UAcwBlAHIAOgA6AHYAYQByAFMA
UwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAUABhAHIAYQBtAHMAABUkAFAAYQBjAGsAYQBn
AGUAOgA6AAAbewAwAH0ALgAuAC4AIAB7ADEAfQB7ADIAfQAAPVUAcwBlAHIAOgA6AHYAYQByAFMA
UwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAQwBvAG4AbgBzAAAVUwBlAHIAdgBlAHIATgBh
AG0AZQAAG1MAcQBsAFMAZQByAHYAZQByAE4AYQBtAGUAAAlIAG8AcwB0AAAVUwBlAHIAdgBlAHIA
SABvAHMAdAAADVMAZQByAHYAZQByAAARRgBMAEEAVABGAEkATABFAAAJRgBJAEwARQAAAy4AAAcg
ACAACQAAPy4ALgAuACAAewBFAHIAcgBvAHIAIAByAGUAYQBkAGkAbgBnACAAYwBvAG4AbgBlAGMA
dABpAG8AbgA6ACAAAENVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8AQwBvAG4AbgBl
AGMAdABpAG8AbgBWAGEAbAB1AGUAcwAAAAA/FFzMePnQRrCUQSd9l8b4AAi3elxWGTTgiQiJhF3N
gIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwF
IAIBDhwEIAEcDgIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkE
BwESFQUgAQERYQgBAAIAAAAAAAMAAAEDIAAOBAABAg4CBg4EAAAScQUgAR0FDgUgAQEdBQUgAQES
fQUgABGAhQUAAgIODgQgAQ4OAyAAAggAAwgODhGAjQQAAQIcBiABHQ4dAwQgAQgOBQACDg4OBSAC
Dg4OCAADAg4OEYChBAABCBwDIAAIBSACDggIBSACDggDBgADDg4ODgYgARKAkQ4HAAQODg4ODgYA
AgIOEAIJIAIdDh0DEYCtBCABAg4FIAASgLEFIAASgLUFIAEOHQMDAAAOCSAEEoCRDhwcHAUAAg4c
HAUgABKAvQUgABKAwQUgABKAxQUgABKAyQQgAQIcBiABEoDNHAQgARwcByACCA4RgI0EAAEODgUA
AQ4dDlsHOg4SeQISgJECDg4dDh0OHA4CDg4ODggCEoClAhwOHQ4SgJEODhwOHA4SgJECDh0ODhKA
xQIODg4OEoClEYCFHQMdAx0OCB0OCB0DHQ4IHQMdAxKAwR0OCB0OByABARASgNkGIAESgN0cBCAB
ARwGBwISgNkCAyAAHAcHAxKA2QIcRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0X2Y4YzRkNmFkYzJhZDQ2
M2NiOTBlYTliMWM5Mzg4YjkzAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAXEQAAAAAAAAAAAAAfkQAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAHBEAAAAAAAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACw
AwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAA0mtFwAAAQADSa0XPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
EAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAw
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAHMAdABfAGYAOABjADQA
ZAA2AGEAZABjADIAYQBkADQANgAzAGMAYgA5ADAAZQBhADkAYgAxAGMAOQAzADgAOABiADkAMwAA
AEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADAANgAxAC4AMQA4ADYA
OQAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAHMAdABfAGYAOABjADQAZAA2
AGEAZABjADIAYQBkADQANgAzAGMAYgA5ADAAZQBhADkAYgAxAGMAOQAzADgAOABiADkAMwAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAHMAdABfAGYAOABjADQAZAA2AGEAZABjADIAYQBkADQANgAzAGMAYgA5ADAAZQBhADkAYgAx
AGMAOQAzADgAOABiADkAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABzAHQAXwBmADgAYwA0AGQANgBhAGQAYwAyAGEAZAA0ADYAMwBjAGIAOQAwAGUAYQA5AGIAMQBj
ADkAMwA4ADgAYgA5ADMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADYAMAA2ADEALgAxADgANgA5ADEAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADYAMAA2ADEALgAxADgANgA5ADEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAkDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{DEB07BBF-2D41-4C7B-BF1E-F6A0647FD92B}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnPreExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnPreExecute @Scope='Package',@ExecutionID=?,@SourceID=?,@SourceName=?,@InteractiveMode=?,@UserName=?,@MachineName=?,@LogCustomValues=0,@LayoutXML=?,@TaskListXML=?,@DFLayoutXML=?,@Variables=?,@Connections=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::InteractiveMode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::UserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::MachineName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::varSSISOps_PkgLayout"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varSSISOps_TaskList"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::varSSISOps_DfLayout"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="9"
                SQLTask:DtsVariableName="User::varSSISOps_VariableValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="10"
                SQLTask:DtsVariableName="User::varSSISOps_ConnectionValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{99C6E25C-688D-4758-87DA-C5B0C41257B7}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnPreExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnPreExecute @Scope='Task',@ExecutionID=?,@SourceID=?,@ParentSourceID=?,@SourceName=?,@SourceType=?,@LogCustomValues=0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_ParentSourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::varSSISOps_SourceType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{32E5952E-37A3-4583-B18F-BEFDC61E504B\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{32E5952E-37A3-4583-B18F-BEFDC61E504B}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{32E5952E-37A3-4583-B18F-BEFDC61E504B}"
          DTS:To="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{6DCCEB51-CE4C-49B5-B7EE-CEB87B062913\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{6DCCEB51-CE4C-49B5-B7EE-CEB87B062913}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{6DCCEB51-CE4C-49B5-B7EE-CEB87B062913}"
          DTS:To="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnVariableValueChanged]"
      DTS:CreationName="OnVariableValueChanged"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{AADC244A-5497-45F3-BD19-D91E4AFA3ED8}"
      DTS:EventID="-2"
      DTS:EventName="OnVariableValueChanged"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{7A5228EA-3A7E-4725-9C95-379F3AF2520D}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{5D8F62F0-49A4-4FF3-846C-1B254C98AC50}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_CurValue">
          <DTS:VariableValue
            DTS:DataSubType="ManagedSerializable"
            DTS:DataType="13">
            <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
              <SOAP-ENV:Body>
                <xsd:anyType
                  id="ref-1"></xsd:anyType>
              </SOAP-ENV:Body>
            </SOAP-ENV:Envelope>
          </DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{C651D832-EAB7-4F89-88FA-5A90E63AB6A0}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to configure how many characters will be logged for each variable. Default variable length for logging is 4000 anything after that will be truncated. -1 = Log full variable value . There are 3 places where you have to set this value (OnPreExecute, OnPostExecute OnVariableValueChanged)."
          DTS:DTSID="{752BBA86-B847-44F5-996C-6CC3D3BC218F}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_MaxVarCharsToLog">
          <DTS:VariableValue
            DTS:DataType="3">4000</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:PropertyExpression
        DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{2B9CA939-C489-4EDE-84A4-6CDA5C88E71F}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="st_068353a8e8bc400bbb9af92580209692"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_068353a8e8bc400bbb9af92580209692")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_068353a8e8bc400bbb9af92580209692")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_068353a8e8bc400bbb9af92580209692.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{cf3bd53c-70c0-4ef0-9d76-f5c7dae2215b}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_068353a8e8bc400bbb9af92580209692</RootNamespace>
    <AssemblyName>st_068353a8e8bc400bbb9af92580209692</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_068353a8e8bc400bbb9af92580209692
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
			try {
                string var = ReadVariable("System::VariableName").ToString();
                string filterList = ReadVariable("User::varSSISOps_FilteredVars").ToString();
                string[] arrFilter = filterList.Split(",".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);

                            bool bSkip = false;
                            string comp = var;
                            string f = string.Empty;

                            foreach (string floop in arrFilter)
                            {
                                comp = comp.ToLower().Trim();
                                f = floop.ToLower().Trim();

                                if (string.IsNullOrEmpty(f))
                                    break;

                                if (comp.IndexOf("::") < 0)
                                    comp = "user::" + comp;

                                if (f.IndexOf("::") < 0)
                                    f = "user::" + f;

                                if (System.Text.RegularExpressions.Regex.IsMatch(comp, f.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                                {
                                    bSkip = true;
                                    break;
                                }
                            }

                if (bSkip){
                    WriteVariable("User::varSSISOps_CurValue", "*****");
                    return;
                }
				object val = ReadVariable("System::VariableValue");
				if ((!DBNull.Value.Equals(val)) && val != null) {
					string s = val.ToString();
                    int iMaxCharsToLog = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"));
                    bool bLogFullValue = (iMaxCharsToLog<=0 ? true : false);
                    if (bLogFullValue || s.Length <= iMaxCharsToLog){
                        WriteVariable("User::varSSISOps_CurValue", s);
                    }else{
                        WriteVariable("User::varSSISOps_CurValue", s.Substring(0, iMaxCharsToLog) + " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 from config file if you want to log full value (Not recommended for performance reason)>");
                    }
				} else {
					WriteVariable("User::varSSISOps_CurValue", "");
				}
			} catch (Exception ex) {
				Dts.Events.FireWarning(0, "VariableValueChanged", "Can not log value for [" + ReadVariable("System::VariableName").ToString() + "]", "", 0);
			}


            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_068353a8e8bc400bbb9af92580209692</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_068353a8e8bc400bbb9af92580209692</msb:DisplayName>
		<msb:ProjectId>{58CA04A1-2892-4D23-BAFE-FC13189E8069}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_068353a8e8bc400bbb9af92580209692.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_068353a8e8bc400bbb9af92580209692.Properties.Settings.get_Default():st_068353a8e8bc400bbb9af92580209692.Properties.Sett" +
    "ings")]

namespace st_068353a8e8bc400bbb9af92580209692.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_068353a8e8bc400bbb9af92580209692.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_068353a8e8bc400bbb9af92580209692.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_068353a8e8bc400bbb9af92580209692.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_068353a8e8bc400bbb9af92580209692.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_068353a8e8bc400bbb9af92580209692.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_068353a8e8bc400bbb9af92580209692.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAI/ZpFcAAAAAAAAAAOAAAiELAQsAABgAAAAIAAAAAAAAzjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIA2AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
NgAAAAAAAEgAAAACAAUAuCQAAMgRAAABAAAAAAAAAAAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgDaAQAAAgAAEQJycwAAcCgKAAAGbxYAAAoKAnKdAABwKAoAAAZv
FgAACgsHctkAAHBvFwAAChdvGAAACgwWDQYTBH4ZAAAKEwUIEwsWEww4iwAAABELEQyaEwYRBG8a
AAAKbxsAAAoTBBEGbxoAAApvGwAAChMFEQUoHAAACi1qEQRy3QAAcG8dAAAKFi8OcuMAAHARBCge
AAAKEwQRBXLdAABwbx0AAAoWLw5y4wAAcBEFKB4AAAoTBREEEQVy8QAAcHL1AABwbx8AAAoXKCAA
AAosBBcNKxERDBdYEwwRDBELjmk/av///wksFQJy/QAAcHIxAQBwKAkAAAbd4AAAAAJyPQEAcCgK
AAAGEwd+IQAAChEHbyIAAAotaREHLGURB28WAAAKEwgCcmkBAHAoCgAABigjAAAKEwkRCRYxAxYr
ARcTChEKLQsRCG8kAAAKEQkwDwJy/QAAcBEIKAkAAAYrMQJy/QAAcBEIFhEJbyUAAApyrQEAcCge
AAAKKAkAAAYrEAJy/QAAcHL2AgBwKAkAAAbePiYCKCYAAApvJwAAChZy+AIAcHIiAwBwAnJzAABw
KAoAAAZvFgAACnJSAwBwKCgAAApy9gIAcBZvKQAACt4AAigmAAAKFm8qAAAKKgAAQRwAAAAAAAAA
AAAAjwEAAI8BAAA+AAAAIwAAARswAgBnAAAAAwAAERQKFgsCKCYAAApvKwAACgNvLAAACgIoJgAA
Cm8rAAAKEgBvLQAACgYDby4AAAoEby8AAAreDAYsCAZvMAAAChcL3N4TJgIoJgAACm8rAAAKbzEA
AAr+Gt4NBiwJBy0GBm8wAAAK3CoAASgAAAIAJwAPNgAMAAAAAAAABABARAATIwAAAQIABABVWQAN
AAAAABswAgBoAAAABAAAERQKFgsCKCYAAApvKwAACgNvMgAACgIoJgAACm8rAAAKEgBvLQAACgYD
by4AAApvMwAACgzeDAYsCAZvMAAAChcL3N4TJgIoJgAACm8rAAAKbzEAAAr+Gt4NBiwJBy0GBm8w
AAAK3AgqASgAAAIAJwAPNgAMAAAAAAAABABARAATIwAAAQIABABVWQANAAAAAB4CKDQAAAoqtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAALgEAAAjfgAAJAUA
AEgHAAAjU3RyaW5ncwAAAABsDAAAWAMAACNVUwDEDwAAEAAAACNHVUlEAAAA1A8AAPQBAAAjQmxv
YgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAmAAAABQAAAAYAAAALAAAABAAAADQAAAAC
AAAADwAAAAQAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA
3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAjQJzAgYAuAKmAgYAzwKmAgYA7AKmAgYACwOm
AgYAJAOmAgYAPQOmAgYAWAOmAgYAcwOmAgYAjAOmAgYAxQOlAwYA5QOlAwYAFgQDBAYAMwS6AAYA
OAS6AAYAXASmAgoAiARyBAoAoQRyBAYAtgSlAw4A2AQUAQYAAwW6AAYAFgW6AAoAhgVnBQoAjAVn
BQYAoQW6AAYAtQW6AA4A2gUUAQ4A9AUUAQYALga6ABIAdwZXBhIArAZXBhIAwwZXBgAAAAABAAAA
AAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAAR
AAQADAARAH8BEwARAKwBFwARAPYBOQAGBjoCUgBWgEICVQBWgEoCVQBQIAAAAACDGLwBGwABAFgg
AAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAA
AAAAhhi8ARsAAgCnIAAAAACRGNEElAACALwgAAAAAIYAGgIbAAIAwCIAAAAAgQAfAkcAAgBcIwAA
AACBAC0CTQAEAPgjAAAAAIYYvAEbAAUAAAABAFICAAABAFgCAAACAGUCAAABAFgCOQC8AWMAQQC8
AWMASQC8AWMAUQC8AWMAWQC8AWMAYQC8AWMAaQC8AWMAcQC8AWMAeQC8AWMAgQC8AWMAiQC8AWgA
kQC8ARsAmQC8ARsACQC8ARsAoQBKBG0AoQBlBHQAKQC8AXkAuQC8AYUAyQC8ARsAEQC8ARsA0QC8
ARsACQD6BJgA2QAKBZwA2QApBaEA2QAvBaoA2QA1BZgA2QA9BZgA2QBCBa0A2QBQBbIA2QBYBbcA
2QBfBb0A6QCZBcMA+QCoBcsACQCuBc8AAQG9BdQA2QDFBdkA2QDQBd0AGQDsBeMACQEIBukA2QBY
Be8AEQETBvYACQEfBmgACQGJBhEBIQGfBmMAIQG2BhcBKQHMBh8BMQHVBiYBKQHfBhsAIQHmBhsA
IQHsBmMAMQH4BjIBGQC8ARsACAAUAFkACAAYAF4AKQCTAIsALgAbAK8BLgAjAK8BLgBjANUBLgAL
AD4BLgATAIYBLgAzAIYBLgArAK8BLgA7ALUBLgBDAK8BLgBbAMwBQwBrAF4ASQCTAIsAYQCbAF4A
gwCrAF4AgAD/ACsBNgECAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAF
AAIABQAHAASAAAABAAAArRcHSQAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAA
AAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAKADgGAAAAAAAAAAAB
AAAAAgcAAAUABAAAAAAAADxNb2R1bGU+AHN0XzA2ODM1M2E4ZThiYzQwMGJiYjlhZjkyNTgwMjA5
NjkyLmRsbABSZXNvdXJjZXMAc3RfMDY4MzUzYThlOGJjNDAwYmJiOWFmOTI1ODAyMDk2OTIuUHJv
cGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAHN0XzA2ODM1M2E4ZThiYzQwMGJiYjlhZjkyNTgw
MjA5NjkyAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmln
dXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlw
dFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBy
ZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1
cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0
dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AV3JpdGVWYXJpYWJs
ZQBSZWFkVmFyaWFibGUAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAdmFyaWFibGVOYW1l
AHZhcmlhYmxlVmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVy
ZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkA
Z2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9y
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBUb1N0cmluZwBTdHJpbmcAVG9DaGFy
QXJyYXkAU3RyaW5nU3BsaXRPcHRpb25zAFNwbGl0AEVtcHR5AFRvTG93ZXIAVHJpbQBJc051bGxP
ckVtcHR5AEluZGV4T2YAQ29uY2F0AFJlcGxhY2UAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Np
b25zAFJlZ2V4AFJlZ2V4T3B0aW9ucwBJc01hdGNoAERCTnVsbABWYWx1ZQBFcXVhbHMAQ29udmVy
dABUb0ludDMyAGdldF9MZW5ndGgAU3Vic3RyaW5nAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMA
RXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfRXZlbnRzAEZpcmVXYXJuaW5nAHNldF9UYXNrUmVzdWx0
AEV4Y2VwdGlvbgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBWYXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIA
TG9ja0ZvcldyaXRlAFZhcmlhYmxlcwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0Ac2V0
X1ZhbHVlAFVubG9jawBSZXNldABMb2NrRm9yUmVhZABnZXRfVmFsdWUAc3RfMDY4MzUzYThlOGJj
NDAwYmJiOWFmOTI1ODAyMDk2OTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABx
cwB0AF8AMAA2ADgAMwA1ADMAYQA4AGUAOABiAGMANAAwADAAYgBiAGIAOQBhAGYAOQAyADUAOAAw
ADIAMAA5ADYAOQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAp
UwB5AHMAdABlAG0AOgA6AFYAYQByAGkAYQBiAGwAZQBOAGEAbQBlAAA7VQBzAGUAcgA6ADoAdgBh
AHIAUwBTAEkAUwBPAHAAcwBfAEYAaQBsAHQAZQByAGUAZABWAGEAcgBzAAADLAAABToAOgAADXUA
cwBlAHIAOgA6AAADKgAAB1wAdwAqAAAzVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBf
AEMAdQByAFYAYQBsAHUAZQAACyoAKgAqACoAKgAAK1MAeQBzAHQAZQBtADoAOgBWAGEAcgBpAGEA
YgBsAGUAVgBhAGwAdQBlAABDVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAE0AYQB4
AFYAYQByAEMAaABhAHIAcwBUAG8ATABvAGcAAIFHIAAuAC4ALgA8AFYAQQBMAFUARQAgAFQAUgBV
AE4AQwBBAFQARQBEACAALQAgAEMAaABhAG4AZwBlACAAdgBhAGwAdQBlACAAbwBmACAAWwB2AGEA
cgBTAFMASQBTAE8AcABzAF8ATQBhAHgAVgBhAHIAQwBoAGEAcgBzAFQAbwBMAG8AZwBdACAAdABv
ACAALQAxACAAZgByAG8AbQAgAGMAbwBuAGYAaQBnACAAZgBpAGwAZQAgAGkAZgAgAHkAbwB1ACAA
dwBhAG4AdAAgAHQAbwAgAGwAbwBnACAAZgB1AGwAbAAgAHYAYQBsAHUAZQAgACgATgBvAHQAIABy
AGUAYwBvAG0AbQBlAG4AZABlAGQAIABmAG8AcgAgAHAAZQByAGYAbwByAG0AYQBuAGMAZQAgAHIA
ZQBhAHMAbwBuACkAPgABAQApVgBhAHIAaQBhAGIAbABlAFYAYQBsAHUAZQBDAGgAYQBuAGcAZQBk
AAAvQwBhAG4AIABuAG8AdAAgAGwAbwBnACAAdgBhAGwAdQBlACAAZgBvAHIAIABbAAADXQAAAADc
3DnL3jADR6DiCySTGpD3AAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkF
AAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwFIAIBDhwEIAEcDgIGCAMGERQEAAAAAAQBAAAA
BCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEDIAAO
BCAAHQMIIAIdDh0DEXECBg4EAAECDgQgAQgOBQACDg4OBSACDg4OBwADAg4OEXkDBhJ9BCABAhwE
AAEIHAMgAAgFIAIOCAgFIAASgIUFIAASgIkGAAMODg4OCCAFAQgODg4IEQcNDg4dDgIODg4cDggC
HQ4IBSAAEoCRByABARASgJUGIAESgJkcBCABARwGBwISgJUCAyAAHAcHAxKAlQIcRwEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1l
d29yayA0KAEAI3N0XzA2ODM1M2E4ZThiYzQwMGJiYjlhZjkyNTgwMjA5NjkyAAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwGoNgAAAAAAAAAAAAC+NgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsDYAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAdJrRcAAAEAB0mtFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABzAHQAXwAw
ADYAOAAzADUAMwBhADgAZQA4AGIAYwA0ADAAMABiAGIAYgA5AGEAZgA5ADIANQA4ADAAMgAwADkA
NgA5ADIAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADYAMQAu
ADEAOAA2ADkANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwAwADYA
OAAzADUAMwBhADgAZQA4AGIAYwA0ADAAMABiAGIAYgA5AGEAZgA5ADIANQA4ADAAMgAwADkANgA5
ADIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABzAHQAXwAwADYAOAAzADUAMwBhADgAZQA4AGIAYwA0ADAAMABiAGIAYgA5AGEA
ZgA5ADIANQA4ADAAMgAwADkANgA5ADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAcwB0AF8AMAA2ADgAMwA1ADMAYQA4AGUAOABiAGMANAAwADAAYgBiAGIAOQBhAGYA
OQAyADUAOAAwADIAMAA5ADYAOQAyAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA2ADAANgAxAC4AMQA4ADYAOQA1AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAANgAxAC4AMQA4ADYAOQA1AAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{F28B8FF8-E608-43DC-8688-D49FD51EF54D}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec usp_SSISOps_Audit_OnVariableValueChanged @ExecutionID=?,@SourceID=?,@VariableName=?,@VariableValue=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::VariableName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_CurValue"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnVariableValueChanged].PrecedenceConstraints[{5824B184-5A91-44D5-A2D1-6F5939451BB2\}]"
          DTS:CreationName=""
          DTS:DTSID="{5824B184-5A91-44D5-A2D1-6F5939451BB2}"
          DTS:From="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{5824B184-5A91-44D5-A2D1-6F5939451BB2}"
          DTS:To="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnWarning]"
      DTS:CreationName="OnWarning"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{834B8022-5AE0-4E14-8DF6-A39FAEEFF7A3}"
      DTS:EventID="6815859"
      DTS:EventName="OnWarning"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{0C677668-DDCE-430A-AAC5-6D98B1825746}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{D1C29FA5-B561-4D72-A976-D15FCCC92E87}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{6907DE8A-B1AE-4622-9F75-208E5E7C4949}</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{0F957BD5-82D7-4AEE-88C9-2DA8832250B4}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnWarning_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_cccb17dee5c6422fa93cbcf79ff0d630"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_cccb17dee5c6422fa93cbcf79ff0d630")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_cccb17dee5c6422fa93cbcf79ff0d630")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_cccb17dee5c6422fa93cbcf79ff0d630
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_cccb17dee5c6422fa93cbcf79ff0d630.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{63c07a4a-acb6-4e49-aa60-97aac6fe6ad6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_cccb17dee5c6422fa93cbcf79ff0d630</RootNamespace>
    <AssemblyName>st_cccb17dee5c6422fa93cbcf79ff0d630</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_cccb17dee5c6422fa93cbcf79ff0d630</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_cccb17dee5c6422fa93cbcf79ff0d630</msb:DisplayName>
		<msb:ProjectId>{C84CFB25-EC8F-4582-98DB-2281128EC0A1}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_cccb17dee5c6422fa93cbcf79ff0d630.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cccb17dee5c6422fa93cbcf79ff0d630.Properties.Settings.get_Default():st_cccb17dee5c6422fa93cbcf79ff0d630.Properties.Sett" +
    "ings")]

namespace st_cccb17dee5c6422fa93cbcf79ff0d630.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cccb17dee5c6422fa93cbcf79ff0d630.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cccb17dee5c6422fa93cbcf79ff0d630.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cccb17dee5c6422fa93cbcf79ff0d630.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_cccb17dee5c6422fa93cbcf79ff0d630.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_cccb17dee5c6422fa93cbcf79ff0d630.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_cccb17dee5c6422fa93cbcf79ff0d630.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAITZpFcAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA3i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIgvAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
LwAAAAAAAEgAAAACAAUAyCIAAMAMAAABAAAAAAAAABAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqNgIoFgAAChZvFwAACioAAAAbMAIAZwAAAAIAABEUChYLAigWAAAKbxgA
AAoDbxkAAAoCKBYAAApvGAAAChIAbxoAAAoGA28bAAAKBG8cAAAK3gwGLAgGbx0AAAoXC9zeEyYC
KBYAAApvGAAACm8eAAAK/hreDQYsCQctBgZvHQAACtwqAAEoAAACACcADzYADAAAAAAAAAQAQEQA
Ex8AAAECAAQAVVkADQAAAAAbMAIAaAAAAAMAABEUChYLAigWAAAKbxgAAAoDbx8AAAoCKBYAAApv
GAAAChIAbxoAAAoGA28bAAAKbyAAAAoM3gwGLAgGbx0AAAoXC9zeEyYCKBYAAApvGAAACm8eAAAK
/hreDQYsCQctBgZvHQAACtwIKgEoAAACACcADzYADAAAAAAAAAQAQEQAEx8AAAECAAQAVVkADQAA
AAAeAighAAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAAGAQAACN+AACEBAAAPAYAACNTdHJpbmdzAAAAAMAKAAB0AAAAI1VTADQLAAAQAAAAI0dV
SUQAAABECwAAfAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAAB8AAAAFAAAA
BgAAAAsAAAAEAAAAIQAAAAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAA
AAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCNAnMCBgC4AqYC
BgDPAqYCBgDsAqYCBgALA6YCBgAkA6YCBgA9A6YCBgBYA6YCBgBzA6YCBgCMA6YCBgDFA6UDBgDl
A6UDBgAWBAMEBgAzBLoABgA4BLoABgBcBKYCCgCIBHIECgChBHIEBgC2BKUDDgDYBBQBDgD6BBQB
EgBiBUIFEgCXBUIFEgCuBUIFBgDXBboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABr
ADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAMABEAfwETABEArAEXABEA9gE5AAYG
OgJSAFaAQgJVAFaASgJVAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY0QSUAAIA
uyAAAAAAhgAaAhsAAgDMIAAAAACBAB8CRwACAGghAAAAAIEALQJNAAQABCIAAAAAhhi8ARsABQAA
AAEAUgIAAAEAWAIAAAIAZQIAAAEAWAI5ALwBYwBBALwBYwBJALwBYwBRALwBYwBZALwBYwBhALwB
YwBpALwBYwBxALwBYwB5ALwBYwCBALwBYwCJALwBaACRALwBGwCZALwBGwAJALwBGwChAEoEbQCh
AGUEdAApALwBeQC5ALwBhQDJALwBGwARALwBGwDRALwBGwAZAAwFmADZABQFaADZAHQFnQDhAIoF
YwDhAKEFogDpALcFqQDxAMAFrwDpAMoFGwDhANEFGwDhAOEFYwDxAO0FugAZALwBGwAIABQAWQAI
ABgAXgApAJMAiwAuABsANgEuACMANgEuAGMAXAEuAAsAxQAuABMADQEuADMADQEuACsANgEuADsA
PAEuAEMANgEuAFsAUwFDAGsAXgBJAJMAiwBhAJsAXgCDAKsAXgCAALQAvgACAAEAAwADAAAAbwEv
AAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAArRcCSQAAAAAAAH8A
AAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1
AAAAAAAMAAAAAAAAAAAAAAAKACMFAAAAAAAAAAABAAAA9wUAAAUABAAAAAA8TW9kdWxlPgBzdF9j
Y2NiMTdkZWU1YzY0MjJmYTkzY2JjZjc5ZmYwZDYzMC5kbGwAUmVzb3VyY2VzAHN0X2NjY2IxN2Rl
ZTVjNjQyMmZhOTNjYmNmNzlmZjBkNjMwLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBz
dF9jY2NiMTdkZWU1YzY0MjJmYTkzY2JjZjc5ZmYwZDYzMABTY3JpcHRSZXN1bHRzAG1zY29ybGli
AFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVt
LlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRp
b24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1
bHQARGVmYXVsdABNYWluAFdyaXRlVmFyaWFibGUAUmVhZFZhcmlhYmxlAHZhbHVlX18AU3VjY2Vz
cwBGYWlsdXJlAHZhbHVlAHZhcmlhYmxlTmFtZQB2YXJpYWJsZVZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25v
c3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBzZXRfVGFza1Jlc3VsdABNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJp
YWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIATG9ja0ZvcldyaXRlAFZhcmlhYmxl
cwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0Ac2V0X1ZhbHVlAFVubG9jawBSZXNldABF
eGNlcHRpb24ATG9ja0ZvclJlYWQAZ2V0X1ZhbHVlAHN0X2NjY2IxN2RlZTVjNjQyMmZhOTNjYmNm
NzlmZjBkNjMwLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxcwB0AF8AYwBjAGMA
YgAxADcAZABlAGUANQBjADYANAAyADIAZgBhADkAMwBjAGIAYwBmADcAOQBmAGYAMABkADYAMwAw
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAFxBEHMxgvEe9DkmK
G8JrOAAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUE
CAASGQMGEgwEAAASDAQIABIMBSACAQ4cBCABHA4CBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgG
AAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQYgAQEQ
EnUFIAESeRwEIAEBHAUHAhJ1AgMgABwGBwMSdQIcRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0X2NjY2Ix
N2RlZTVjNjQyMmZhOTNjYmNmNzlmZjBkNjMwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAsC8AAAAAAAAAAAAAzi8A
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAvAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQACSa0XAAABAAJJrRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcwB0
AF8AYwBjAGMAYgAxADcAZABlAGUANQBjADYANAAyADIAZgBhADkAMwBjAGIAYwBmADcAOQBmAGYA
MABkADYAMwAwAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAA2
ADEALgAxADgANgA5ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8A
YwBjAGMAYgAxADcAZABlAGUANQBjADYANAAyADIAZgBhADkAMwBjAGIAYwBmADcAOQBmAGYAMABk
ADYAMwAwAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAcwB0AF8AYwBjAGMAYgAxADcAZABlAGUANQBjADYANAAyADIAZgBhADkA
MwBjAGIAYwBmADcAOQBmAGYAMABkADYAMwAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAHMAdABfAGMAYwBjAGIAMQA3AGQAZQBlADUAYwA2ADQAMgAyAGYAYQA5ADMA
YwBiAGMAZgA3ADkAZgBmADAAZAA2ADMAMAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA2ADkAMAAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADYAMQAuADEAOAA2ADkAMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{8A2CE9AA-A210-46FD-92D3-9F4EA06269E4}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnWarning"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnAlert @Scope='Package',@EventType='W',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Description="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{A7C5BB9C-381D-4E03-8091-F528243E2B46}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnWarning"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9823FB81-5411-49E8-80ED-FBA0FD6100FB}"
              SQLTask:SqlStatementSource="exec dbo.usp_SSISOps_Audit_OnAlert @Scope='Task',@EventType='W',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsNFObj_UpdateAlertList"
          DTS:CreationName="SSIS.ReplacementTask"
          DTS:Disabled="True"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{8BE6BF32-D2F8-4F7B-B7F7-2CB398BB285E}"
          DTS:ExecutableType="SSIS.ReplacementTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_UpdateAlertList">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::paramSSISOpsNF_OnWarning_Disable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_c2b4e37b7fb84bfba3bd8c65a7de1be2"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_c2b4e37b7fb84bfba3bd8c65a7de1be2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("st_c2b4e37b7fb84bfba3bd8c65a7de1be2")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_c2b4e37b7fb84bfba3bd8c65a7de1be2.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c3496dd0-8c6c-479d-aaf2-7f00b36de715}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_c2b4e37b7fb84bfba3bd8c65a7de1be2</RootNamespace>
    <AssemblyName>st_c2b4e37b7fb84bfba3bd8c65a7de1be2</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
Copyright © 2014 Pragmatic Works Inc.
#####################################################################################################################
LEGAL NOTICE
#####################################################################################################################
THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
##################################################################################################################### 
*/
#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

using System.Net;
using System.Net.Mail;
using System.Collections;


#endregion

namespace st_c2b4e37b7fb84bfba3bd8c65a7de1be2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            UpdateAlertList();
            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #endregion

        private const string NotificationFrameworkAlertListVariableName = "User::varSSISOpsNF_AlertList";
        private const string NotificationFrameworkAlertListAllVariableName = "User::varSSISOpsNF_AlertList_All";
        private const string NotificationFrameworkCounter = "User::varSSISOpsNF_Notification_Counter";
        private const string NotificationFrameworkSubComponentName = "BI xPress Notification Framework Send Alert";

        private void UpdateAlertList()
        {
            System.Collections.Hashtable oRuntimeSettings = GetRuntimeSettings();

            string sFilteredAlerts = "|" + oRuntimeSettings["FILTERED_ALERTS"].ToString() + "|";

            string errorCodeValue = ReadVariable("System::ErrorCode").ToString();

            if (sFilteredAlerts.IndexOf("|" + errorCodeValue.ToString() + "|") >= 0)
                return; // Filter This

            string errorDescription = ReadVariable("System::ErrorDescription").ToString();
            string sourceName = ReadVariable("System::SourceName").ToString();
            string sourceId = ReadVariable("System::SourceID").ToString();

            bool isErrorScope = false;

            try
            {
                if (Dts.VariableDispenser.Contains("System::Cancel"))
                    isErrorScope = true;
                else
                    isErrorScope = false;
            }
            catch (Exception)
            {
                isErrorScope = false;
            }

            AlertType alertType = isErrorScope ? AlertType.ErrorAlert : AlertType.WarningAlert;

            int errorCode;

            if (string.IsNullOrEmpty(errorCodeValue) || !int.TryParse(errorCodeValue, out errorCode))
                errorCode = 0;

            AddAlertInfo(errorDescription, errorCode, sourceName, sourceId, alertType);
        }

        private void AddAlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
        {
            if (string.IsNullOrEmpty(alertDescription))
                alertDescription = "<NO ALERT DESCRIPTION GIVEN>";

            if (string.IsNullOrEmpty(sourceName))
                sourceName = "<NO ALERT SOURCE NAME GIVEN>";

            System.Text.StringBuilder alertListBuilder = new System.Text.StringBuilder();
            System.Text.StringBuilder alertListAllBuilder = new System.Text.StringBuilder();

            AlertInfo alertInfo = new AlertInfo(alertDescription, alertCode, sourceName, sourceId, alertType);

            System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(AlertInfo), new Type[] { typeof(AlertType) });

            // Build a flat list of XML AlertInfo elements that don't have to be validated each time we add new node(s).  This will save on processing time but will increase code complexity in the OnPostExecute event handler.
            using (System.IO.StringWriter stringWriter = new System.IO.StringWriter())
            {
                xmlSerializer.Serialize(stringWriter, alertInfo);

                System.Xml.XmlDocument alertInfoDocument = new System.Xml.XmlDocument();

                alertInfoDocument.LoadXml(stringWriter.GetStringBuilder().ToString());

                foreach (System.Xml.XmlNode documentNode in alertInfoDocument.ChildNodes)
                {
                    if (documentNode is System.Xml.XmlDeclaration || documentNode is System.Xml.XmlComment || documentNode is System.Xml.XmlAttribute || string.IsNullOrEmpty(documentNode.OuterXml))
                        continue;

                    string outerXml = documentNode.OuterXml;

                    outerXml = outerXml.Replace("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"", string.Empty).Replace("xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", string.Empty);

                    alertListBuilder.Append(outerXml);
                    alertListAllBuilder.Append(outerXml);
                }
            }

            string updatedAlertList = ReadVariable(NotificationFrameworkAlertListVariableName) as string;
            string existingAlertList;

            if (!string.IsNullOrEmpty(updatedAlertList))
                existingAlertList = updatedAlertList + alertListBuilder.ToString();
            else
                existingAlertList = alertListBuilder.ToString();

            WriteVariable(NotificationFrameworkAlertListVariableName, existingAlertList);

            string updatedAlertListAll = ReadVariable(NotificationFrameworkAlertListAllVariableName) as string;
            string existingAlertListAll;

            if (!string.IsNullOrEmpty(updatedAlertListAll))
                existingAlertListAll = updatedAlertListAll + alertListAllBuilder.ToString();
            else
                existingAlertListAll = alertListAllBuilder.ToString();
            
            WriteVariable(NotificationFrameworkAlertListAllVariableName, existingAlertListAll);
        }
        private void SetSetting(string SettingName, object Value, System.Collections.Hashtable runtimeSettings)
        {
            SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (!runtimeSettings.ContainsKey(SettingName))
                throw new Exception(SettingName + " setting doesn't exist in runtime setting list.");

            runtimeSettings[SettingName] = Value;
        }

        private object GetSetting(string settingName, System.Collections.Hashtable runtimeSettings)
        {
            settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (runtimeSettings.ContainsKey(settingName))
                return runtimeSettings[settingName];

            // If key not found then set default 
            switch (settingName)
            {
                case "MAX_NOTIFICATIONS":
                    return 1;
                case "ENABLE_ROWCOUNT_THRESHOLD":
                    return false;
                case "ENABLE_TIME_THRESHOLD":
                    return false;
                case "PRIORITY_MODE":
                    //// DELAYED (After Package) or URGENT (After Task) 
                    return "URGENT";
                case "EMAIL_FORMAT":
                    //// TEXT or HTML 
                    return "TEXT";
                case "SMTP_PORT":
                    //// Default 25 
                    return 25;
                case "SMTP_USESSL":
                    //// Default False
                    return false;
                case "SMTP_UID":
                    return "";
                case "SMTP_PWD":
                    return "";
                case "SMS_EMAILLIST":
                    ////Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                    return "";
                case "FILTERED_ALERTS":
                    ////Must be pipe seperated e.g. -2344556|-11223445 .... 
                    return "";
                case "NOTIFY_ONERROR":
                    return true;
                case "NOTIFY_ONWARNING":
                    return false;
                case "NOTIFY_ONSUCCESS":
                    return false;
                case "NOTIFY_ONCOMPLETE":
                    return false;
                case "SMS_MAXLENGTH":
                    return 160;
                case "NF_CHECK":
                    return "";
                case "CC_EMAILLIST":
                    return "";
                case "BCC_EMAILLIST":
                    return "";
                case "NOTIFY_USING_EMAIL":
                    return true;
                case "NOTIFY_USING_SMS":
                    return true;
                case "NOTIFY_USING_EVENTLOG":
                    return false;
                case "NOTIFY_USING_LOGFILE":
                    return false;
                case "LOG_FOLDER_PATH":
                    return "C:\\SSIS\\Log";
                case "DELETE_LOG_OLDER_THAN_DAYS":
                    return 5;
                case "USE_CUSTOM_EMAIL_TEMPLATE":
                    return false;
                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                    return "C:\\SSIS\\Config\\NF_EmailTemplate.htm";
                default:
                    return null;
            }
        }

        [Serializable]
        public enum AlertType
        {
            ErrorAlert = 1,
            WarningAlert = 2,
            TimeThresholdAlert = 3,
            RowCountThresholdAlert = 4
        }

        // NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
        // In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
        public System.Collections.Hashtable GetRuntimeSettings()
        {
            object otherConfigSettingsVariableValue = ReadVariable("User::varSSISOpsNF_OtherConfigSettings");
            string otherConfigSettings = otherConfigSettingsVariableValue != null ? otherConfigSettingsVariableValue.ToString() : null;

            System.Collections.Hashtable runtimeSettings = new System.Collections.Hashtable();

            // Set Default values
            runtimeSettings.Add("MAX_NOTIFICATIONS", 1);
            runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", false);
            runtimeSettings.Add("ENABLE_TIME_THRESHOLD", false);
            runtimeSettings.Add("PRIORITY_MODE", "DELAYED");
            runtimeSettings.Add("EMAIL_FORMAT", "HTML");
            runtimeSettings.Add("SMTP_PORT", 25);
            runtimeSettings.Add("SMTP_USESSL", false);
            runtimeSettings.Add("SMTP_UID", string.Empty);
            runtimeSettings.Add("SMTP_PWD", string.Empty);
            runtimeSettings.Add("SMS_EMAILLIST", string.Empty);
            runtimeSettings.Add("FILTERED_ALERTS", string.Empty);
            runtimeSettings.Add("NOTIFY_ONERROR", true);
            runtimeSettings.Add("NOTIFY_ONWARNING", false);
            runtimeSettings.Add("NOTIFY_ONSUCCESS", false);
            runtimeSettings.Add("NOTIFY_ONCOMPLETE", false);
            runtimeSettings.Add("SMS_MAXLENGTH", 160);
            runtimeSettings.Add("CC_EMAILLIST", string.Empty);
            runtimeSettings.Add("BCC_EMAILLIST", string.Empty);
            runtimeSettings.Add("NOTIFY_USING_EMAIL", true);
            runtimeSettings.Add("NOTIFY_USING_SMS", true);
            runtimeSettings.Add("NOTIFY_USING_EVENTLOG", false);
            runtimeSettings.Add("NOTIFY_USING_LOGFILE", false);
            runtimeSettings.Add("LOG_FOLDER_PATH", "C:\\SSIS\\Log");
            runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5);
            runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", false);
            runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\\SSIS\\Config\\NF_EmailTemplate.htm");

            if (!string.IsNullOrEmpty(otherConfigSettings))
            {
                // Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

                const string PAIR_SEP = ";";
                const string NAMEVAL_SEP = "=";

                string[] arrNameValue = otherConfigSettings.Split(PAIR_SEP.ToCharArray());

                foreach (string sPair in arrNameValue)
                {
                    string[] arrTemp = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries);

                    try
                    {
                        if (arrTemp.Length >= 2)
                        {
                            string settingName = arrTemp[0];
                            string settingValue = arrTemp[1];

                            switch (settingName.ToUpper().Trim())
                            {
                                case "MAX_NOTIFICATIONS":
                                    runtimeSettings["MAX_NOTIFICATIONS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "ENABLE_ROWCOUNT_THRESHOLD":
                                    runtimeSettings["ENABLE_ROWCOUNT_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "ENABLE_TIME_THRESHOLD":
                                    runtimeSettings["ENABLE_TIME_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "PRIORITY_MODE":
                                    // DELAYED (After Package) or URGENT (After Task) 
                                    runtimeSettings["PRIORITY_MODE"] = (string)settingValue;
                                    break;
                                case "EMAIL_FORMAT":
                                    // TEXT or HTML 
                                    runtimeSettings["EMAIL_FORMAT"] = (string)settingValue;
                                    break;
                                case "SMTP_PORT":
                                    // Default 25 
                                    runtimeSettings["SMTP_PORT"] = Convert.ToInt32(settingValue);
                                    break;
                                case "SMTP_USESSL":
                                    // Default false
                                    runtimeSettings["SMTP_USESSL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMTP_UID":
                                    runtimeSettings["SMTP_UID"] = (string)settingValue;
                                    break;
                                case "SMTP_PWD":
                                    runtimeSettings["SMTP_PWD"] = (string)settingValue;
                                    break;
                                case "SMS_EMAILLIST":
                                    // Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                    runtimeSettings["SMS_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "FILTERED_ALERTS":
                                    ////Must be pipe seperated e.g. -111|-222 .... 
                                    runtimeSettings["FILTERED_ALERTS"] = (string)settingValue;
                                    break;
                                case "NOTIFY_ONERROR":
                                    runtimeSettings["NOTIFY_ONERROR"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONWARNING":
                                    runtimeSettings["NOTIFY_ONWARNING"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONSUCCESS":
                                    runtimeSettings["NOTIFY_ONSUCCESS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONCOMPLETE":
                                    runtimeSettings["NOTIFY_ONCOMPLETE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMS_MAXLENGTH":
                                    runtimeSettings["SMS_MAXLENGTH"] = Convert.ToInt32(settingValue);
                                    break;
                                case "CC_EMAILLIST":
                                    runtimeSettings["CC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "BCC_EMAILLIST":
                                    runtimeSettings["BCC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "NOTIFY_USING_EMAIL":
                                    runtimeSettings["NOTIFY_USING_EMAIL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_SMS":
                                    runtimeSettings["NOTIFY_USING_SMS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_EVENTLOG":
                                    runtimeSettings["NOTIFY_USING_EVENTLOG"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_LOGFILE":
                                    runtimeSettings["NOTIFY_USING_LOGFILE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "LOG_FOLDER_PATH":
                                    runtimeSettings["LOG_FOLDER_PATH"] = (string)settingValue;
                                    break;
                                case "DELETE_LOG_OLDER_THAN_DAYS":
                                    runtimeSettings["DELETE_LOG_OLDER_THAN_DAYS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "USE_CUSTOM_EMAIL_TEMPLATE":
                                    runtimeSettings["USE_CUSTOM_EMAIL_TEMPLATE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                                    runtimeSettings["CUSTOM_EMAIL_TEMPLATE_FILEPATH"] = (string)settingValue;
                                    break;
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, string.Empty, 0);
                    }
                }
            }

            SetNF(runtimeSettings);

            WriteVariable(NotificationFrameworkCounter, 0);

            return runtimeSettings;
        }

        public void SetNF(Hashtable runtimeSettings)
        {
            runtimeSettings.Add(((Char)78).ToString() + ((Char)70).ToString() + ((Char)95).ToString() + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString(), ReadVariable("User::varSSISOpsNF_" + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString()));
        }

        [Serializable]
        public class AlertInfo
        {
            /// <summary>
            /// Retained for serialization purposes.
            /// </summary>
            public AlertInfo()
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
                : this(alertDescription, alertCode, sourceName, sourceId, alertType, DateTime.Now)
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType, DateTime timeStamp)
            {
                AlertCode = alertCode;
                AlertDescription = alertDescription;
                AlertType = alertType;
                SourceName = sourceName;
                SourceId = sourceId;
                AlertTimeStamp = timeStamp;
            }

            public int AlertCode { get; set; }
            public string AlertDescription { get; set; }
            public DateTime AlertTimeStamp { get; set; }
            public AlertType AlertType { get; set; }
            public string SourceId { get; set; }
            public string SourceName { get; set; }
        }

        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_c2b4e37b7fb84bfba3bd8c65a7de1be2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_c2b4e37b7fb84bfba3bd8c65a7de1be2</msb:DisplayName>
		<msb:ProjectId>{919FD3E1-D422-4A8F-A19D-17340ED04CA8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_c2b4e37b7fb84bfba3bd8c65a7de1be2.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c2b4e37b7fb84bfba3bd8c65a7de1be2.Properties.Settings.get_Default():st_c2b4e37b7fb84bfba3bd8c65a7de1be2.Properties.Sett" +
    "ings")]

namespace st_c2b4e37b7fb84bfba3bd8c65a7de1be2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c2b4e37b7fb84bfba3bd8c65a7de1be2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c2b4e37b7fb84bfba3bd8c65a7de1be2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c2b4e37b7fb84bfba3bd8c65a7de1be2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_c2b4e37b7fb84bfba3bd8c65a7de1be2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_c2b4e37b7fb84bfba3bd8c65a7de1be2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_c2b4e37b7fb84bfba3bd8c65a7de1be2.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOpeolcAAAAAAAAAAOAAAiELAQsAADYAAAAIAAAAAAAAblUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABxVAABPAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdDUAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
VQAAAAAAAEgAAAACAAUAmDEAAIQjAAABAAAAAAAAAOAwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqTgIoCQAABgIoFgAAChZvFwAACioAGzAGAOUAAAACAAARAigNAAAGCnJz
AABwBnJ3AABwbxgAAApvGQAACnJzAABwKBoAAAoLAnKXAABwKBAAAAZvGQAACgwHcnMAAHAIbxkA
AApycwAAcCgaAAAKbxsAAAoWMgEqAnK7AABwKBAAAAZvGQAACg0Ccu0AAHAoEAAABm8ZAAAKEwQC
chMBAHAoEAAABm8ZAAAKEwUWEwYCKBYAAApvHAAACnI1AQBwbx0AAAosBRcTBisDFhMG3gYmFhMG
3gARBi0DGCsBFxMHCCgeAAAKLQoIEggoHwAACi0DFhMIAgkRCBEEEQURBygKAAAGKgAAAAEQAAAA
AI8AIbAABiEAAAEbMAUAvgEAAAMAABEDKB4AAAosB3JTAQBwEAEFKB4AAAosB3KNAQBwEANzIAAA
CgpzIAAACgsDBAUOBA4FcxMAAAYM0AcAAAIoDwAACheNFgAAARMMEQwW0AYAAAIoDwAACqIRDHMh
AAAKDXMiAAAKEwQJEQQIbyMAAApzJAAAChMFEQURBG8lAAAKbxkAAApvJgAAChEFbycAAApvKAAA
ChMNK3QRDW8pAAAKdCcAAAETBhEGdSoAAAEtXREGdSsAAAEtVBEGdSwAAAEtSxEGbyoAAAooHgAA
Ci09EQZvKgAAChMHEQdyxwEAcH4rAAAKbywAAApyIQIAcH4rAAAKbywAAAoTBwYRB28tAAAKJgcR
B28tAAAKJhENby4AAAotg94VEQ11LQAAARMOEQ4sBxEOby8AAArc3gwRBCwHEQRvLwAACtwCco0C
AHAoEAAABnUeAAABEwgRCCgeAAAKLRERCAZvGQAACigwAAAKEwkrCAZvGQAAChMJAnKNAgBwEQko
DwAABgJyxwIAcCgQAAAGdR4AAAETChEKKB4AAAotEREKB28ZAAAKKDAAAAoTCysIB28ZAAAKEwsC
cscCAHARCygPAAAGKgAAARwAAAIAlwCBGAEVAAAAAAIAZgDJLwEMAAAAANYDKDEAAApvMgAACm8z
AAAKEAEFA280AAAKLREDcgkDAHAoMAAACnM1AAAKegUDBG82AAAKKgAAEzAEAN8CAAAEAAARAygx
AAAKbzIAAApvMwAAChABBANvNAAACiwIBANvGAAACioDJQo5sgIAAP4TfhYAAAQ6ZAEAAB8bczcA
AAolcmkDAHAWKDgAAAolco0DAHAXKDgAAAolcsEDAHAYKDgAAAolcu0DAHAZKDgAAAolcgkEAHAa
KDgAAAolciMEAHAbKDgAAAolcjcEAHAcKDgAAAolck8EAHAdKDgAAAolcmEEAHAeKDgAAAolcnME
AHAfCSg4AAAKJXJ3AABwHwooOAAACiVyjwQAcB8LKDgAAAolcq0EAHAfDCg4AAAKJXLPBABwHw0o
OAAACiVy8QQAcB8OKDgAAAolchUFAHAfDyg4AAAKJXIxBQBwHxAoOAAACiVyQwUAcB8RKDgAAAol
cl0FAHAfEig4AAAKJXJ5BQBwHxMoOAAACiVynwUAcB8UKDgAAAolcsEFAHAfFSg4AAAKJXLtBQBw
HxYoOAAACiVyFwYAcB8XKDgAAAolcjcGAHAfGCg4AAAKJXJtBgBwHxkoOAAACiVyoQYAcB8aKDgA
AAr+E4AWAAAE/hN+FgAABAYSASg5AAAKOS4BAAAHRRsAAAAFAAAADAAAABMAAAAaAAAAIAAAACYA
AAAuAAAANQAAADsAAABBAAAARwAAAE0AAABUAAAAWwAAAGIAAABpAAAAdAAAAHoAAACAAAAAhgAA
AI0AAACUAAAAmwAAAKIAAACoAAAArwAAALYAAAA4twAAABeMIAAAASoWjC8AAAEqFowvAAABKnLf
BgBwKnLtBgBwKh8ZjCAAAAEqFowvAAABKnL3BgBwKnL3BgBwKnL3BgBwKnL3BgBwKheMLwAAASoW
jC8AAAEqFowvAAABKhaMLwAAASogoAAAAIwgAAABKnL3BgBwKnL3BgBwKnL3BgBwKheMLwAAASoX
jC8AAAEqFowvAAABKhaMLwAAASpy+QYAcCobjCAAAAEqFowvAAABKnIRBwBwKhQqABswBgDiBgAA
BQAAEQJyWQcAcCgQAAAGCgYtAxQrBgZvGQAACgtzOgAACgwIcmkDAHAXjCAAAAFvOwAACghyjQMA
cBaMLwAAAW87AAAKCHLBAwBwFowvAAABbzsAAAoIcu0DAHBypwcAcG87AAAKCHIJBABwcrcHAHBv
OwAACghyIwQAcB8ZjCAAAAFvOwAACghyNwQAcBaMLwAAAW87AAAKCHJPBABwfisAAApvOwAACghy
YQQAcH4rAAAKbzsAAAoIcnMEAHB+KwAACm87AAAKCHJ3AABwfisAAApvOwAACghyjwQAcBeMLwAA
AW87AAAKCHKtBABwFowvAAABbzsAAAoIcs8EAHAWjC8AAAFvOwAACghy8QQAcBaMLwAAAW87AAAK
CHIVBQBwIKAAAACMIAAAAW87AAAKCHJDBQBwfisAAApvOwAACghyXQUAcH4rAAAKbzsAAAoIcnkF
AHAXjC8AAAFvOwAACghynwUAcBeMLwAAAW87AAAKCHLBBQBwFowvAAABbzsAAAoIcu0FAHAWjC8A
AAFvOwAACghyFwYAcHL5BgBwbzsAAAoIcjcGAHAbjCAAAAFvOwAACghybQYAcBaMLwAAAW87AAAK
CHKhBgBwchEHAHBvOwAACgcoHgAACjrpBAAAB3LBBwBwbzwAAApvPQAACg0JEwkWEwo4wgQAABEJ
EQqaEwQRBHLFBwBwbzwAAAoYF28+AAAKEwURBY5pGD9sBAAAEQUWmhMGEQUXmhMHEQZvPwAACm8z
AAAKJRMLOUwEAAD+E34XAAAEOlcBAAAfGnM3AAAKJXJpAwBwFig4AAAKJXKNAwBwFyg4AAAKJXLB
AwBwGCg4AAAKJXLtAwBwGSg4AAAKJXIJBABwGig4AAAKJXIjBABwGyg4AAAKJXI3BABwHCg4AAAK
JXJPBABwHSg4AAAKJXJhBABwHig4AAAKJXJzBABwHwkoOAAACiVydwAAcB8KKDgAAAolco8EAHAf
Cyg4AAAKJXKtBABwHwwoOAAACiVyzwQAcB8NKDgAAAolcvEEAHAfDig4AAAKJXIVBQBwHw8oOAAA
CiVyQwUAcB8QKDgAAAolcl0FAHAfESg4AAAKJXJ5BQBwHxIoOAAACiVynwUAcB8TKDgAAAolcsEF
AHAfFCg4AAAKJXLtBQBwHxUoOAAACiVyFwYAcB8WKDgAAAolcjcGAHAfFyg4AAAKJXJtBgBwHxgo
OAAACiVyoQYAcB8ZKDgAAAr+E4AXAAAE/hN+FwAABBELEgwoOQAACjnUAgAAEQxFGgAAAAUAAAAh
AAAAPQAAAFkAAABrAAAAfQAAAJkAAAC1AAAAxwAAANkAAADrAAAA/QAAABkBAAA1AQAAUQEAAG0B
AACJAQAAmwEAAK0BAADJAQAA5QEAAP4BAAAXAgAAJgIAAD8CAABYAgAAOGACAAAIcmkDAHARByhA
AAAKjCAAAAFvNgAACjhEAgAACHKNAwBwEQcoQQAACowvAAABbzYAAAo4KAIAAAhywQMAcBEHKEEA
AAqMLwAAAW82AAAKOAwCAAAIcu0DAHARB282AAAKOPoBAAAIcgkEAHARB282AAAKOOgBAAAIciME
AHARByhAAAAKjCAAAAFvNgAACjjMAQAACHI3BABwEQcoQQAACowvAAABbzYAAAo4sAEAAAhyTwQA
cBEHbzYAAAo4ngEAAAhyYQQAcBEHbzYAAAo4jAEAAAhycwQAcBEHbzYAAAo4egEAAAhydwAAcBEH
bzYAAAo4aAEAAAhyjwQAcBEHKEEAAAqMLwAAAW82AAAKOEwBAAAIcq0EAHARByhBAAAKjC8AAAFv
NgAACjgwAQAACHLPBABwEQcoQQAACowvAAABbzYAAAo4FAEAAAhy8QQAcBEHKEEAAAqMLwAAAW82
AAAKOPgAAAAIchUFAHARByhAAAAKjCAAAAFvNgAACjjcAAAACHJDBQBwEQdvNgAACjjKAAAACHJd
BQBwEQdvNgAACji4AAAACHJ5BQBwEQcoQQAACowvAAABbzYAAAo4nAAAAAhynwUAcBEHKEEAAAqM
LwAAAW82AAAKOIAAAAAIcsEFAHARByhBAAAKjC8AAAFvNgAACitnCHLtBQBwEQcoQQAACowvAAAB
bzYAAAorTghyFwYAcBEHbzYAAAorPwhyNwYAcBEHKEAAAAqMIAAAAW82AAAKKyYIcm0GAHARByhB
AAAKjC8AAAFvNgAACisNCHKhBgBwEQdvNgAACt4oEwgCKBYAAApvQgAAChZyyQcAcBEIb0MAAAp+
KwAAChZvRAAACibeABEKF1gTChEKEQmOaT8z+///AggoDgAABgJyJwgAcBaMIAAAASgPAAAGCCoA
AEEcAAAAAAAAFwIAAHgEAACPBgAAKAAAACEAAAETMAYA6gAAAAYAABEDHo0eAAABCgYWH04LEgEo
RQAACqIGFx9GDBICKEUAAAqiBhgfXw0SAyhFAAAKogYZH0MTBBIEKEUAAAqiBhofSBMFEgUoRQAA
CqIGGx9FEwYSBihFAAAKogYcH0MTBxIHKEUAAAqiBh0fSxMIEggoRQAACqIGKEYAAAoCHI0eAAAB
EwkRCRZydwgAcKIRCRcfQxMKEgooRQAACqIRCRgfSBMLEgsoRQAACqIRCRkfRRMMEgwoRQAACqIR
CRofQxMNEg0oRQAACqIRCRsfSxMOEg4oRQAACqIRCShGAAAKKBAAAAZvOwAACioAABswAgBnAAAA
BwAAERQKFgsCKBYAAApvHAAACgNvRwAACgIoFgAACm8cAAAKEgBvSAAACgYDb0kAAAoEb0oAAAre
DAYsCAZvSwAAChcL3N4TJgIoFgAACm8cAAAKb0wAAAr+Gt4NBiwJBy0GBm9LAAAK3CoAASgAAAIA
JwAPNgAMAAAAAAAABABARAATIQAAAQIABABVWQANAAAAABswAgBoAAAACAAAERQKFgsCKBYAAApv
HAAACgNvTQAACgIoFgAACm8cAAAKEgBvSAAACgYDb0kAAApvTgAACgzeDAYsCAZvSwAAChcL3N4T
JgIoFgAACm8cAAAKb0wAAAr+Gt4NBiwJBy0GBm9LAAAK3AgqASgAAAIAJwAPNgAMAAAAAAAABABA
RAATIQAAAQIABABVWQANAAAAAB4CKE8AAAoqHgIoDgAACipOAgMEBQ4EDgUoUQAACigUAAAGKtIC
KA4AAAoCBCgWAAAGAgMoGAAABgIOBSgcAAAGAgUoIAAABgIOBCgeAAAGAg4GKBoAAAYqHgJ7EAAA
BCoiAgN9EAAABCoeAnsRAAAEKiICA30RAAAEKh4CexIAAAQqIgIDfRIAAAQqHgJ7EwAABCoiAgN9
EwAABCoeAnsUAAAEKiICA30UAAAEKh4CexUAAAQqIgIDfRUAAAQqAAAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAYAkAACN+AADMCQAAyAwAACNTdHJp
bmdzAAAAAJQWAACgCAAAI1VTADQfAAAQAAAAI0dVSUQAAABEHwAAQAQAACNCbG9iAAAAAAAAAAIA
AAFXHaIJCQMAAAD6JTMAFgAAAQAAADYAAAAIAAAAFwAAACAAAAAgAAAAUQAAAAoAAAAiAAAACAAA
AAMAAAAJAAAAEAAAAAEAAAABAAAABQAAAAEAAAADAAAAAAAKAAEAAAAAAAYA1QDOAAoA8QDcAA4A
UQEoAQYAbQHOAAYAgwFyAQYAtAGfAQYA/wLsAgYArQPOAAYADgb0BQYAOQYnBgYAUAYnBgYAbQYn
BgYAjAYnBgYApQYnBgYAvgYnBgYA2QYnBgYA9AYnBgYADQcnBgYARgcmBwYAZgcmBwYAlweEBwYA
tAfOAAYAuQfOAAYA3QcnBgoACQjzBwoAIgjzBwYANwgmBw4AWQgoAQ4AewgoAQYAtgjOABIACwnr
CAYASgnOAAYAWQnOAAYAbwljCRYAoQmICQYAuQmvCQYAxgmvCRYA2wl9CRYAAAp9CRYACAp9CQYA
IwrsAhYASQp9CRYAWAp9CRYAYwp9CQYAmwrOAAYARgsrCwYAdwvOAAYAkQvOAAYAuAvOAA4A0gso
AQYABwzOABIAGQzrCBIAMAzrCAYAZgzOAAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAA
awA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAgAEgACIQAAsQAAABEACwASAAIgEAC7
AAAABQAQABIAAAAAAOYKAAAFABYAIQARAJMBEwARAMABFwARAAoCOQBRgC4CRwBRgFkCRwBRgIcC
RwBRgKQCRwAGBlMDmQFWgFsDnAFWgGMDnAEGBlMDmQFWgGsDqgFWgHYDqgFWgIMDqgFWgJYDqgEB
AHYEmQEBAJEERwABALME8QEBANMEqgEBAO4ERwABAAgFRwATAFML4AITAKQL4AJQIAAAAACDGNAB
GwABAFggAAAAAJMI1gEfAAEAkSAAAAAAkwjqASQAAQCYIAAAAACTCPYBKQABAKAgAAAAAJYIGgI9
AAIAsyAAAAAAhhjQARsAAgCnIAAAAACRGFIILgICALsgAAAAAIYAygIbAAIA0CAAAAAAgQDPAhsA
AgDUIQAAAACBAN8CagECALwjAAAAAIEACQN0AQcA9CMAAAAAgQAUA3wBCgDgJgAAAACGAB8DgwEM
AOwtAAAAAIYAMgOIAQwA5C4AAAAAgQA4A44BDQCALwAAAACBAEYDlAEPABwwAAAAAIYY0AEbABAA
JDAAAAAAhhjQARsAEAAsMAAAAACGGNABagEQAEAwAAAAAIYY0AG9ARUAdTAAAAAAhgi2A8kBGwB9
MAAAAACGCMQDzQEbAIYwAAAAAIYI0gPSARwAjjAAAAAAhgjnA9YBHACXMAAAAACGCPwD2wEdAJ8w
AAAAAIYIDwTgAR0AqDAAAAAAhggiBOYBHgCwMAAAAACGCDAE6wEeALkwAAAAAIYIPgTSAR8AwTAA
AAAAhghLBNYBHwDKMAAAAACGCFgE0gEgANIwAAAAAIYIZwTWASAAAAABAGIFAAABAGgFAAACAHkF
AAADAIMFAAAEAI4FAAAFAJcFAAABAKEFAAACAK0FAAADALMFAAABAMMFAAACALMFAAABALMFAAAB
AM8FAAACANwFAAABAM8FAAABAGgFAAACAHkFAAADAIMFAAAEAI4FAAAFAJcFAAABAGgFAAACAHkF
AAADAIMFAAAEAI4FAAAFAJcFAAAGAOoFAAABAGIFAAABAGIFAAABAGIFAAABAGIFAAABAGIFAAAB
AGIFSQDQAdYBUQDQAdYBWQDQAdYBYQDQAdYBaQDQAdYBcQDQAdYBeQDQAdYBgQDQAdYBiQDQAdYB
kQDQAdYBmQDQAc0BoQDQARsAqQDQARsACQDQARsAsQDLBwcCsQDmBw4CKQDQARMCyQDQAR8C2QDQ
ARsAEQDQARsA4QDQARsAGQCNCDIC6QCVCM0BOQCkCDcCCQCtCNIB8QC9CDwC8QDECEMC6QAdCUgC
+QAzCU0C8QA8CVICAQFQCVcCEQHQARsAGQHQAWwCIQHQARsAGQHRCXUCMQHQARsAIQHnCX0CMQH4
CdYBOQEUCoMCQQEvCokCSQE9Co8COQFwCtIB8QB9CkcA8QCDCpMCEQGLCpkCSQGSCqACaQGnChsA
8QC9CKQCMQCvCiQA8QDECs8C8QDMCtIBOQDRCtUCCQHQAdYBOQDdCtoCDADQAc0BDABnC/ECDABr
C/kCOQDQARsAOQBnC9oC8QB/CwcD8QCLCwwD8QCLCxMD8QDECtIBiQHACx4DiQHIC1IC6QDmCyMD
CQHxC9IBkQH9CykDmQGtCNIB8QC9CEgD+QAMDNYB+QAjDGIDoQGkCGoDqQE5DHEDoQFDDBsA+QBK
DBsA+QBQDNYBqQFcDI8CGQDQARsAsQHQARsAQQB8DIUDDgAQAEoADgAUAIMADgAYAMQADgAcABMB
CAAkAKABCAAoAKUBCAAwAKUBCAA0AK4BCAA4ALMBCAA8ALgBKQCTACUCLgBbABgELgBDAPsDLgBj
ACEELgALAIoDLgATANIDLgAbAPsDLgAjAPsDLgArAPsDLgAzANIDLgA7AAEEQwBrAKUBSQCTACUC
YQCbAKUBgwCrAKUBAwGbAKUBAQKbAKUBIQKbAKUBQQKbAKUBYQKbAKUBgQKbAKUBoAKbAKUBoQKb
AKUBwAKbAKUB4AKbAKUBAAObAKUBIAObAKUBQAObAKUBYAObAKUBgAObAKUBoAObAKUBwAObAKUB
4AObAKUBAASbAKUBGgJeAqoCAgMyA04DdgN9AwIAAQADAAMABwAEAAAAgwEvAAAAAgI0AAAAJgJC
AAAAJAX1AQAALgX5AQAAPwX9AQAAsQACAgAATgX5AQAAVwX5AQIAAgADAAEABAAFAAIAAwAFAAIA
BQAHAAIAFQAJAAEAFgAJAAEAGAALAAIAFwALAAIAGQANAAEAGgANAAEAHAAPAAIAGwAPAAEAHgAR
AAIAHQARAAIAHwATAAEAIAATAOkCBIAAAAEAAACrFzVdAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEA
xQAAAAAABAAAAAAAAAAAAAAAAQDOAAAAAAAMAAAAAAAAAAAAAAAKAAkBAAAAAAwAAAAAAAAAAAAA
AAoAzAgAAAAABAAAAAAAAAAAAAAAAQB9CQAAAAAAAAAAAQAAAIQMAAAFAAQABgAEAAcABAAAAAAA
ADxNb2R1bGU+AHN0X2MyYjRlMzdiN2ZiODRiZmJhM2JkOGM2NWE3ZGUxYmUyLmRsbABSZXNvdXJj
ZXMAc3RfYzJiNGUzN2I3ZmI4NGJmYmEzYmQ4YzY1YTdkZTFiZTIuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAHN0X2MyYjRlMzdiN2ZiODRiZmJhM2JkOGM2NWE3ZGUxYmUyAFNjcmlwdFJl
c3VsdHMAQWxlcnRUeXBlAEFsZXJ0SW5mbwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5D
b25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5h
Z2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNl
Q3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATm90aWZpY2F0aW9u
RnJhbWV3b3JrQWxlcnRMaXN0VmFyaWFibGVOYW1lAE5vdGlmaWNhdGlvbkZyYW1ld29ya0FsZXJ0
TGlzdEFsbFZhcmlhYmxlTmFtZQBOb3RpZmljYXRpb25GcmFtZXdvcmtDb3VudGVyAE5vdGlmaWNh
dGlvbkZyYW1ld29ya1N1YkNvbXBvbmVudE5hbWUATWFpbgBVcGRhdGVBbGVydExpc3QAQWRkQWxl
cnRJbmZvAFN5c3RlbS5Db2xsZWN0aW9ucwBIYXNodGFibGUAU2V0U2V0dGluZwBHZXRTZXR0aW5n
AEdldFJ1bnRpbWVTZXR0aW5ncwBTZXRORgBXcml0ZVZhcmlhYmxlAFJlYWRWYXJpYWJsZQB2YWx1
ZV9fAFN1Y2Nlc3MARmFpbHVyZQBFcnJvckFsZXJ0AFdhcm5pbmdBbGVydABUaW1lVGhyZXNob2xk
QWxlcnQAUm93Q291bnRUaHJlc2hvbGRBbGVydABEYXRlVGltZQBnZXRfQWxlcnRDb2RlAHNldF9B
bGVydENvZGUAZ2V0X0FsZXJ0RGVzY3JpcHRpb24Ac2V0X0FsZXJ0RGVzY3JpcHRpb24AZ2V0X0Fs
ZXJ0VGltZVN0YW1wAHNldF9BbGVydFRpbWVTdGFtcABnZXRfQWxlcnRUeXBlAHNldF9BbGVydFR5
cGUAZ2V0X1NvdXJjZUlkAHNldF9Tb3VyY2VJZABnZXRfU291cmNlTmFtZQBzZXRfU291cmNlTmFt
ZQA8QWxlcnRDb2RlPmtfX0JhY2tpbmdGaWVsZAA8QWxlcnREZXNjcmlwdGlvbj5rX19CYWNraW5n
RmllbGQAPEFsZXJ0VGltZVN0YW1wPmtfX0JhY2tpbmdGaWVsZAA8QWxlcnRUeXBlPmtfX0JhY2tp
bmdGaWVsZAA8U291cmNlSWQ+a19fQmFja2luZ0ZpZWxkADxTb3VyY2VOYW1lPmtfX0JhY2tpbmdG
aWVsZABBbGVydENvZGUAQWxlcnREZXNjcmlwdGlvbgBBbGVydFRpbWVTdGFtcABTb3VyY2VJZABT
b3VyY2VOYW1lAHZhbHVlAGFsZXJ0RGVzY3JpcHRpb24AYWxlcnRDb2RlAHNvdXJjZU5hbWUAc291
cmNlSWQAYWxlcnRUeXBlAFNldHRpbmdOYW1lAFZhbHVlAHJ1bnRpbWVTZXR0aW5ncwBzZXR0aW5n
TmFtZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQB0aW1lU3RhbXAAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRN
b2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAHNldF9UYXNrUmVzdWx0AGdldF9JdGVtAFRv
U3RyaW5nAFN0cmluZwBDb25jYXQASW5kZXhPZgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZURpc3BlbnNlcgBnZXRf
VmFyaWFibGVEaXNwZW5zZXIAQ29udGFpbnMASXNOdWxsT3JFbXB0eQBJbnQzMgBUcnlQYXJzZQBF
eGNlcHRpb24AU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBTeXN0ZW0uWG1sAFN5c3RlbS5YbWwu
U2VyaWFsaXphdGlvbgBYbWxTZXJpYWxpemVyAFN5c3RlbS5JTwBTdHJpbmdXcml0ZXIAVGV4dFdy
aXRlcgBTZXJpYWxpemUAWG1sRG9jdW1lbnQAR2V0U3RyaW5nQnVpbGRlcgBMb2FkWG1sAFhtbE5v
ZGUAWG1sTm9kZUxpc3QAZ2V0X0NoaWxkTm9kZXMASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBn
ZXRfQ3VycmVudABYbWxEZWNsYXJhdGlvbgBYbWxDb21tZW50AFhtbEF0dHJpYnV0ZQBnZXRfT3V0
ZXJYbWwARW1wdHkAUmVwbGFjZQBBcHBlbmQATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBn
ZXRfSW52YXJpYW50Q3VsdHVyZQBUb1VwcGVyAFRyaW0AQ29udGFpbnNLZXkAc2V0X0l0ZW0APFBy
aXZhdGVJbXBsZW1lbnRhdGlvbkRldGFpbHM+e0ZGMzNGM0Q3LTVDNkEtNDgyNS1CRTNGLTgxRUJB
NTYzODNCMH0AU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMARGljdGlvbmFyeWAyACQkbWV0aG9k
MHg2MDAwMDBiLTEAQWRkAFRyeUdldFZhbHVlAEJvb2xlYW4AVG9DaGFyQXJyYXkAU3BsaXQAU3Ry
aW5nU3BsaXRPcHRpb25zACQkbWV0aG9kMHg2MDAwMDBjLTEAQ29udmVydABUb0ludDMyAFRvQm9v
bGVhbgBFdmVudHNPYmplY3RXcmFwcGVyAGdldF9FdmVudHMAZ2V0X01lc3NhZ2UARmlyZUVycm9y
AENoYXIATG9ja0ZvcldyaXRlAFZhcmlhYmxlcwBHZXRWYXJpYWJsZXMAVmFyaWFibGUAc2V0X1Zh
bHVlAFVubG9jawBSZXNldABMb2NrRm9yUmVhZABnZXRfVmFsdWUAU2VyaWFsaXphYmxlQXR0cmli
dXRlAGdldF9Ob3cAc3RfYzJiNGUzN2I3ZmI4NGJmYmEzYmQ4YzY1YTdkZTFiZTIuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAcXMAdABfAGMAMgBiADQAZQAzADcAYgA3AGYAYgA4ADQA
YgBmAGIAYQAzAGIAZAA4AGMANgA1AGEANwBkAGUAMQBiAGUAMgAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAA3wAAB9GAEkATABUAEUAUgBFAEQAXwBBAEwARQBSAFQA
UwAAI1MAeQBzAHQAZQBtADoAOgBFAHIAcgBvAHIAQwBvAGQAZQAAMVMAeQBzAHQAZQBtADoAOgBF
AHIAcgBvAHIARABlAHMAYwByAGkAcAB0AGkAbwBuAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIA
YwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoAUwBvAHUAcgBjAGUASQBEAAAdUwB5AHMAdABl
AG0AOgA6AEMAYQBuAGMAZQBsAAA5PABOAE8AIABBAEwARQBSAFQAIABEAEUAUwBDAFIASQBQAFQA
SQBPAE4AIABHAEkAVgBFAE4APgAAOTwATgBPACAAQQBMAEUAUgBUACAAUwBPAFUAUgBDAEUAIABO
AEEATQBFACAARwBJAFYARQBOAD4AAFl4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8A
LwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAAGt4
AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8A
MgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAATlVAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAEEAbABlAHIAdABMAGkAcwB0AABBVQBzAGUA
cgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABs
AABfIABzAGUAdAB0AGkAbgBnACAAZABvAGUAcwBuACcAdAAgAGUAeABpAHMAdAAgAGkAbgAgAHIA
dQBuAHQAaQBtAGUAIABzAGUAdAB0AGkAbgBnACAAbABpAHMAdAAuAAEjTQBBAFgAXwBOAE8AVABJ
AEYASQBDAEEAVABJAE8ATgBTAAAzRQBOAEEAQgBMAEUAXwBSAE8AVwBDAE8AVQBOAFQAXwBUAEgA
UgBFAFMASABPAEwARAAAK0UATgBBAEIATABFAF8AVABJAE0ARQBfAFQASABSAEUAUwBIAE8ATABE
AAAbUABSAEkATwBSAEkAVABZAF8ATQBPAEQARQAAGUUATQBBAEkATABfAEYATwBSAE0AQQBUAAAT
UwBNAFQAUABfAFAATwBSAFQAABdTAE0AVABQAF8AVQBTAEUAUwBTAEwAABFTAE0AVABQAF8AVQBJ
AEQAABFTAE0AVABQAF8AUABXAEQAABtTAE0AUwBfAEUATQBBAEkATABMAEkAUwBUAAAdTgBPAFQA
SQBGAFkAXwBPAE4ARQBSAFIATwBSAAAhTgBPAFQASQBGAFkAXwBPAE4AVwBBAFIATgBJAE4ARwAA
IU4ATwBUAEkARgBZAF8ATwBOAFMAVQBDAEMARQBTAFMAACNOAE8AVABJAEYAWQBfAE8ATgBDAE8A
TQBQAEwARQBUAEUAABtTAE0AUwBfAE0AQQBYAEwARQBOAEcAVABIAAARTgBGAF8AQwBIAEUAQwBL
AAAZQwBDAF8ARQBNAEEASQBMAEwASQBTAFQAABtCAEMAQwBfAEUATQBBAEkATABMAEkAUwBUAAAl
TgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBFAE0AQQBJAEwAACFOAE8AVABJAEYAWQBfAFUAUwBJ
AE4ARwBfAFMATQBTAAArTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBFAFYARQBOAFQATABPAEcA
AClOAE8AVABJAEYAWQBfAFUAUwBJAE4ARwBfAEwATwBHAEYASQBMAEUAAB9MAE8ARwBfAEYATwBM
AEQARQBSAF8AUABBAFQASAAANUQARQBMAEUAVABFAF8ATABPAEcAXwBPAEwARABFAFIAXwBUAEgA
QQBOAF8ARABBAFkAUwAAM1UAUwBFAF8AQwBVAFMAVABPAE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQ
AEwAQQBUAEUAAD1DAFUAUwBUAE8ATQBfAEUATQBBAEkATABfAFQARQBNAFAATABBAFQARQBfAEYA
SQBMAEUAUABBAFQASAAADVUAUgBHAEUATgBUAAAJVABFAFgAVAAAAQAXQwA6AFwAUwBTAEkAUwBc
AEwAbwBnAABHQwA6AFwAUwBTAEkAUwBcAEMAbwBuAGYAaQBnAFwATgBGAF8ARQBtAGEAaQBsAFQA
ZQBtAHAAbABhAHQAZQAuAGgAdABtAABNVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBO
AEYAXwBPAHQAaABlAHIAQwBvAG4AZgBpAGcAUwBlAHQAdABpAG4AZwBzAAAPRABFAEwAQQBZAEUA
RAAACUgAVABNAEwAAAM7AAADPQAAXUIASQAgAHgAUAByAGUAcwBzACAATgBvAHQAaQBmAGkAYwBh
AHQAaQBvAG4AIABGAHIAYQBtAGUAdwBvAHIAawAgAEUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIA
AE9VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMAYQB0
AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgAAJ1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMA
TgBGAF8AAADX8zP/alwlSL4/geulY4OwAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQA
ABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBg44VQBzAGUAcgA6ADoAdgBh
AHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABAVQBzAGUAcgA6ADoAdgBh
AHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABsAE5VAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuAF8A
QwBvAHUAbgB0AGUAcgBWQgBJACAAeABQAHIAZQBzAHMAIABOAG8AdABpAGYAaQBjAGEAdABpAG8A
bgAgAEYAcgBhAG0AZQB3AG8AcgBrACAAUwBlAG4AZAAgAEEAbABlAHIAdAAJIAUBDggODhEYByAD
AQ4cEh0GIAIcDhIdBCAAEh0FIAEBEh0FIAIBDhwEIAEcDgIGCAMGERQEAAAAAAQBAAAAAwYRGAQC
AAAABAMAAAAEBAAAAAsgBgEOCA4OERgRIQMgAAgEIAEBCAMgAA4EIAEBDgQgABEhBSABAREhBCAA
ERgFIAEBERgDBhEhAygACAMoAA4EKAARIQQoABEYBgABElkRXQQgABJhBiACAQ4SYQQHARIVBSAB
ARFpCAEAAgAAAAAAAwAAAQQgABJ1BCABHBwGAAMODg4OBCABCA4EIAASfQQgAQIOBAABAg4GAAIC
DhAIDQcJEh0ODg4ODgIRGAgIIAIBElkdElkHIAIBEoCVHAUgABKAiQUgABKAoQUgABKApQMgABwF
IAIODg4GIAESgIkOAyAAAgUAAg4ODiQHDxKAiRKAiRIcEoCNEoCREoCZEoCdDg4ODg4dElkSgKUS
gLUFIAEOEhkEIAECHAUgAgEcHAgGFRKAuQIOCAcVEoC5Ag4IByACARMAEwEIIAICEwAQEwEEBwIO
CAQgAB0DBiABHQ4dAwogAx0OHQMIEYDBBAABCA4FIAASgMkIIAUCCA4ODggVBw0cDhIdHQ4OHQ4O
DhKAhR0OCA4IBQABDh0OEwcPHQ4DAwMDAwMDAx0OAwMDAwMHIAEBEBKA0QYgARKA1RwEIAEBHAYH
AhKA0QIHBwMSgNECHAQAABEhRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI3N0X2MyYjRlMzdiN2ZiODRiZmJh
M2JkOGM2NWE3ZGUxYmUyAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFEVQAAAAAAAAAAAABeVQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAUFUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAAAAAA
AAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABADVd
qxcAAAEANV2rFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABzAHQAXwBjADIAYgA0AGUAMwA3AGIA
NwBmAGIAOAA0AGIAZgBiAGEAMwBiAGQAOABjADYANQBhADcAZABlADEAYgBlADIAAABAAA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADUAOQAuADIAMwA4ADYAMQAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwBjADIAYgA0AGUAMwA3AGIANwBm
AGIAOAA0AGIAZgBiAGEAMwBiAGQAOABjADYANQBhADcAZABlADEAYgBlADIALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHQA
XwBjADIAYgA0AGUAMwA3AGIANwBmAGIAOAA0AGIAZgBiAGEAMwBiAGQAOABjADYANQBhADcAZABl
ADEAYgBlADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAcwB0AF8A
YwAyAGIANABlADMANwBiADcAZgBiADgANABiAGYAYgBhADMAYgBkADgAYwA2ADUAYQA3AGQAZQAx
AGIAZQAyAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADAA
NQA5AC4AMgAzADgANgAxAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA2ADAANQA5AC4AMgAzADgANgAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAHA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnWarning].PrecedenceConstraints[{AFF40955-2108-43AA-A84B-26D9B4F8F000\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{AFF40955-2108-43AA-A84B-26D9B4F8F000}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{AFF40955-2108-43AA-A84B-26D9B4F8F000}"
          DTS:To="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnWarning].PrecedenceConstraints[{EC64CC5D-060C-4834-B9C4-DD4F608943DC\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{EC64CC5D-060C-4834-B9C4-DD4F608943DC}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{EC64CC5D-060C-4834-B9C4-DD4F608943DC}"
          DTS:To="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="216,42"
          Id="Package\Completion Initial Load(Audit)\Mark Job As Complete in Job"
          TopLeft="5.49999999999994,4.88823528553803" />
        <NodeLayout
          Size="256,42"
          Id="Package\Completion Initial Load(Audit)\Mark Job as Complete in JobInstance"
          TopLeft="282.9,5.50000000000007" />
        <ContainerLayout
          HeaderHeight="43.2"
          IsExpanded="True"
          PanelSize="544,102"
          Size="544,145"
          Id="Package\Completion Initial Load(Audit)"
          TopLeft="406.014290375613,1020.64117642769" />
        <NodeLayout
          Size="217,42"
          Id="Package\Determine if Init vs Incr load"
          TopLeft="485,399" />
        <NodeLayout
          Size="285,42"
          Id="Package\Get LastRecordsProcessedDate for Package"
          TopLeft="447.3,294.9" />
        <NodeLayout
          Size="163,42"
          Id="Package\Incremental load MLISAssignmentC into StagingHistory\Incremental Load"
          TopLeft="110,73" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="365,191"
          Size="365,234"
          Id="Package\Incremental load MLISAssignmentC into StagingHistory"
          TopLeft="705.5,523.5" />
        <NodeLayout
          Size="142,42"
          Id="Package\Init load MLISAssignmentC  into Prestaging\Create Index"
          TopLeft="123.5,337.3" />
        <NodeLayout
          Size="336,42"
          Id="Package\Init load MLISAssignmentC  into Prestaging\Detect index and prepare drop and create index script"
          TopLeft="32.7,5.50000000000007" />
        <NodeLayout
          Size="134,42"
          Id="Package\Init load MLISAssignmentC  into Prestaging\Drop Index"
          TopLeft="5.50000000000001,107.1" />
        <NodeLayout
          Size="220,42"
          Id="Package\Init load MLISAssignmentC  into Prestaging\ESQL Delete Duplicated Rows"
          TopLeft="91,253" />
        <NodeLayout
          Size="133,42"
          Id="Package\Init load MLISAssignmentC  into Prestaging\Initial Load"
          TopLeft="134.3,181.7" />
        <EdgeLayout
          Id="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint]"
          TopLeft="146.033333333333,47.1000000000001">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-73.3333333333333,60"
              Start="0,0"
              End="-73.3333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.1706161137441" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.1706161137441"
                    Point2="0,24.1706161137441"
                    Point3="-4,24.1706161137441" />
                  <mssgle:LineSegment
                    End="-69.3333333333333,24.1706161137441" />
                  <mssgle:CubicBezierSegment
                    Point1="-69.3333333333333,24.1706161137441"
                    Point2="-73.3333333333333,24.1706161137441"
                    Point3="-73.3333333333333,28.1706161137441" />
                  <mssgle:LineSegment
                    End="-73.3333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-44.6666666666666,29.1706161137441,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 1]"
          TopLeft="255.366666666667,47.5000000000001">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-33.7333333333333,134.2"
              Start="0,0"
              End="-33.7333333333333,126.7">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5029150046026" />
                  <mssgle:CubicBezierSegment
                    Point1="0,62.5029150046026"
                    Point2="0,66.5029150046026"
                    Point3="-4,66.5029150046026" />
                  <mssgle:LineSegment
                    End="-29.7333333333333,66.5029150046026" />
                  <mssgle:CubicBezierSegment
                    Point1="-29.7333333333333,66.5029150046026"
                    Point2="-33.7333333333333,66.5029150046026"
                    Point3="-33.7333333333333,70.5029150046026" />
                  <mssgle:LineSegment
                    End="-33.7333333333333,126.7" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.8666666666667,71.5029150046026,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 2]"
          TopLeft="200.9,223.7">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.3"
              Start="0,0"
              End="0,21.8">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.8" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 3]"
          TopLeft="72.5,149.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107.466666666667,32.6000000000001"
              Start="0,0"
              End="107.466666666667,25.1000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.3274888558693" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.3274888558693"
                    Point2="0,19.3274888558693"
                    Point3="4,19.3274888558693" />
                  <mssgle:LineSegment
                    End="103.466666666667,19.3274888558693" />
                  <mssgle:CubicBezierSegment
                    Point1="103.466666666667,19.3274888558693"
                    Point2="107.466666666667,19.3274888558693"
                    Point3="107.466666666667,23.3274888558693" />
                  <mssgle:LineSegment
                    End="107.466666666667,25.1000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Init load MLISAssignmentC  into Prestaging.PrecedenceConstraints[Constraint 4]"
          TopLeft="197.75,295">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.3"
              Start="0,0"
              End="0,34.8">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.8" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,9.39999999999998,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="374,434"
          Size="374,477"
          Id="Package\Init load MLISAssignmentC  into Prestaging"
          TopLeft="51.5000000000002,519.1" />
        <NodeLayout
          Size="223,42"
          Id="Package\Initialization\Validate Connection Managers"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="False"
          PanelSize="234,103"
          Size="161,43"
          Id="Package\Initialization"
          TopLeft="509.3,88.4999999999999" />
        <NodeLayout
          Size="385,42"
          Id="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information"
          TopLeft="12.5,318.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Initialization (Audit)\Log Environment"
          TopLeft="118.5,390.5" />
        <NodeLayout
          Size="273,42"
          Id="Package\Initialization (Audit)\Log Processed  Table JobInstanceSource"
          TopLeft="62,230" />
        <NodeLayout
          Size="164,42"
          Id="Package\Initialization (Audit)\Populate ETLUser"
          TopLeft="114,5.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Initialization (Audit)\Populate Joblog"
          TopLeft="122.5,78.5" />
        <NodeLayout
          Size="208,42"
          Id="Package\Initialization (Audit)\Populate new Job Instance"
          TopLeft="90,152.5" />
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint]"
          TopLeft="196.25,194.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.5"
              Start="0,0"
              End="0,28">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint 1]"
          TopLeft="197,120.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint 2]"
          TopLeft="198,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint 3]"
          TopLeft="201.75,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.5"
              Start="0,0"
              End="0,39">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint 6]"
          TopLeft="202,360.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="49"
          IsExpanded="False"
          PanelSize="408,487"
          Size="197,49"
          Id="Package\Initialization (Audit)"
          TopLeft="498.3,191.7" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="593.3,131.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.2000000000001"
              Start="0,0"
              End="0,52.7000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.7000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="593.3,240.7">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54.2"
              Start="0,0"
              End="0,46.7">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.7" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="238.5,996.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="350.180957042279,24.5411764276899"
              Start="0,0"
              End="350.180957042279,17.0411764276899">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.6815249010227" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.6815249010227"
                    Point2="0,14.6815249010227"
                    Point3="4,14.6815249010227" />
                  <mssgle:LineSegment
                    End="346.180957042279,14.6815249010227" />
                  <mssgle:CubicBezierSegment
                    Point1="346.180957042279,14.6815249010227"
                    Point2="350.180957042279,14.6815249010227"
                    Point3="350.180957042279,18.6815249010227" />
                  <mssgle:LineSegment
                    End="350.180957042279,17.0411764276899" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="591.65,336.9">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62.1"
              Start="0,0"
              End="0,54.6">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.6" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="558.666666666667,441">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-320.166666666666,78.1"
              Start="0,0"
              End="-320.166666666666,70.6">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5829826166514" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.5829826166514"
                    Point2="0,31.5829826166514"
                    Point3="-4,31.5829826166514" />
                  <mssgle:LineSegment
                    End="-316.166666666666,31.5829826166514" />
                  <mssgle:CubicBezierSegment
                    Point1="-316.166666666666,31.5829826166514"
                    Point2="-320.166666666666,31.5829826166514"
                    Point3="-320.166666666666,35.5829826166514" />
                  <mssgle:LineSegment
                    End="-320.166666666666,70.6" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-168.083333333333,36.5829826166514,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="628.333333333333,441">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="259.666666666667,82.5"
              Start="0,0"
              End="259.666666666667,75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.3623055809698" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.3623055809698"
                    Point2="0,33.3623055809698"
                    Point3="4,33.3623055809698" />
                  <mssgle:LineSegment
                    End="255.666666666667,33.3623055809698" />
                  <mssgle:CubicBezierSegment
                    Point1="255.666666666667,33.3623055809698"
                    Point2="259.666666666667,33.3623055809698"
                    Point3="259.666666666667,37.3623055809698" />
                  <mssgle:LineSegment
                    End="259.666666666667,75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="121.833333333333,38.3623055809698,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="888,757.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-120.652376291054,263.14117642769"
              Start="0,0"
              End="-120.652376291054,255.64117642769">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,153.421700854102" />
                  <mssgle:CubicBezierSegment
                    Point1="0,153.421700854102"
                    Point2="0,157.421700854102"
                    Point3="-4,157.421700854102" />
                  <mssgle:LineSegment
                    End="-116.652376291054,157.421700854102" />
                  <mssgle:CubicBezierSegment
                    Point1="-116.652376291054,157.421700854102"
                    Point2="-120.652376291054,157.421700854102"
                    Point3="-120.652376291054,161.421700854102" />
                  <mssgle:LineSegment
                    End="-120.652376291054,255.64117642769" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Only run Initial Load if Target Table&#xA;has 0 rows. "
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="217,58"
          Id="624e6863-7c11-4ddd-b4ac-71d211f8f4ba"
          TopLeft="57.0142798170752,363.829411713227" />
        <AnnotationLayout
          Text="Only run incremental load if Variable::TargetTableCount has count&#xA;greater than 0 "
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="379,58"
          Id="9ddb1dfa-1840-4384-ab04-adce3d9830a5"
          TopLeft="873.785712144813,374.041175552553" />
        <AnnotationLayout
          Text="&#xA;SaleForce MLISAssignmentC Data Processing; Development Date: 25/07/2016  &#xA;Package Design By Darlington C. Nwemeh &#xA;&#xA;Overview: This package is designed with the specific purpose of pulling the data's from MLISAssignmentC Table from  PreStaging to StagingHistory  to aid in the report developments emanating from &#xA;                 Sales-Force Platform. This data will be JOINED to other datasets to produce the LSA Assignments (LSA tied to a specific clients). &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="1085,218"
          Id="39633ea3-f8a3-4c72-96f1-395d3592fd08"
          TopLeft="736.014279817075,21.6411764276891" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Mark Job as a failure"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsNFObj_UpdateAlertList"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[{00F27F3B-8B0B-4F27-93B9-79F60E93CAF0\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[{8D446F25-5A01-4950-B911-02EF0EF7B753\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_98560B88826644138D9C0CDFBBA3FE8F_1"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_98560B88826644138D9C0CDFBBA3FE8F_2"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_1"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_2"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_B6A1792F01474E6E9CE86CD367A7F66A_3"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsNFObj_SendAlert"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{17F1A271-C165-4817-A580-E1BC9E78DF49\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{4E624F2F-E02E-4061-BC89-80DEB8B6B9E8\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{537BC8AF-1717-46F5-8F35-9F82B1569D34\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{6549F15E-D323-4DCC-A436-6480B82BF5A7\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{9100B5CE-71ED-41C3-8DCD-DC65293A9818\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{C1B37640-234E-42E5-BBB3-F7A84F92BB7A\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{C1DDE150-3FAE-4B88-B7DC-FA3DE7B98976\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{E243346B-745C-459A-B200-200147CA9836\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{F7B60BC7-03B1-446C-8851-D424482E28FB\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{32E5952E-37A3-4583-B18F-BEFDC61E504B\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{6DCCEB51-CE4C-49B5-B7EE-CEB87B062913\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnVariableValueChanged]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnVariableValueChanged].PrecedenceConstraints[{5824B184-5A91-44D5-A2D1-6F5939451BB2\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnWarning]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsNFObj_UpdateAlertList"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnWarning].PrecedenceConstraints[{AFF40955-2108-43AA-A84B-26D9B4F8F000\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnWarning].PrecedenceConstraints[{EC64CC5D-060C-4834-B9C4-DD4F608943DC\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Incremental load MLISAssignmentC into StagingHistory\Incremental Load">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="132,42"
          Id="181"
          TopLeft="102.5,332.5" />
        <NodeLayout
          Size="183,42"
          Id="32"
          TopLeft="75.0000000000001,720.5" />
        <NodeLayout
          Size="296,42"
          Id="58"
          TopLeft="18.5000000000001,1130.5" />
        <NodeLayout
          Size="209,42"
          Id="20"
          TopLeft="63.0000000000001,821.5" />
        <NodeLayout
          Size="152,42"
          Id="130"
          TopLeft="85,31" />
        <NodeLayout
          Size="202,42"
          Id="54"
          TopLeft="66.5000000000001,425.5" />
        <NodeLayout
          Size="324,42"
          Id="50"
          TopLeft="5.50000000000011,1025.5" />
        <NodeLayout
          Size="173,42"
          Id="82"
          TopLeft="81.0000000000001,528.5" />
        <NodeLayout
          Size="211,42"
          Id="193"
          TopLeft="62.0000000000001,617.5" />
        <NodeLayout
          Size="174,42"
          Id="189"
          TopLeft="75.5,122.5" />
        <NodeLayout
          Size="175,42"
          Id="2"
          TopLeft="80,231.5" />
        <NodeLayout
          Size="253,42"
          Id="185"
          TopLeft="41.0000000000001,923.5" />
        <EdgeLayout
          Id="237"
          TopLeft="168,374.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="236"
          TopLeft="167,762.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="235"
          TopLeft="161.75,73">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.5"
              Start="0,0"
              End="0,42">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="234"
          TopLeft="167.5,570.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.20890625,14.033203125,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="233"
          TopLeft="167,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61"
              Start="0,0"
              End="0,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="232"
          TopLeft="168,273.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="231"
          TopLeft="167.5,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="241"
          TopLeft="165,164.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67"
              Start="0,0"
              End="0,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="240"
          TopLeft="167.5,467.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61"
              Start="0,0"
              End="0,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="239"
          TopLeft="167,1067.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="238"
          TopLeft="167.5,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Incremental load MLISAssignmentC into StagingHistory\Incremental Load\82">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Incremental load MLISAssignmentC into StagingHistory\Incremental Load\130">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Incremental load MLISAssignmentC into StagingHistory\Incremental Load\58">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Init load MLISAssignmentC  into Prestaging\Initial Load">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="128"
          TopLeft="21,209.5" />
        <NodeLayout
          Size="173,42"
          Id="24"
          TopLeft="21.0000000000001,617.5" />
        <NodeLayout
          Size="174,42"
          Id="124"
          TopLeft="19.5,107.5" />
        <NodeLayout
          Size="152,42"
          Id="72"
          TopLeft="30.5,5.5" />
        <NodeLayout
          Size="202,42"
          Id="20"
          TopLeft="5.50000000000007,515.5" />
        <NodeLayout
          Size="170,42"
          Id="2"
          TopLeft="21.5,311.5" />
        <NodeLayout
          Size="188,42"
          Id="120"
          TopLeft="18.5000000000001,413.5" />
        <EdgeLayout
          Id="141"
          TopLeft="106.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="140"
          TopLeft="107,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="139"
          TopLeft="109.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="138"
          TopLeft="106.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="137"
          TopLeft="106.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="136"
          TopLeft="109.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Init load MLISAssignmentC  into Prestaging\Initial Load\24">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Init load MLISAssignmentC  into Prestaging\Initial Load\72">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>